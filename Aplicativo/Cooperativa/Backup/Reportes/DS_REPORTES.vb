'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class DS_REPORTES
    Inherits DataSet
    
    Private tabletbl_supplier As tbl_supplierDataTable
    
    Private tabletbl_beneficiarios As tbl_beneficiariosDataTable
    
    Private tabletbl_estado_clientes As tbl_estado_clientesDataTable
    
    Private tabletbl_estado_proveedor As tbl_estado_proveedorDataTable
    
    Private tabletbl_ingresos As tbl_ingresosDataTable
    
    Private tabletbl_nc_cxp As tbl_nc_cxpDataTable
    
    Private tabletbl_nd_cxp As tbl_nd_cxpDataTable
    
    Private tabletbl_temp_transacciones As tbl_temp_transaccionesDataTable
    
    Private tabletbl_tipo_entrada_diario As tbl_tipo_entrada_diarioDataTable
    
    Private tabletbl_transacciones As tbl_transaccionesDataTable
    
    Private tabletbl_user As tbl_userDataTable
    
    Private tabletbl_cuadre_caja As tbl_cuadre_cajaDataTable
    
    Private tabletbl_nc_cxc As tbl_nc_cxcDataTable
    
    Private tabletbl_nd_cxc As tbl_nd_cxcDataTable
    
    Private tabletbl_compras_salida_caja As tbl_compras_salida_cajaDataTable
    
    Private tabletbl_clientes As tbl_clientesDataTable
    
    Private tableview_cxc_nota_debito As view_cxc_nota_debitoDataTable
    
    Private tableview_estado_clientes As view_estado_clientesDataTable
    
    Private tableview_prestamos_todos As view_prestamos_todosDataTable
    
    Private tabletbl_catalogo_cta As tbl_catalogo_ctaDataTable
    
    Private tabletbl_cheques As tbl_chequesDataTable
    
    Private tabletbl_deposito As tbl_depositoDataTable
    
    Private tabletbl_profiledocument As tbl_profiledocumentDataTable
    
    Private tableview_ri_cxc As view_ri_cxcDataTable
    
    Private tabletbl_recibo_ingresos_imprimir As tbl_recibo_ingresos_imprimirDataTable
    
    Private tableview_cuotas_todas As view_cuotas_todasDataTable
    
    Private tableview_cxc_nota_credito As view_cxc_nota_creditoDataTable
    
    Private tabletbl_gastos As tbl_gastosDataTable
    
    Private tableview_generar_cuotas As view_generar_cuotasDataTable
    
    Private tabletbl_movimiento_inventario As tbl_movimiento_inventarioDataTable
    
    Private tabletbl_inventario As tbl_inventarioDataTable
    
    Private tabletbl_recibo_egresos As tbl_recibo_egresosDataTable
    
    Private tabletbl_recibo_ingresos_cxc As tbl_recibo_ingresos_cxcDataTable
    
    Private tabletbl_cuadre As tbl_cuadreDataTable
    
    Private tabletbl_cuadre_detalle As tbl_cuadre_detalleDataTable
    
    Private tableview_clientes_con_prestamos As view_clientes_con_prestamosDataTable
    
    Private tableview_estado_proveedor As view_estado_proveedorDataTable
    
    Private tableview_nota_credito_cxp As view_nota_credito_cxpDataTable
    
    Private tableview_nota_debito_cxp As view_nota_debito_cxpDataTable
    
    Private tabletbl_ahorros As tbl_ahorrosDataTable
    
    Private tabletbl_ahorros_categorias As tbl_ahorros_categoriasDataTable
    
    Private tableview_ahorros As view_ahorrosDataTable
    
    Private tableview_tabla_prestamos As view_tabla_prestamosDataTable
    
    Private tableview_retiros As view_retirosDataTable
    
    Private tabletbl_interfascontable As tbl_interfascontableDataTable
    
    Private tabletbl_ahorros_estados As tbl_ahorros_estadosDataTable
    
    Private relationview_ri_cxc_tbl_recibo_ingresos_imprimir As DataRelation
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("tbl_supplier")) Is Nothing) Then
                Me.Tables.Add(New tbl_supplierDataTable(ds.Tables("tbl_supplier")))
            End If
            If (Not (ds.Tables("tbl_beneficiarios")) Is Nothing) Then
                Me.Tables.Add(New tbl_beneficiariosDataTable(ds.Tables("tbl_beneficiarios")))
            End If
            If (Not (ds.Tables("tbl_estado_clientes")) Is Nothing) Then
                Me.Tables.Add(New tbl_estado_clientesDataTable(ds.Tables("tbl_estado_clientes")))
            End If
            If (Not (ds.Tables("tbl_estado_proveedor")) Is Nothing) Then
                Me.Tables.Add(New tbl_estado_proveedorDataTable(ds.Tables("tbl_estado_proveedor")))
            End If
            If (Not (ds.Tables("tbl_ingresos")) Is Nothing) Then
                Me.Tables.Add(New tbl_ingresosDataTable(ds.Tables("tbl_ingresos")))
            End If
            If (Not (ds.Tables("tbl_nc_cxp")) Is Nothing) Then
                Me.Tables.Add(New tbl_nc_cxpDataTable(ds.Tables("tbl_nc_cxp")))
            End If
            If (Not (ds.Tables("tbl_nd_cxp")) Is Nothing) Then
                Me.Tables.Add(New tbl_nd_cxpDataTable(ds.Tables("tbl_nd_cxp")))
            End If
            If (Not (ds.Tables("tbl_temp_transacciones")) Is Nothing) Then
                Me.Tables.Add(New tbl_temp_transaccionesDataTable(ds.Tables("tbl_temp_transacciones")))
            End If
            If (Not (ds.Tables("tbl_tipo_entrada_diario")) Is Nothing) Then
                Me.Tables.Add(New tbl_tipo_entrada_diarioDataTable(ds.Tables("tbl_tipo_entrada_diario")))
            End If
            If (Not (ds.Tables("tbl_transacciones")) Is Nothing) Then
                Me.Tables.Add(New tbl_transaccionesDataTable(ds.Tables("tbl_transacciones")))
            End If
            If (Not (ds.Tables("tbl_user")) Is Nothing) Then
                Me.Tables.Add(New tbl_userDataTable(ds.Tables("tbl_user")))
            End If
            If (Not (ds.Tables("tbl_cuadre_caja")) Is Nothing) Then
                Me.Tables.Add(New tbl_cuadre_cajaDataTable(ds.Tables("tbl_cuadre_caja")))
            End If
            If (Not (ds.Tables("tbl_nc_cxc")) Is Nothing) Then
                Me.Tables.Add(New tbl_nc_cxcDataTable(ds.Tables("tbl_nc_cxc")))
            End If
            If (Not (ds.Tables("tbl_nd_cxc")) Is Nothing) Then
                Me.Tables.Add(New tbl_nd_cxcDataTable(ds.Tables("tbl_nd_cxc")))
            End If
            If (Not (ds.Tables("tbl_compras_salida_caja")) Is Nothing) Then
                Me.Tables.Add(New tbl_compras_salida_cajaDataTable(ds.Tables("tbl_compras_salida_caja")))
            End If
            If (Not (ds.Tables("tbl_clientes")) Is Nothing) Then
                Me.Tables.Add(New tbl_clientesDataTable(ds.Tables("tbl_clientes")))
            End If
            If (Not (ds.Tables("view_cxc_nota_debito")) Is Nothing) Then
                Me.Tables.Add(New view_cxc_nota_debitoDataTable(ds.Tables("view_cxc_nota_debito")))
            End If
            If (Not (ds.Tables("view_estado_clientes")) Is Nothing) Then
                Me.Tables.Add(New view_estado_clientesDataTable(ds.Tables("view_estado_clientes")))
            End If
            If (Not (ds.Tables("view_prestamos_todos")) Is Nothing) Then
                Me.Tables.Add(New view_prestamos_todosDataTable(ds.Tables("view_prestamos_todos")))
            End If
            If (Not (ds.Tables("tbl_catalogo_cta")) Is Nothing) Then
                Me.Tables.Add(New tbl_catalogo_ctaDataTable(ds.Tables("tbl_catalogo_cta")))
            End If
            If (Not (ds.Tables("tbl_cheques")) Is Nothing) Then
                Me.Tables.Add(New tbl_chequesDataTable(ds.Tables("tbl_cheques")))
            End If
            If (Not (ds.Tables("tbl_deposito")) Is Nothing) Then
                Me.Tables.Add(New tbl_depositoDataTable(ds.Tables("tbl_deposito")))
            End If
            If (Not (ds.Tables("tbl_profiledocument")) Is Nothing) Then
                Me.Tables.Add(New tbl_profiledocumentDataTable(ds.Tables("tbl_profiledocument")))
            End If
            If (Not (ds.Tables("view_ri_cxc")) Is Nothing) Then
                Me.Tables.Add(New view_ri_cxcDataTable(ds.Tables("view_ri_cxc")))
            End If
            If (Not (ds.Tables("tbl_recibo_ingresos_imprimir")) Is Nothing) Then
                Me.Tables.Add(New tbl_recibo_ingresos_imprimirDataTable(ds.Tables("tbl_recibo_ingresos_imprimir")))
            End If
            If (Not (ds.Tables("view_cuotas_todas")) Is Nothing) Then
                Me.Tables.Add(New view_cuotas_todasDataTable(ds.Tables("view_cuotas_todas")))
            End If
            If (Not (ds.Tables("view_cxc_nota_credito")) Is Nothing) Then
                Me.Tables.Add(New view_cxc_nota_creditoDataTable(ds.Tables("view_cxc_nota_credito")))
            End If
            If (Not (ds.Tables("tbl_gastos")) Is Nothing) Then
                Me.Tables.Add(New tbl_gastosDataTable(ds.Tables("tbl_gastos")))
            End If
            If (Not (ds.Tables("view_generar_cuotas")) Is Nothing) Then
                Me.Tables.Add(New view_generar_cuotasDataTable(ds.Tables("view_generar_cuotas")))
            End If
            If (Not (ds.Tables("tbl_movimiento_inventario")) Is Nothing) Then
                Me.Tables.Add(New tbl_movimiento_inventarioDataTable(ds.Tables("tbl_movimiento_inventario")))
            End If
            If (Not (ds.Tables("tbl_inventario")) Is Nothing) Then
                Me.Tables.Add(New tbl_inventarioDataTable(ds.Tables("tbl_inventario")))
            End If
            If (Not (ds.Tables("tbl_recibo_egresos")) Is Nothing) Then
                Me.Tables.Add(New tbl_recibo_egresosDataTable(ds.Tables("tbl_recibo_egresos")))
            End If
            If (Not (ds.Tables("tbl_recibo_ingresos_cxc")) Is Nothing) Then
                Me.Tables.Add(New tbl_recibo_ingresos_cxcDataTable(ds.Tables("tbl_recibo_ingresos_cxc")))
            End If
            If (Not (ds.Tables("tbl_cuadre")) Is Nothing) Then
                Me.Tables.Add(New tbl_cuadreDataTable(ds.Tables("tbl_cuadre")))
            End If
            If (Not (ds.Tables("tbl_cuadre_detalle")) Is Nothing) Then
                Me.Tables.Add(New tbl_cuadre_detalleDataTable(ds.Tables("tbl_cuadre_detalle")))
            End If
            If (Not (ds.Tables("view_clientes_con_prestamos")) Is Nothing) Then
                Me.Tables.Add(New view_clientes_con_prestamosDataTable(ds.Tables("view_clientes_con_prestamos")))
            End If
            If (Not (ds.Tables("view_estado_proveedor")) Is Nothing) Then
                Me.Tables.Add(New view_estado_proveedorDataTable(ds.Tables("view_estado_proveedor")))
            End If
            If (Not (ds.Tables("view_nota_credito_cxp")) Is Nothing) Then
                Me.Tables.Add(New view_nota_credito_cxpDataTable(ds.Tables("view_nota_credito_cxp")))
            End If
            If (Not (ds.Tables("view_nota_debito_cxp")) Is Nothing) Then
                Me.Tables.Add(New view_nota_debito_cxpDataTable(ds.Tables("view_nota_debito_cxp")))
            End If
            If (Not (ds.Tables("tbl_ahorros")) Is Nothing) Then
                Me.Tables.Add(New tbl_ahorrosDataTable(ds.Tables("tbl_ahorros")))
            End If
            If (Not (ds.Tables("tbl_ahorros_categorias")) Is Nothing) Then
                Me.Tables.Add(New tbl_ahorros_categoriasDataTable(ds.Tables("tbl_ahorros_categorias")))
            End If
            If (Not (ds.Tables("view_ahorros")) Is Nothing) Then
                Me.Tables.Add(New view_ahorrosDataTable(ds.Tables("view_ahorros")))
            End If
            If (Not (ds.Tables("view_tabla_prestamos")) Is Nothing) Then
                Me.Tables.Add(New view_tabla_prestamosDataTable(ds.Tables("view_tabla_prestamos")))
            End If
            If (Not (ds.Tables("view_retiros")) Is Nothing) Then
                Me.Tables.Add(New view_retirosDataTable(ds.Tables("view_retiros")))
            End If
            If (Not (ds.Tables("tbl_interfascontable")) Is Nothing) Then
                Me.Tables.Add(New tbl_interfascontableDataTable(ds.Tables("tbl_interfascontable")))
            End If
            If (Not (ds.Tables("tbl_ahorros_estados")) Is Nothing) Then
                Me.Tables.Add(New tbl_ahorros_estadosDataTable(ds.Tables("tbl_ahorros_estados")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_supplier As tbl_supplierDataTable
        Get
            Return Me.tabletbl_supplier
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_beneficiarios As tbl_beneficiariosDataTable
        Get
            Return Me.tabletbl_beneficiarios
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_estado_clientes As tbl_estado_clientesDataTable
        Get
            Return Me.tabletbl_estado_clientes
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_estado_proveedor As tbl_estado_proveedorDataTable
        Get
            Return Me.tabletbl_estado_proveedor
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_ingresos As tbl_ingresosDataTable
        Get
            Return Me.tabletbl_ingresos
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_nc_cxp As tbl_nc_cxpDataTable
        Get
            Return Me.tabletbl_nc_cxp
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_nd_cxp As tbl_nd_cxpDataTable
        Get
            Return Me.tabletbl_nd_cxp
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_temp_transacciones As tbl_temp_transaccionesDataTable
        Get
            Return Me.tabletbl_temp_transacciones
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_tipo_entrada_diario As tbl_tipo_entrada_diarioDataTable
        Get
            Return Me.tabletbl_tipo_entrada_diario
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_transacciones As tbl_transaccionesDataTable
        Get
            Return Me.tabletbl_transacciones
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_user As tbl_userDataTable
        Get
            Return Me.tabletbl_user
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_cuadre_caja As tbl_cuadre_cajaDataTable
        Get
            Return Me.tabletbl_cuadre_caja
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_nc_cxc As tbl_nc_cxcDataTable
        Get
            Return Me.tabletbl_nc_cxc
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_nd_cxc As tbl_nd_cxcDataTable
        Get
            Return Me.tabletbl_nd_cxc
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_compras_salida_caja As tbl_compras_salida_cajaDataTable
        Get
            Return Me.tabletbl_compras_salida_caja
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_clientes As tbl_clientesDataTable
        Get
            Return Me.tabletbl_clientes
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_cxc_nota_debito As view_cxc_nota_debitoDataTable
        Get
            Return Me.tableview_cxc_nota_debito
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_estado_clientes As view_estado_clientesDataTable
        Get
            Return Me.tableview_estado_clientes
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_prestamos_todos As view_prestamos_todosDataTable
        Get
            Return Me.tableview_prestamos_todos
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_catalogo_cta As tbl_catalogo_ctaDataTable
        Get
            Return Me.tabletbl_catalogo_cta
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_cheques As tbl_chequesDataTable
        Get
            Return Me.tabletbl_cheques
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_deposito As tbl_depositoDataTable
        Get
            Return Me.tabletbl_deposito
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_profiledocument As tbl_profiledocumentDataTable
        Get
            Return Me.tabletbl_profiledocument
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_ri_cxc As view_ri_cxcDataTable
        Get
            Return Me.tableview_ri_cxc
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_recibo_ingresos_imprimir As tbl_recibo_ingresos_imprimirDataTable
        Get
            Return Me.tabletbl_recibo_ingresos_imprimir
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_cuotas_todas As view_cuotas_todasDataTable
        Get
            Return Me.tableview_cuotas_todas
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_cxc_nota_credito As view_cxc_nota_creditoDataTable
        Get
            Return Me.tableview_cxc_nota_credito
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_gastos As tbl_gastosDataTable
        Get
            Return Me.tabletbl_gastos
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_generar_cuotas As view_generar_cuotasDataTable
        Get
            Return Me.tableview_generar_cuotas
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_movimiento_inventario As tbl_movimiento_inventarioDataTable
        Get
            Return Me.tabletbl_movimiento_inventario
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_inventario As tbl_inventarioDataTable
        Get
            Return Me.tabletbl_inventario
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_recibo_egresos As tbl_recibo_egresosDataTable
        Get
            Return Me.tabletbl_recibo_egresos
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_recibo_ingresos_cxc As tbl_recibo_ingresos_cxcDataTable
        Get
            Return Me.tabletbl_recibo_ingresos_cxc
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_cuadre As tbl_cuadreDataTable
        Get
            Return Me.tabletbl_cuadre
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_cuadre_detalle As tbl_cuadre_detalleDataTable
        Get
            Return Me.tabletbl_cuadre_detalle
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_clientes_con_prestamos As view_clientes_con_prestamosDataTable
        Get
            Return Me.tableview_clientes_con_prestamos
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_estado_proveedor As view_estado_proveedorDataTable
        Get
            Return Me.tableview_estado_proveedor
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_nota_credito_cxp As view_nota_credito_cxpDataTable
        Get
            Return Me.tableview_nota_credito_cxp
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_nota_debito_cxp As view_nota_debito_cxpDataTable
        Get
            Return Me.tableview_nota_debito_cxp
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_ahorros As tbl_ahorrosDataTable
        Get
            Return Me.tabletbl_ahorros
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_ahorros_categorias As tbl_ahorros_categoriasDataTable
        Get
            Return Me.tabletbl_ahorros_categorias
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_ahorros As view_ahorrosDataTable
        Get
            Return Me.tableview_ahorros
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_tabla_prestamos As view_tabla_prestamosDataTable
        Get
            Return Me.tableview_tabla_prestamos
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_retiros As view_retirosDataTable
        Get
            Return Me.tableview_retiros
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_interfascontable As tbl_interfascontableDataTable
        Get
            Return Me.tabletbl_interfascontable
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_ahorros_estados As tbl_ahorros_estadosDataTable
        Get
            Return Me.tabletbl_ahorros_estados
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As DS_REPORTES = CType(MyBase.Clone,DS_REPORTES)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("tbl_supplier")) Is Nothing) Then
            Me.Tables.Add(New tbl_supplierDataTable(ds.Tables("tbl_supplier")))
        End If
        If (Not (ds.Tables("tbl_beneficiarios")) Is Nothing) Then
            Me.Tables.Add(New tbl_beneficiariosDataTable(ds.Tables("tbl_beneficiarios")))
        End If
        If (Not (ds.Tables("tbl_estado_clientes")) Is Nothing) Then
            Me.Tables.Add(New tbl_estado_clientesDataTable(ds.Tables("tbl_estado_clientes")))
        End If
        If (Not (ds.Tables("tbl_estado_proveedor")) Is Nothing) Then
            Me.Tables.Add(New tbl_estado_proveedorDataTable(ds.Tables("tbl_estado_proveedor")))
        End If
        If (Not (ds.Tables("tbl_ingresos")) Is Nothing) Then
            Me.Tables.Add(New tbl_ingresosDataTable(ds.Tables("tbl_ingresos")))
        End If
        If (Not (ds.Tables("tbl_nc_cxp")) Is Nothing) Then
            Me.Tables.Add(New tbl_nc_cxpDataTable(ds.Tables("tbl_nc_cxp")))
        End If
        If (Not (ds.Tables("tbl_nd_cxp")) Is Nothing) Then
            Me.Tables.Add(New tbl_nd_cxpDataTable(ds.Tables("tbl_nd_cxp")))
        End If
        If (Not (ds.Tables("tbl_temp_transacciones")) Is Nothing) Then
            Me.Tables.Add(New tbl_temp_transaccionesDataTable(ds.Tables("tbl_temp_transacciones")))
        End If
        If (Not (ds.Tables("tbl_tipo_entrada_diario")) Is Nothing) Then
            Me.Tables.Add(New tbl_tipo_entrada_diarioDataTable(ds.Tables("tbl_tipo_entrada_diario")))
        End If
        If (Not (ds.Tables("tbl_transacciones")) Is Nothing) Then
            Me.Tables.Add(New tbl_transaccionesDataTable(ds.Tables("tbl_transacciones")))
        End If
        If (Not (ds.Tables("tbl_user")) Is Nothing) Then
            Me.Tables.Add(New tbl_userDataTable(ds.Tables("tbl_user")))
        End If
        If (Not (ds.Tables("tbl_cuadre_caja")) Is Nothing) Then
            Me.Tables.Add(New tbl_cuadre_cajaDataTable(ds.Tables("tbl_cuadre_caja")))
        End If
        If (Not (ds.Tables("tbl_nc_cxc")) Is Nothing) Then
            Me.Tables.Add(New tbl_nc_cxcDataTable(ds.Tables("tbl_nc_cxc")))
        End If
        If (Not (ds.Tables("tbl_nd_cxc")) Is Nothing) Then
            Me.Tables.Add(New tbl_nd_cxcDataTable(ds.Tables("tbl_nd_cxc")))
        End If
        If (Not (ds.Tables("tbl_compras_salida_caja")) Is Nothing) Then
            Me.Tables.Add(New tbl_compras_salida_cajaDataTable(ds.Tables("tbl_compras_salida_caja")))
        End If
        If (Not (ds.Tables("tbl_clientes")) Is Nothing) Then
            Me.Tables.Add(New tbl_clientesDataTable(ds.Tables("tbl_clientes")))
        End If
        If (Not (ds.Tables("view_cxc_nota_debito")) Is Nothing) Then
            Me.Tables.Add(New view_cxc_nota_debitoDataTable(ds.Tables("view_cxc_nota_debito")))
        End If
        If (Not (ds.Tables("view_estado_clientes")) Is Nothing) Then
            Me.Tables.Add(New view_estado_clientesDataTable(ds.Tables("view_estado_clientes")))
        End If
        If (Not (ds.Tables("view_prestamos_todos")) Is Nothing) Then
            Me.Tables.Add(New view_prestamos_todosDataTable(ds.Tables("view_prestamos_todos")))
        End If
        If (Not (ds.Tables("tbl_catalogo_cta")) Is Nothing) Then
            Me.Tables.Add(New tbl_catalogo_ctaDataTable(ds.Tables("tbl_catalogo_cta")))
        End If
        If (Not (ds.Tables("tbl_cheques")) Is Nothing) Then
            Me.Tables.Add(New tbl_chequesDataTable(ds.Tables("tbl_cheques")))
        End If
        If (Not (ds.Tables("tbl_deposito")) Is Nothing) Then
            Me.Tables.Add(New tbl_depositoDataTable(ds.Tables("tbl_deposito")))
        End If
        If (Not (ds.Tables("tbl_profiledocument")) Is Nothing) Then
            Me.Tables.Add(New tbl_profiledocumentDataTable(ds.Tables("tbl_profiledocument")))
        End If
        If (Not (ds.Tables("view_ri_cxc")) Is Nothing) Then
            Me.Tables.Add(New view_ri_cxcDataTable(ds.Tables("view_ri_cxc")))
        End If
        If (Not (ds.Tables("tbl_recibo_ingresos_imprimir")) Is Nothing) Then
            Me.Tables.Add(New tbl_recibo_ingresos_imprimirDataTable(ds.Tables("tbl_recibo_ingresos_imprimir")))
        End If
        If (Not (ds.Tables("view_cuotas_todas")) Is Nothing) Then
            Me.Tables.Add(New view_cuotas_todasDataTable(ds.Tables("view_cuotas_todas")))
        End If
        If (Not (ds.Tables("view_cxc_nota_credito")) Is Nothing) Then
            Me.Tables.Add(New view_cxc_nota_creditoDataTable(ds.Tables("view_cxc_nota_credito")))
        End If
        If (Not (ds.Tables("tbl_gastos")) Is Nothing) Then
            Me.Tables.Add(New tbl_gastosDataTable(ds.Tables("tbl_gastos")))
        End If
        If (Not (ds.Tables("view_generar_cuotas")) Is Nothing) Then
            Me.Tables.Add(New view_generar_cuotasDataTable(ds.Tables("view_generar_cuotas")))
        End If
        If (Not (ds.Tables("tbl_movimiento_inventario")) Is Nothing) Then
            Me.Tables.Add(New tbl_movimiento_inventarioDataTable(ds.Tables("tbl_movimiento_inventario")))
        End If
        If (Not (ds.Tables("tbl_inventario")) Is Nothing) Then
            Me.Tables.Add(New tbl_inventarioDataTable(ds.Tables("tbl_inventario")))
        End If
        If (Not (ds.Tables("tbl_recibo_egresos")) Is Nothing) Then
            Me.Tables.Add(New tbl_recibo_egresosDataTable(ds.Tables("tbl_recibo_egresos")))
        End If
        If (Not (ds.Tables("tbl_recibo_ingresos_cxc")) Is Nothing) Then
            Me.Tables.Add(New tbl_recibo_ingresos_cxcDataTable(ds.Tables("tbl_recibo_ingresos_cxc")))
        End If
        If (Not (ds.Tables("tbl_cuadre")) Is Nothing) Then
            Me.Tables.Add(New tbl_cuadreDataTable(ds.Tables("tbl_cuadre")))
        End If
        If (Not (ds.Tables("tbl_cuadre_detalle")) Is Nothing) Then
            Me.Tables.Add(New tbl_cuadre_detalleDataTable(ds.Tables("tbl_cuadre_detalle")))
        End If
        If (Not (ds.Tables("view_clientes_con_prestamos")) Is Nothing) Then
            Me.Tables.Add(New view_clientes_con_prestamosDataTable(ds.Tables("view_clientes_con_prestamos")))
        End If
        If (Not (ds.Tables("view_estado_proveedor")) Is Nothing) Then
            Me.Tables.Add(New view_estado_proveedorDataTable(ds.Tables("view_estado_proveedor")))
        End If
        If (Not (ds.Tables("view_nota_credito_cxp")) Is Nothing) Then
            Me.Tables.Add(New view_nota_credito_cxpDataTable(ds.Tables("view_nota_credito_cxp")))
        End If
        If (Not (ds.Tables("view_nota_debito_cxp")) Is Nothing) Then
            Me.Tables.Add(New view_nota_debito_cxpDataTable(ds.Tables("view_nota_debito_cxp")))
        End If
        If (Not (ds.Tables("tbl_ahorros")) Is Nothing) Then
            Me.Tables.Add(New tbl_ahorrosDataTable(ds.Tables("tbl_ahorros")))
        End If
        If (Not (ds.Tables("tbl_ahorros_categorias")) Is Nothing) Then
            Me.Tables.Add(New tbl_ahorros_categoriasDataTable(ds.Tables("tbl_ahorros_categorias")))
        End If
        If (Not (ds.Tables("view_ahorros")) Is Nothing) Then
            Me.Tables.Add(New view_ahorrosDataTable(ds.Tables("view_ahorros")))
        End If
        If (Not (ds.Tables("view_tabla_prestamos")) Is Nothing) Then
            Me.Tables.Add(New view_tabla_prestamosDataTable(ds.Tables("view_tabla_prestamos")))
        End If
        If (Not (ds.Tables("view_retiros")) Is Nothing) Then
            Me.Tables.Add(New view_retirosDataTable(ds.Tables("view_retiros")))
        End If
        If (Not (ds.Tables("tbl_interfascontable")) Is Nothing) Then
            Me.Tables.Add(New tbl_interfascontableDataTable(ds.Tables("tbl_interfascontable")))
        End If
        If (Not (ds.Tables("tbl_ahorros_estados")) Is Nothing) Then
            Me.Tables.Add(New tbl_ahorros_estadosDataTable(ds.Tables("tbl_ahorros_estados")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tabletbl_supplier = CType(Me.Tables("tbl_supplier"),tbl_supplierDataTable)
        If (Not (Me.tabletbl_supplier) Is Nothing) Then
            Me.tabletbl_supplier.InitVars
        End If
        Me.tabletbl_beneficiarios = CType(Me.Tables("tbl_beneficiarios"),tbl_beneficiariosDataTable)
        If (Not (Me.tabletbl_beneficiarios) Is Nothing) Then
            Me.tabletbl_beneficiarios.InitVars
        End If
        Me.tabletbl_estado_clientes = CType(Me.Tables("tbl_estado_clientes"),tbl_estado_clientesDataTable)
        If (Not (Me.tabletbl_estado_clientes) Is Nothing) Then
            Me.tabletbl_estado_clientes.InitVars
        End If
        Me.tabletbl_estado_proveedor = CType(Me.Tables("tbl_estado_proveedor"),tbl_estado_proveedorDataTable)
        If (Not (Me.tabletbl_estado_proveedor) Is Nothing) Then
            Me.tabletbl_estado_proveedor.InitVars
        End If
        Me.tabletbl_ingresos = CType(Me.Tables("tbl_ingresos"),tbl_ingresosDataTable)
        If (Not (Me.tabletbl_ingresos) Is Nothing) Then
            Me.tabletbl_ingresos.InitVars
        End If
        Me.tabletbl_nc_cxp = CType(Me.Tables("tbl_nc_cxp"),tbl_nc_cxpDataTable)
        If (Not (Me.tabletbl_nc_cxp) Is Nothing) Then
            Me.tabletbl_nc_cxp.InitVars
        End If
        Me.tabletbl_nd_cxp = CType(Me.Tables("tbl_nd_cxp"),tbl_nd_cxpDataTable)
        If (Not (Me.tabletbl_nd_cxp) Is Nothing) Then
            Me.tabletbl_nd_cxp.InitVars
        End If
        Me.tabletbl_temp_transacciones = CType(Me.Tables("tbl_temp_transacciones"),tbl_temp_transaccionesDataTable)
        If (Not (Me.tabletbl_temp_transacciones) Is Nothing) Then
            Me.tabletbl_temp_transacciones.InitVars
        End If
        Me.tabletbl_tipo_entrada_diario = CType(Me.Tables("tbl_tipo_entrada_diario"),tbl_tipo_entrada_diarioDataTable)
        If (Not (Me.tabletbl_tipo_entrada_diario) Is Nothing) Then
            Me.tabletbl_tipo_entrada_diario.InitVars
        End If
        Me.tabletbl_transacciones = CType(Me.Tables("tbl_transacciones"),tbl_transaccionesDataTable)
        If (Not (Me.tabletbl_transacciones) Is Nothing) Then
            Me.tabletbl_transacciones.InitVars
        End If
        Me.tabletbl_user = CType(Me.Tables("tbl_user"),tbl_userDataTable)
        If (Not (Me.tabletbl_user) Is Nothing) Then
            Me.tabletbl_user.InitVars
        End If
        Me.tabletbl_cuadre_caja = CType(Me.Tables("tbl_cuadre_caja"),tbl_cuadre_cajaDataTable)
        If (Not (Me.tabletbl_cuadre_caja) Is Nothing) Then
            Me.tabletbl_cuadre_caja.InitVars
        End If
        Me.tabletbl_nc_cxc = CType(Me.Tables("tbl_nc_cxc"),tbl_nc_cxcDataTable)
        If (Not (Me.tabletbl_nc_cxc) Is Nothing) Then
            Me.tabletbl_nc_cxc.InitVars
        End If
        Me.tabletbl_nd_cxc = CType(Me.Tables("tbl_nd_cxc"),tbl_nd_cxcDataTable)
        If (Not (Me.tabletbl_nd_cxc) Is Nothing) Then
            Me.tabletbl_nd_cxc.InitVars
        End If
        Me.tabletbl_compras_salida_caja = CType(Me.Tables("tbl_compras_salida_caja"),tbl_compras_salida_cajaDataTable)
        If (Not (Me.tabletbl_compras_salida_caja) Is Nothing) Then
            Me.tabletbl_compras_salida_caja.InitVars
        End If
        Me.tabletbl_clientes = CType(Me.Tables("tbl_clientes"),tbl_clientesDataTable)
        If (Not (Me.tabletbl_clientes) Is Nothing) Then
            Me.tabletbl_clientes.InitVars
        End If
        Me.tableview_cxc_nota_debito = CType(Me.Tables("view_cxc_nota_debito"),view_cxc_nota_debitoDataTable)
        If (Not (Me.tableview_cxc_nota_debito) Is Nothing) Then
            Me.tableview_cxc_nota_debito.InitVars
        End If
        Me.tableview_estado_clientes = CType(Me.Tables("view_estado_clientes"),view_estado_clientesDataTable)
        If (Not (Me.tableview_estado_clientes) Is Nothing) Then
            Me.tableview_estado_clientes.InitVars
        End If
        Me.tableview_prestamos_todos = CType(Me.Tables("view_prestamos_todos"),view_prestamos_todosDataTable)
        If (Not (Me.tableview_prestamos_todos) Is Nothing) Then
            Me.tableview_prestamos_todos.InitVars
        End If
        Me.tabletbl_catalogo_cta = CType(Me.Tables("tbl_catalogo_cta"),tbl_catalogo_ctaDataTable)
        If (Not (Me.tabletbl_catalogo_cta) Is Nothing) Then
            Me.tabletbl_catalogo_cta.InitVars
        End If
        Me.tabletbl_cheques = CType(Me.Tables("tbl_cheques"),tbl_chequesDataTable)
        If (Not (Me.tabletbl_cheques) Is Nothing) Then
            Me.tabletbl_cheques.InitVars
        End If
        Me.tabletbl_deposito = CType(Me.Tables("tbl_deposito"),tbl_depositoDataTable)
        If (Not (Me.tabletbl_deposito) Is Nothing) Then
            Me.tabletbl_deposito.InitVars
        End If
        Me.tabletbl_profiledocument = CType(Me.Tables("tbl_profiledocument"),tbl_profiledocumentDataTable)
        If (Not (Me.tabletbl_profiledocument) Is Nothing) Then
            Me.tabletbl_profiledocument.InitVars
        End If
        Me.tableview_ri_cxc = CType(Me.Tables("view_ri_cxc"),view_ri_cxcDataTable)
        If (Not (Me.tableview_ri_cxc) Is Nothing) Then
            Me.tableview_ri_cxc.InitVars
        End If
        Me.tabletbl_recibo_ingresos_imprimir = CType(Me.Tables("tbl_recibo_ingresos_imprimir"),tbl_recibo_ingresos_imprimirDataTable)
        If (Not (Me.tabletbl_recibo_ingresos_imprimir) Is Nothing) Then
            Me.tabletbl_recibo_ingresos_imprimir.InitVars
        End If
        Me.tableview_cuotas_todas = CType(Me.Tables("view_cuotas_todas"),view_cuotas_todasDataTable)
        If (Not (Me.tableview_cuotas_todas) Is Nothing) Then
            Me.tableview_cuotas_todas.InitVars
        End If
        Me.tableview_cxc_nota_credito = CType(Me.Tables("view_cxc_nota_credito"),view_cxc_nota_creditoDataTable)
        If (Not (Me.tableview_cxc_nota_credito) Is Nothing) Then
            Me.tableview_cxc_nota_credito.InitVars
        End If
        Me.tabletbl_gastos = CType(Me.Tables("tbl_gastos"),tbl_gastosDataTable)
        If (Not (Me.tabletbl_gastos) Is Nothing) Then
            Me.tabletbl_gastos.InitVars
        End If
        Me.tableview_generar_cuotas = CType(Me.Tables("view_generar_cuotas"),view_generar_cuotasDataTable)
        If (Not (Me.tableview_generar_cuotas) Is Nothing) Then
            Me.tableview_generar_cuotas.InitVars
        End If
        Me.tabletbl_movimiento_inventario = CType(Me.Tables("tbl_movimiento_inventario"),tbl_movimiento_inventarioDataTable)
        If (Not (Me.tabletbl_movimiento_inventario) Is Nothing) Then
            Me.tabletbl_movimiento_inventario.InitVars
        End If
        Me.tabletbl_inventario = CType(Me.Tables("tbl_inventario"),tbl_inventarioDataTable)
        If (Not (Me.tabletbl_inventario) Is Nothing) Then
            Me.tabletbl_inventario.InitVars
        End If
        Me.tabletbl_recibo_egresos = CType(Me.Tables("tbl_recibo_egresos"),tbl_recibo_egresosDataTable)
        If (Not (Me.tabletbl_recibo_egresos) Is Nothing) Then
            Me.tabletbl_recibo_egresos.InitVars
        End If
        Me.tabletbl_recibo_ingresos_cxc = CType(Me.Tables("tbl_recibo_ingresos_cxc"),tbl_recibo_ingresos_cxcDataTable)
        If (Not (Me.tabletbl_recibo_ingresos_cxc) Is Nothing) Then
            Me.tabletbl_recibo_ingresos_cxc.InitVars
        End If
        Me.tabletbl_cuadre = CType(Me.Tables("tbl_cuadre"),tbl_cuadreDataTable)
        If (Not (Me.tabletbl_cuadre) Is Nothing) Then
            Me.tabletbl_cuadre.InitVars
        End If
        Me.tabletbl_cuadre_detalle = CType(Me.Tables("tbl_cuadre_detalle"),tbl_cuadre_detalleDataTable)
        If (Not (Me.tabletbl_cuadre_detalle) Is Nothing) Then
            Me.tabletbl_cuadre_detalle.InitVars
        End If
        Me.tableview_clientes_con_prestamos = CType(Me.Tables("view_clientes_con_prestamos"),view_clientes_con_prestamosDataTable)
        If (Not (Me.tableview_clientes_con_prestamos) Is Nothing) Then
            Me.tableview_clientes_con_prestamos.InitVars
        End If
        Me.tableview_estado_proveedor = CType(Me.Tables("view_estado_proveedor"),view_estado_proveedorDataTable)
        If (Not (Me.tableview_estado_proveedor) Is Nothing) Then
            Me.tableview_estado_proveedor.InitVars
        End If
        Me.tableview_nota_credito_cxp = CType(Me.Tables("view_nota_credito_cxp"),view_nota_credito_cxpDataTable)
        If (Not (Me.tableview_nota_credito_cxp) Is Nothing) Then
            Me.tableview_nota_credito_cxp.InitVars
        End If
        Me.tableview_nota_debito_cxp = CType(Me.Tables("view_nota_debito_cxp"),view_nota_debito_cxpDataTable)
        If (Not (Me.tableview_nota_debito_cxp) Is Nothing) Then
            Me.tableview_nota_debito_cxp.InitVars
        End If
        Me.tabletbl_ahorros = CType(Me.Tables("tbl_ahorros"),tbl_ahorrosDataTable)
        If (Not (Me.tabletbl_ahorros) Is Nothing) Then
            Me.tabletbl_ahorros.InitVars
        End If
        Me.tabletbl_ahorros_categorias = CType(Me.Tables("tbl_ahorros_categorias"),tbl_ahorros_categoriasDataTable)
        If (Not (Me.tabletbl_ahorros_categorias) Is Nothing) Then
            Me.tabletbl_ahorros_categorias.InitVars
        End If
        Me.tableview_ahorros = CType(Me.Tables("view_ahorros"),view_ahorrosDataTable)
        If (Not (Me.tableview_ahorros) Is Nothing) Then
            Me.tableview_ahorros.InitVars
        End If
        Me.tableview_tabla_prestamos = CType(Me.Tables("view_tabla_prestamos"),view_tabla_prestamosDataTable)
        If (Not (Me.tableview_tabla_prestamos) Is Nothing) Then
            Me.tableview_tabla_prestamos.InitVars
        End If
        Me.tableview_retiros = CType(Me.Tables("view_retiros"),view_retirosDataTable)
        If (Not (Me.tableview_retiros) Is Nothing) Then
            Me.tableview_retiros.InitVars
        End If
        Me.tabletbl_interfascontable = CType(Me.Tables("tbl_interfascontable"),tbl_interfascontableDataTable)
        If (Not (Me.tabletbl_interfascontable) Is Nothing) Then
            Me.tabletbl_interfascontable.InitVars
        End If
        Me.tabletbl_ahorros_estados = CType(Me.Tables("tbl_ahorros_estados"),tbl_ahorros_estadosDataTable)
        If (Not (Me.tabletbl_ahorros_estados) Is Nothing) Then
            Me.tabletbl_ahorros_estados.InitVars
        End If
        Me.relationview_ri_cxc_tbl_recibo_ingresos_imprimir = Me.Relations("view_ri_cxc_tbl_recibo_ingresos_imprimir")
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "DS_REPORTES"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DS_REPORTES.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tabletbl_supplier = New tbl_supplierDataTable
        Me.Tables.Add(Me.tabletbl_supplier)
        Me.tabletbl_beneficiarios = New tbl_beneficiariosDataTable
        Me.Tables.Add(Me.tabletbl_beneficiarios)
        Me.tabletbl_estado_clientes = New tbl_estado_clientesDataTable
        Me.Tables.Add(Me.tabletbl_estado_clientes)
        Me.tabletbl_estado_proveedor = New tbl_estado_proveedorDataTable
        Me.Tables.Add(Me.tabletbl_estado_proveedor)
        Me.tabletbl_ingresos = New tbl_ingresosDataTable
        Me.Tables.Add(Me.tabletbl_ingresos)
        Me.tabletbl_nc_cxp = New tbl_nc_cxpDataTable
        Me.Tables.Add(Me.tabletbl_nc_cxp)
        Me.tabletbl_nd_cxp = New tbl_nd_cxpDataTable
        Me.Tables.Add(Me.tabletbl_nd_cxp)
        Me.tabletbl_temp_transacciones = New tbl_temp_transaccionesDataTable
        Me.Tables.Add(Me.tabletbl_temp_transacciones)
        Me.tabletbl_tipo_entrada_diario = New tbl_tipo_entrada_diarioDataTable
        Me.Tables.Add(Me.tabletbl_tipo_entrada_diario)
        Me.tabletbl_transacciones = New tbl_transaccionesDataTable
        Me.Tables.Add(Me.tabletbl_transacciones)
        Me.tabletbl_user = New tbl_userDataTable
        Me.Tables.Add(Me.tabletbl_user)
        Me.tabletbl_cuadre_caja = New tbl_cuadre_cajaDataTable
        Me.Tables.Add(Me.tabletbl_cuadre_caja)
        Me.tabletbl_nc_cxc = New tbl_nc_cxcDataTable
        Me.Tables.Add(Me.tabletbl_nc_cxc)
        Me.tabletbl_nd_cxc = New tbl_nd_cxcDataTable
        Me.Tables.Add(Me.tabletbl_nd_cxc)
        Me.tabletbl_compras_salida_caja = New tbl_compras_salida_cajaDataTable
        Me.Tables.Add(Me.tabletbl_compras_salida_caja)
        Me.tabletbl_clientes = New tbl_clientesDataTable
        Me.Tables.Add(Me.tabletbl_clientes)
        Me.tableview_cxc_nota_debito = New view_cxc_nota_debitoDataTable
        Me.Tables.Add(Me.tableview_cxc_nota_debito)
        Me.tableview_estado_clientes = New view_estado_clientesDataTable
        Me.Tables.Add(Me.tableview_estado_clientes)
        Me.tableview_prestamos_todos = New view_prestamos_todosDataTable
        Me.Tables.Add(Me.tableview_prestamos_todos)
        Me.tabletbl_catalogo_cta = New tbl_catalogo_ctaDataTable
        Me.Tables.Add(Me.tabletbl_catalogo_cta)
        Me.tabletbl_cheques = New tbl_chequesDataTable
        Me.Tables.Add(Me.tabletbl_cheques)
        Me.tabletbl_deposito = New tbl_depositoDataTable
        Me.Tables.Add(Me.tabletbl_deposito)
        Me.tabletbl_profiledocument = New tbl_profiledocumentDataTable
        Me.Tables.Add(Me.tabletbl_profiledocument)
        Me.tableview_ri_cxc = New view_ri_cxcDataTable
        Me.Tables.Add(Me.tableview_ri_cxc)
        Me.tabletbl_recibo_ingresos_imprimir = New tbl_recibo_ingresos_imprimirDataTable
        Me.Tables.Add(Me.tabletbl_recibo_ingresos_imprimir)
        Me.tableview_cuotas_todas = New view_cuotas_todasDataTable
        Me.Tables.Add(Me.tableview_cuotas_todas)
        Me.tableview_cxc_nota_credito = New view_cxc_nota_creditoDataTable
        Me.Tables.Add(Me.tableview_cxc_nota_credito)
        Me.tabletbl_gastos = New tbl_gastosDataTable
        Me.Tables.Add(Me.tabletbl_gastos)
        Me.tableview_generar_cuotas = New view_generar_cuotasDataTable
        Me.Tables.Add(Me.tableview_generar_cuotas)
        Me.tabletbl_movimiento_inventario = New tbl_movimiento_inventarioDataTable
        Me.Tables.Add(Me.tabletbl_movimiento_inventario)
        Me.tabletbl_inventario = New tbl_inventarioDataTable
        Me.Tables.Add(Me.tabletbl_inventario)
        Me.tabletbl_recibo_egresos = New tbl_recibo_egresosDataTable
        Me.Tables.Add(Me.tabletbl_recibo_egresos)
        Me.tabletbl_recibo_ingresos_cxc = New tbl_recibo_ingresos_cxcDataTable
        Me.Tables.Add(Me.tabletbl_recibo_ingresos_cxc)
        Me.tabletbl_cuadre = New tbl_cuadreDataTable
        Me.Tables.Add(Me.tabletbl_cuadre)
        Me.tabletbl_cuadre_detalle = New tbl_cuadre_detalleDataTable
        Me.Tables.Add(Me.tabletbl_cuadre_detalle)
        Me.tableview_clientes_con_prestamos = New view_clientes_con_prestamosDataTable
        Me.Tables.Add(Me.tableview_clientes_con_prestamos)
        Me.tableview_estado_proveedor = New view_estado_proveedorDataTable
        Me.Tables.Add(Me.tableview_estado_proveedor)
        Me.tableview_nota_credito_cxp = New view_nota_credito_cxpDataTable
        Me.Tables.Add(Me.tableview_nota_credito_cxp)
        Me.tableview_nota_debito_cxp = New view_nota_debito_cxpDataTable
        Me.Tables.Add(Me.tableview_nota_debito_cxp)
        Me.tabletbl_ahorros = New tbl_ahorrosDataTable
        Me.Tables.Add(Me.tabletbl_ahorros)
        Me.tabletbl_ahorros_categorias = New tbl_ahorros_categoriasDataTable
        Me.Tables.Add(Me.tabletbl_ahorros_categorias)
        Me.tableview_ahorros = New view_ahorrosDataTable
        Me.Tables.Add(Me.tableview_ahorros)
        Me.tableview_tabla_prestamos = New view_tabla_prestamosDataTable
        Me.Tables.Add(Me.tableview_tabla_prestamos)
        Me.tableview_retiros = New view_retirosDataTable
        Me.Tables.Add(Me.tableview_retiros)
        Me.tabletbl_interfascontable = New tbl_interfascontableDataTable
        Me.Tables.Add(Me.tabletbl_interfascontable)
        Me.tabletbl_ahorros_estados = New tbl_ahorros_estadosDataTable
        Me.Tables.Add(Me.tabletbl_ahorros_estados)
        Dim fkc As ForeignKeyConstraint
        fkc = New ForeignKeyConstraint("view_ri_cxc_tbl_recibo_ingresos_imprimir", New DataColumn() {Me.tableview_ri_cxc.view_ri_cxc_IdColumn}, New DataColumn() {Me.tabletbl_recibo_ingresos_imprimir.view_ri_cxc_IdColumn})
        Me.tabletbl_recibo_ingresos_imprimir.Constraints.Add(fkc)
        fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None
        fkc.DeleteRule = System.Data.Rule.Cascade
        fkc.UpdateRule = System.Data.Rule.Cascade
        Me.relationview_ri_cxc_tbl_recibo_ingresos_imprimir = New DataRelation("view_ri_cxc_tbl_recibo_ingresos_imprimir", New DataColumn() {Me.tableview_ri_cxc.view_ri_cxc_IdColumn}, New DataColumn() {Me.tabletbl_recibo_ingresos_imprimir.view_ri_cxc_IdColumn}, false)
        Me.relationview_ri_cxc_tbl_recibo_ingresos_imprimir.Nested = true
        Me.Relations.Add(Me.relationview_ri_cxc_tbl_recibo_ingresos_imprimir)
    End Sub
    
    Private Function ShouldSerializetbl_supplier() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_beneficiarios() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_estado_clientes() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_estado_proveedor() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_ingresos() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_nc_cxp() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_nd_cxp() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_temp_transacciones() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_tipo_entrada_diario() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_transacciones() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_user() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_cuadre_caja() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_nc_cxc() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_nd_cxc() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_compras_salida_caja() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_clientes() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeview_cxc_nota_debito() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeview_estado_clientes() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeview_prestamos_todos() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_catalogo_cta() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_cheques() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_deposito() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_profiledocument() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeview_ri_cxc() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_recibo_ingresos_imprimir() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeview_cuotas_todas() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeview_cxc_nota_credito() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_gastos() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeview_generar_cuotas() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_movimiento_inventario() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_inventario() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_recibo_egresos() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_recibo_ingresos_cxc() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_cuadre() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_cuadre_detalle() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeview_clientes_con_prestamos() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeview_estado_proveedor() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeview_nota_credito_cxp() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeview_nota_debito_cxp() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_ahorros() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_ahorros_categorias() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeview_ahorros() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeview_tabla_prestamos() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeview_retiros() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_interfascontable() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_ahorros_estados() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub tbl_supplierRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_supplierRowChangeEvent)
    
    Public Delegate Sub tbl_beneficiariosRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_beneficiariosRowChangeEvent)
    
    Public Delegate Sub tbl_estado_clientesRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_estado_clientesRowChangeEvent)
    
    Public Delegate Sub tbl_estado_proveedorRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_estado_proveedorRowChangeEvent)
    
    Public Delegate Sub tbl_ingresosRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_ingresosRowChangeEvent)
    
    Public Delegate Sub tbl_nc_cxpRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_nc_cxpRowChangeEvent)
    
    Public Delegate Sub tbl_nd_cxpRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_nd_cxpRowChangeEvent)
    
    Public Delegate Sub tbl_temp_transaccionesRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_temp_transaccionesRowChangeEvent)
    
    Public Delegate Sub tbl_tipo_entrada_diarioRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_tipo_entrada_diarioRowChangeEvent)
    
    Public Delegate Sub tbl_transaccionesRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_transaccionesRowChangeEvent)
    
    Public Delegate Sub tbl_userRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_userRowChangeEvent)
    
    Public Delegate Sub tbl_cuadre_cajaRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_cuadre_cajaRowChangeEvent)
    
    Public Delegate Sub tbl_nc_cxcRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_nc_cxcRowChangeEvent)
    
    Public Delegate Sub tbl_nd_cxcRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_nd_cxcRowChangeEvent)
    
    Public Delegate Sub tbl_compras_salida_cajaRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_compras_salida_cajaRowChangeEvent)
    
    Public Delegate Sub tbl_clientesRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_clientesRowChangeEvent)
    
    Public Delegate Sub view_cxc_nota_debitoRowChangeEventHandler(ByVal sender As Object, ByVal e As view_cxc_nota_debitoRowChangeEvent)
    
    Public Delegate Sub view_estado_clientesRowChangeEventHandler(ByVal sender As Object, ByVal e As view_estado_clientesRowChangeEvent)
    
    Public Delegate Sub view_prestamos_todosRowChangeEventHandler(ByVal sender As Object, ByVal e As view_prestamos_todosRowChangeEvent)
    
    Public Delegate Sub tbl_catalogo_ctaRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_catalogo_ctaRowChangeEvent)
    
    Public Delegate Sub tbl_chequesRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_chequesRowChangeEvent)
    
    Public Delegate Sub tbl_depositoRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_depositoRowChangeEvent)
    
    Public Delegate Sub tbl_profiledocumentRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_profiledocumentRowChangeEvent)
    
    Public Delegate Sub view_ri_cxcRowChangeEventHandler(ByVal sender As Object, ByVal e As view_ri_cxcRowChangeEvent)
    
    Public Delegate Sub tbl_recibo_ingresos_imprimirRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_recibo_ingresos_imprimirRowChangeEvent)
    
    Public Delegate Sub view_cuotas_todasRowChangeEventHandler(ByVal sender As Object, ByVal e As view_cuotas_todasRowChangeEvent)
    
    Public Delegate Sub view_cxc_nota_creditoRowChangeEventHandler(ByVal sender As Object, ByVal e As view_cxc_nota_creditoRowChangeEvent)
    
    Public Delegate Sub tbl_gastosRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_gastosRowChangeEvent)
    
    Public Delegate Sub view_generar_cuotasRowChangeEventHandler(ByVal sender As Object, ByVal e As view_generar_cuotasRowChangeEvent)
    
    Public Delegate Sub tbl_movimiento_inventarioRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_movimiento_inventarioRowChangeEvent)
    
    Public Delegate Sub tbl_inventarioRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_inventarioRowChangeEvent)
    
    Public Delegate Sub tbl_recibo_egresosRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_recibo_egresosRowChangeEvent)
    
    Public Delegate Sub tbl_recibo_ingresos_cxcRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_recibo_ingresos_cxcRowChangeEvent)
    
    Public Delegate Sub tbl_cuadreRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_cuadreRowChangeEvent)
    
    Public Delegate Sub tbl_cuadre_detalleRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_cuadre_detalleRowChangeEvent)
    
    Public Delegate Sub view_clientes_con_prestamosRowChangeEventHandler(ByVal sender As Object, ByVal e As view_clientes_con_prestamosRowChangeEvent)
    
    Public Delegate Sub view_estado_proveedorRowChangeEventHandler(ByVal sender As Object, ByVal e As view_estado_proveedorRowChangeEvent)
    
    Public Delegate Sub view_nota_credito_cxpRowChangeEventHandler(ByVal sender As Object, ByVal e As view_nota_credito_cxpRowChangeEvent)
    
    Public Delegate Sub view_nota_debito_cxpRowChangeEventHandler(ByVal sender As Object, ByVal e As view_nota_debito_cxpRowChangeEvent)
    
    Public Delegate Sub tbl_ahorrosRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_ahorrosRowChangeEvent)
    
    Public Delegate Sub tbl_ahorros_categoriasRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_ahorros_categoriasRowChangeEvent)
    
    Public Delegate Sub view_ahorrosRowChangeEventHandler(ByVal sender As Object, ByVal e As view_ahorrosRowChangeEvent)
    
    Public Delegate Sub view_tabla_prestamosRowChangeEventHandler(ByVal sender As Object, ByVal e As view_tabla_prestamosRowChangeEvent)
    
    Public Delegate Sub view_retirosRowChangeEventHandler(ByVal sender As Object, ByVal e As view_retirosRowChangeEvent)
    
    Public Delegate Sub tbl_interfascontableRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_interfascontableRowChangeEvent)
    
    Public Delegate Sub tbl_ahorros_estadosRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_ahorros_estadosRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_supplierDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfldSupplierID As DataColumn
        
        Private columnfldCompany As DataColumn
        
        Private columnfldAddress As DataColumn
        
        Private columnfldPhone As DataColumn
        
        Private columnfldCel As DataColumn
        
        Private columnfldfax As DataColumn
        
        Private columnfldContact As DataColumn
        
        Private columnfldLimiteCR As DataColumn
        
        Private columnfldBalance As DataColumn
        
        Private columnfldStatus As DataColumn
        
        Private columnfldBy As DataColumn
        
        Private columnfld_clasificacion As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_supplier")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fldSupplierIDColumn As DataColumn
            Get
                Return Me.columnfldSupplierID
            End Get
        End Property
        
        Friend ReadOnly Property fldCompanyColumn As DataColumn
            Get
                Return Me.columnfldCompany
            End Get
        End Property
        
        Friend ReadOnly Property fldAddressColumn As DataColumn
            Get
                Return Me.columnfldAddress
            End Get
        End Property
        
        Friend ReadOnly Property fldPhoneColumn As DataColumn
            Get
                Return Me.columnfldPhone
            End Get
        End Property
        
        Friend ReadOnly Property fldCelColumn As DataColumn
            Get
                Return Me.columnfldCel
            End Get
        End Property
        
        Friend ReadOnly Property fldfaxColumn As DataColumn
            Get
                Return Me.columnfldfax
            End Get
        End Property
        
        Friend ReadOnly Property fldContactColumn As DataColumn
            Get
                Return Me.columnfldContact
            End Get
        End Property
        
        Friend ReadOnly Property fldLimiteCRColumn As DataColumn
            Get
                Return Me.columnfldLimiteCR
            End Get
        End Property
        
        Friend ReadOnly Property fldBalanceColumn As DataColumn
            Get
                Return Me.columnfldBalance
            End Get
        End Property
        
        Friend ReadOnly Property fldStatusColumn As DataColumn
            Get
                Return Me.columnfldStatus
            End Get
        End Property
        
        Friend ReadOnly Property fldByColumn As DataColumn
            Get
                Return Me.columnfldBy
            End Get
        End Property
        
        Friend ReadOnly Property fld_clasificacionColumn As DataColumn
            Get
                Return Me.columnfld_clasificacion
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_supplierRow
            Get
                Return CType(Me.Rows(index),tbl_supplierRow)
            End Get
        End Property
        
        Public Event tbl_supplierRowChanged As tbl_supplierRowChangeEventHandler
        
        Public Event tbl_supplierRowChanging As tbl_supplierRowChangeEventHandler
        
        Public Event tbl_supplierRowDeleted As tbl_supplierRowChangeEventHandler
        
        Public Event tbl_supplierRowDeleting As tbl_supplierRowChangeEventHandler
        
        Public Overloads Sub Addtbl_supplierRow(ByVal row As tbl_supplierRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_supplierRow(ByVal fldCompany As String, ByVal fldAddress As String, ByVal fldPhone As String, ByVal fldCel As String, ByVal fldfax As String, ByVal fldContact As String, ByVal fldLimiteCR As Integer, ByVal fldBalance As Double, ByVal fldStatus As String, ByVal fldBy As String, ByVal fld_clasificacion As String) As tbl_supplierRow
            Dim rowtbl_supplierRow As tbl_supplierRow = CType(Me.NewRow,tbl_supplierRow)
            rowtbl_supplierRow.ItemArray = New Object() {Nothing, fldCompany, fldAddress, fldPhone, fldCel, fldfax, fldContact, fldLimiteCR, fldBalance, fldStatus, fldBy, fld_clasificacion}
            Me.Rows.Add(rowtbl_supplierRow)
            Return rowtbl_supplierRow
        End Function
        
        Public Function FindByfldSupplierID(ByVal fldSupplierID As Integer) As tbl_supplierRow
            Return CType(Me.Rows.Find(New Object() {fldSupplierID}),tbl_supplierRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_supplierDataTable = CType(MyBase.Clone,tbl_supplierDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_supplierDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfldSupplierID = Me.Columns("fldSupplierID")
            Me.columnfldCompany = Me.Columns("fldCompany")
            Me.columnfldAddress = Me.Columns("fldAddress")
            Me.columnfldPhone = Me.Columns("fldPhone")
            Me.columnfldCel = Me.Columns("fldCel")
            Me.columnfldfax = Me.Columns("fldfax")
            Me.columnfldContact = Me.Columns("fldContact")
            Me.columnfldLimiteCR = Me.Columns("fldLimiteCR")
            Me.columnfldBalance = Me.Columns("fldBalance")
            Me.columnfldStatus = Me.Columns("fldStatus")
            Me.columnfldBy = Me.Columns("fldBy")
            Me.columnfld_clasificacion = Me.Columns("fld_clasificacion")
        End Sub
        
        Private Sub InitClass()
            Me.columnfldSupplierID = New DataColumn("fldSupplierID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldSupplierID)
            Me.columnfldCompany = New DataColumn("fldCompany", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldCompany)
            Me.columnfldAddress = New DataColumn("fldAddress", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldAddress)
            Me.columnfldPhone = New DataColumn("fldPhone", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldPhone)
            Me.columnfldCel = New DataColumn("fldCel", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldCel)
            Me.columnfldfax = New DataColumn("fldfax", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldfax)
            Me.columnfldContact = New DataColumn("fldContact", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldContact)
            Me.columnfldLimiteCR = New DataColumn("fldLimiteCR", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldLimiteCR)
            Me.columnfldBalance = New DataColumn("fldBalance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldBalance)
            Me.columnfldStatus = New DataColumn("fldStatus", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldStatus)
            Me.columnfldBy = New DataColumn("fldBy", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldBy)
            Me.columnfld_clasificacion = New DataColumn("fld_clasificacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_clasificacion)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey9", New DataColumn() {Me.columnfldSupplierID}, true))
            Me.columnfldSupplierID.AutoIncrement = true
            Me.columnfldSupplierID.AllowDBNull = false
            Me.columnfldSupplierID.Unique = true
        End Sub
        
        Public Function Newtbl_supplierRow() As tbl_supplierRow
            Return CType(Me.NewRow,tbl_supplierRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_supplierRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_supplierRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_supplierRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_supplierRowChanged(Me, New tbl_supplierRowChangeEvent(CType(e.Row,tbl_supplierRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_supplierRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_supplierRowChanging(Me, New tbl_supplierRowChangeEvent(CType(e.Row,tbl_supplierRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_supplierRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_supplierRowDeleted(Me, New tbl_supplierRowChangeEvent(CType(e.Row,tbl_supplierRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_supplierRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_supplierRowDeleting(Me, New tbl_supplierRowChangeEvent(CType(e.Row,tbl_supplierRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_supplierRow(ByVal row As tbl_supplierRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_supplierRow
        Inherits DataRow
        
        Private tabletbl_supplier As tbl_supplierDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_supplier = CType(Me.Table,tbl_supplierDataTable)
        End Sub
        
        Public Property fldSupplierID As Integer
            Get
                Return CType(Me(Me.tabletbl_supplier.fldSupplierIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_supplier.fldSupplierIDColumn) = value
            End Set
        End Property
        
        Public Property fldCompany As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_supplier.fldCompanyColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_supplier.fldCompanyColumn) = value
            End Set
        End Property
        
        Public Property fldAddress As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_supplier.fldAddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_supplier.fldAddressColumn) = value
            End Set
        End Property
        
        Public Property fldPhone As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_supplier.fldPhoneColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_supplier.fldPhoneColumn) = value
            End Set
        End Property
        
        Public Property fldCel As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_supplier.fldCelColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_supplier.fldCelColumn) = value
            End Set
        End Property
        
        Public Property fldfax As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_supplier.fldfaxColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_supplier.fldfaxColumn) = value
            End Set
        End Property
        
        Public Property fldContact As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_supplier.fldContactColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_supplier.fldContactColumn) = value
            End Set
        End Property
        
        Public Property fldLimiteCR As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_supplier.fldLimiteCRColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_supplier.fldLimiteCRColumn) = value
            End Set
        End Property
        
        Public Property fldBalance As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_supplier.fldBalanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_supplier.fldBalanceColumn) = value
            End Set
        End Property
        
        Public Property fldStatus As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_supplier.fldStatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_supplier.fldStatusColumn) = value
            End Set
        End Property
        
        Public Property fldBy As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_supplier.fldByColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_supplier.fldByColumn) = value
            End Set
        End Property
        
        Public Property fld_clasificacion As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_supplier.fld_clasificacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_supplier.fld_clasificacionColumn) = value
            End Set
        End Property
        
        Public Function IsfldCompanyNull() As Boolean
            Return Me.IsNull(Me.tabletbl_supplier.fldCompanyColumn)
        End Function
        
        Public Sub SetfldCompanyNull()
            Me(Me.tabletbl_supplier.fldCompanyColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldAddressNull() As Boolean
            Return Me.IsNull(Me.tabletbl_supplier.fldAddressColumn)
        End Function
        
        Public Sub SetfldAddressNull()
            Me(Me.tabletbl_supplier.fldAddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldPhoneNull() As Boolean
            Return Me.IsNull(Me.tabletbl_supplier.fldPhoneColumn)
        End Function
        
        Public Sub SetfldPhoneNull()
            Me(Me.tabletbl_supplier.fldPhoneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldCelNull() As Boolean
            Return Me.IsNull(Me.tabletbl_supplier.fldCelColumn)
        End Function
        
        Public Sub SetfldCelNull()
            Me(Me.tabletbl_supplier.fldCelColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldfaxNull() As Boolean
            Return Me.IsNull(Me.tabletbl_supplier.fldfaxColumn)
        End Function
        
        Public Sub SetfldfaxNull()
            Me(Me.tabletbl_supplier.fldfaxColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldContactNull() As Boolean
            Return Me.IsNull(Me.tabletbl_supplier.fldContactColumn)
        End Function
        
        Public Sub SetfldContactNull()
            Me(Me.tabletbl_supplier.fldContactColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldLimiteCRNull() As Boolean
            Return Me.IsNull(Me.tabletbl_supplier.fldLimiteCRColumn)
        End Function
        
        Public Sub SetfldLimiteCRNull()
            Me(Me.tabletbl_supplier.fldLimiteCRColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldBalanceNull() As Boolean
            Return Me.IsNull(Me.tabletbl_supplier.fldBalanceColumn)
        End Function
        
        Public Sub SetfldBalanceNull()
            Me(Me.tabletbl_supplier.fldBalanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_supplier.fldStatusColumn)
        End Function
        
        Public Sub SetfldStatusNull()
            Me(Me.tabletbl_supplier.fldStatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldByNull() As Boolean
            Return Me.IsNull(Me.tabletbl_supplier.fldByColumn)
        End Function
        
        Public Sub SetfldByNull()
            Me(Me.tabletbl_supplier.fldByColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_clasificacionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_supplier.fld_clasificacionColumn)
        End Function
        
        Public Sub Setfld_clasificacionNull()
            Me(Me.tabletbl_supplier.fld_clasificacionColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_supplierRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_supplierRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_supplierRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_supplierRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_beneficiariosDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id As DataColumn
        
        Private columnfld_beneficiario As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_beneficiarios")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_beneficiarioColumn As DataColumn
            Get
                Return Me.columnfld_beneficiario
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_beneficiariosRow
            Get
                Return CType(Me.Rows(index),tbl_beneficiariosRow)
            End Get
        End Property
        
        Public Event tbl_beneficiariosRowChanged As tbl_beneficiariosRowChangeEventHandler
        
        Public Event tbl_beneficiariosRowChanging As tbl_beneficiariosRowChangeEventHandler
        
        Public Event tbl_beneficiariosRowDeleted As tbl_beneficiariosRowChangeEventHandler
        
        Public Event tbl_beneficiariosRowDeleting As tbl_beneficiariosRowChangeEventHandler
        
        Public Overloads Sub Addtbl_beneficiariosRow(ByVal row As tbl_beneficiariosRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_beneficiariosRow(ByVal fld_beneficiario As String) As tbl_beneficiariosRow
            Dim rowtbl_beneficiariosRow As tbl_beneficiariosRow = CType(Me.NewRow,tbl_beneficiariosRow)
            rowtbl_beneficiariosRow.ItemArray = New Object() {Nothing, fld_beneficiario}
            Me.Rows.Add(rowtbl_beneficiariosRow)
            Return rowtbl_beneficiariosRow
        End Function
        
        Public Function FindByfld_id(ByVal fld_id As Integer) As tbl_beneficiariosRow
            Return CType(Me.Rows.Find(New Object() {fld_id}),tbl_beneficiariosRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_beneficiariosDataTable = CType(MyBase.Clone,tbl_beneficiariosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_beneficiariosDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnfld_beneficiario = Me.Columns("fld_beneficiario")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnfld_beneficiario = New DataColumn("fld_beneficiario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_beneficiario)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey10", New DataColumn() {Me.columnfld_id}, true))
            Me.columnfld_id.AutoIncrement = true
            Me.columnfld_id.AllowDBNull = false
            Me.columnfld_id.Unique = true
        End Sub
        
        Public Function Newtbl_beneficiariosRow() As tbl_beneficiariosRow
            Return CType(Me.NewRow,tbl_beneficiariosRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_beneficiariosRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_beneficiariosRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_beneficiariosRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_beneficiariosRowChanged(Me, New tbl_beneficiariosRowChangeEvent(CType(e.Row,tbl_beneficiariosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_beneficiariosRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_beneficiariosRowChanging(Me, New tbl_beneficiariosRowChangeEvent(CType(e.Row,tbl_beneficiariosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_beneficiariosRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_beneficiariosRowDeleted(Me, New tbl_beneficiariosRowChangeEvent(CType(e.Row,tbl_beneficiariosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_beneficiariosRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_beneficiariosRowDeleting(Me, New tbl_beneficiariosRowChangeEvent(CType(e.Row,tbl_beneficiariosRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_beneficiariosRow(ByVal row As tbl_beneficiariosRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_beneficiariosRow
        Inherits DataRow
        
        Private tabletbl_beneficiarios As tbl_beneficiariosDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_beneficiarios = CType(Me.Table,tbl_beneficiariosDataTable)
        End Sub
        
        Public Property fld_id As Integer
            Get
                Return CType(Me(Me.tabletbl_beneficiarios.fld_idColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_beneficiarios.fld_idColumn) = value
            End Set
        End Property
        
        Public Property fld_beneficiario As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_beneficiarios.fld_beneficiarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_beneficiarios.fld_beneficiarioColumn) = value
            End Set
        End Property
        
        Public Function Isfld_beneficiarioNull() As Boolean
            Return Me.IsNull(Me.tabletbl_beneficiarios.fld_beneficiarioColumn)
        End Function
        
        Public Sub Setfld_beneficiarioNull()
            Me(Me.tabletbl_beneficiarios.fld_beneficiarioColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_beneficiariosRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_beneficiariosRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_beneficiariosRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_beneficiariosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_estado_clientesDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id_ec As DataColumn
        
        Private columnfld_date As DataColumn
        
        Private columnfld_description As DataColumn
        
        Private columnfld_dr As DataColumn
        
        Private columnfld_cr As DataColumn
        
        Private columnfld_bce_cliente As DataColumn
        
        Private columnfld_cliente_id As DataColumn
        
        Private columnfld_tipo_doc As DataColumn
        
        Private columnfld_tipo_doc_id As DataColumn
        
        Private columnfld_usuario As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_estado_clientes")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_ecColumn As DataColumn
            Get
                Return Me.columnfld_id_ec
            End Get
        End Property
        
        Friend ReadOnly Property fld_dateColumn As DataColumn
            Get
                Return Me.columnfld_date
            End Get
        End Property
        
        Friend ReadOnly Property fld_descriptionColumn As DataColumn
            Get
                Return Me.columnfld_description
            End Get
        End Property
        
        Friend ReadOnly Property fld_drColumn As DataColumn
            Get
                Return Me.columnfld_dr
            End Get
        End Property
        
        Friend ReadOnly Property fld_crColumn As DataColumn
            Get
                Return Me.columnfld_cr
            End Get
        End Property
        
        Friend ReadOnly Property fld_bce_clienteColumn As DataColumn
            Get
                Return Me.columnfld_bce_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_cliente_idColumn As DataColumn
            Get
                Return Me.columnfld_cliente_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_tipo_docColumn As DataColumn
            Get
                Return Me.columnfld_tipo_doc
            End Get
        End Property
        
        Friend ReadOnly Property fld_tipo_doc_idColumn As DataColumn
            Get
                Return Me.columnfld_tipo_doc_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_usuarioColumn As DataColumn
            Get
                Return Me.columnfld_usuario
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_estado_clientesRow
            Get
                Return CType(Me.Rows(index),tbl_estado_clientesRow)
            End Get
        End Property
        
        Public Event tbl_estado_clientesRowChanged As tbl_estado_clientesRowChangeEventHandler
        
        Public Event tbl_estado_clientesRowChanging As tbl_estado_clientesRowChangeEventHandler
        
        Public Event tbl_estado_clientesRowDeleted As tbl_estado_clientesRowChangeEventHandler
        
        Public Event tbl_estado_clientesRowDeleting As tbl_estado_clientesRowChangeEventHandler
        
        Public Overloads Sub Addtbl_estado_clientesRow(ByVal row As tbl_estado_clientesRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_estado_clientesRow(ByVal fld_date As Date, ByVal fld_description As String, ByVal fld_dr As Double, ByVal fld_cr As Double, ByVal fld_bce_cliente As Double, ByVal fld_cliente_id As Integer, ByVal fld_tipo_doc As String, ByVal fld_tipo_doc_id As String, ByVal fld_usuario As String) As tbl_estado_clientesRow
            Dim rowtbl_estado_clientesRow As tbl_estado_clientesRow = CType(Me.NewRow,tbl_estado_clientesRow)
            rowtbl_estado_clientesRow.ItemArray = New Object() {Nothing, fld_date, fld_description, fld_dr, fld_cr, fld_bce_cliente, fld_cliente_id, fld_tipo_doc, fld_tipo_doc_id, fld_usuario}
            Me.Rows.Add(rowtbl_estado_clientesRow)
            Return rowtbl_estado_clientesRow
        End Function
        
        Public Function FindByfld_id_ec(ByVal fld_id_ec As Integer) As tbl_estado_clientesRow
            Return CType(Me.Rows.Find(New Object() {fld_id_ec}),tbl_estado_clientesRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_estado_clientesDataTable = CType(MyBase.Clone,tbl_estado_clientesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_estado_clientesDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id_ec = Me.Columns("fld_id_ec")
            Me.columnfld_date = Me.Columns("fld_date")
            Me.columnfld_description = Me.Columns("fld_description")
            Me.columnfld_dr = Me.Columns("fld_dr")
            Me.columnfld_cr = Me.Columns("fld_cr")
            Me.columnfld_bce_cliente = Me.Columns("fld_bce_cliente")
            Me.columnfld_cliente_id = Me.Columns("fld_cliente_id")
            Me.columnfld_tipo_doc = Me.Columns("fld_tipo_doc")
            Me.columnfld_tipo_doc_id = Me.Columns("fld_tipo_doc_id")
            Me.columnfld_usuario = Me.Columns("fld_usuario")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id_ec = New DataColumn("fld_id_ec", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_ec)
            Me.columnfld_date = New DataColumn("fld_date", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_date)
            Me.columnfld_description = New DataColumn("fld_description", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_description)
            Me.columnfld_dr = New DataColumn("fld_dr", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_dr)
            Me.columnfld_cr = New DataColumn("fld_cr", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cr)
            Me.columnfld_bce_cliente = New DataColumn("fld_bce_cliente", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce_cliente)
            Me.columnfld_cliente_id = New DataColumn("fld_cliente_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cliente_id)
            Me.columnfld_tipo_doc = New DataColumn("fld_tipo_doc", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_tipo_doc)
            Me.columnfld_tipo_doc_id = New DataColumn("fld_tipo_doc_id", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_tipo_doc_id)
            Me.columnfld_usuario = New DataColumn("fld_usuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_usuario)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey22", New DataColumn() {Me.columnfld_id_ec}, true))
            Me.columnfld_id_ec.AutoIncrement = true
            Me.columnfld_id_ec.AllowDBNull = false
            Me.columnfld_id_ec.Unique = true
        End Sub
        
        Public Function Newtbl_estado_clientesRow() As tbl_estado_clientesRow
            Return CType(Me.NewRow,tbl_estado_clientesRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_estado_clientesRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_estado_clientesRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_estado_clientesRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_estado_clientesRowChanged(Me, New tbl_estado_clientesRowChangeEvent(CType(e.Row,tbl_estado_clientesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_estado_clientesRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_estado_clientesRowChanging(Me, New tbl_estado_clientesRowChangeEvent(CType(e.Row,tbl_estado_clientesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_estado_clientesRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_estado_clientesRowDeleted(Me, New tbl_estado_clientesRowChangeEvent(CType(e.Row,tbl_estado_clientesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_estado_clientesRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_estado_clientesRowDeleting(Me, New tbl_estado_clientesRowChangeEvent(CType(e.Row,tbl_estado_clientesRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_estado_clientesRow(ByVal row As tbl_estado_clientesRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_estado_clientesRow
        Inherits DataRow
        
        Private tabletbl_estado_clientes As tbl_estado_clientesDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_estado_clientes = CType(Me.Table,tbl_estado_clientesDataTable)
        End Sub
        
        Public Property fld_id_ec As Integer
            Get
                Return CType(Me(Me.tabletbl_estado_clientes.fld_id_ecColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_estado_clientes.fld_id_ecColumn) = value
            End Set
        End Property
        
        Public Property fld_date As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_estado_clientes.fld_dateColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_estado_clientes.fld_dateColumn) = value
            End Set
        End Property
        
        Public Property fld_description As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_estado_clientes.fld_descriptionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_estado_clientes.fld_descriptionColumn) = value
            End Set
        End Property
        
        Public Property fld_dr As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_estado_clientes.fld_drColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_estado_clientes.fld_drColumn) = value
            End Set
        End Property
        
        Public Property fld_cr As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_estado_clientes.fld_crColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_estado_clientes.fld_crColumn) = value
            End Set
        End Property
        
        Public Property fld_bce_cliente As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_estado_clientes.fld_bce_clienteColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_estado_clientes.fld_bce_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_cliente_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_estado_clientes.fld_cliente_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_estado_clientes.fld_cliente_idColumn) = value
            End Set
        End Property
        
        Public Property fld_tipo_doc As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_estado_clientes.fld_tipo_docColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_estado_clientes.fld_tipo_docColumn) = value
            End Set
        End Property
        
        Public Property fld_tipo_doc_id As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_estado_clientes.fld_tipo_doc_idColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_estado_clientes.fld_tipo_doc_idColumn) = value
            End Set
        End Property
        
        Public Property fld_usuario As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_estado_clientes.fld_usuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_estado_clientes.fld_usuarioColumn) = value
            End Set
        End Property
        
        Public Function Isfld_dateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_estado_clientes.fld_dateColumn)
        End Function
        
        Public Sub Setfld_dateNull()
            Me(Me.tabletbl_estado_clientes.fld_dateColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_descriptionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_estado_clientes.fld_descriptionColumn)
        End Function
        
        Public Sub Setfld_descriptionNull()
            Me(Me.tabletbl_estado_clientes.fld_descriptionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_drNull() As Boolean
            Return Me.IsNull(Me.tabletbl_estado_clientes.fld_drColumn)
        End Function
        
        Public Sub Setfld_drNull()
            Me(Me.tabletbl_estado_clientes.fld_drColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_crNull() As Boolean
            Return Me.IsNull(Me.tabletbl_estado_clientes.fld_crColumn)
        End Function
        
        Public Sub Setfld_crNull()
            Me(Me.tabletbl_estado_clientes.fld_crColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bce_clienteNull() As Boolean
            Return Me.IsNull(Me.tabletbl_estado_clientes.fld_bce_clienteColumn)
        End Function
        
        Public Sub Setfld_bce_clienteNull()
            Me(Me.tabletbl_estado_clientes.fld_bce_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cliente_idNull() As Boolean
            Return Me.IsNull(Me.tabletbl_estado_clientes.fld_cliente_idColumn)
        End Function
        
        Public Sub Setfld_cliente_idNull()
            Me(Me.tabletbl_estado_clientes.fld_cliente_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_tipo_docNull() As Boolean
            Return Me.IsNull(Me.tabletbl_estado_clientes.fld_tipo_docColumn)
        End Function
        
        Public Sub Setfld_tipo_docNull()
            Me(Me.tabletbl_estado_clientes.fld_tipo_docColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_tipo_doc_idNull() As Boolean
            Return Me.IsNull(Me.tabletbl_estado_clientes.fld_tipo_doc_idColumn)
        End Function
        
        Public Sub Setfld_tipo_doc_idNull()
            Me(Me.tabletbl_estado_clientes.fld_tipo_doc_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_usuarioNull() As Boolean
            Return Me.IsNull(Me.tabletbl_estado_clientes.fld_usuarioColumn)
        End Function
        
        Public Sub Setfld_usuarioNull()
            Me(Me.tabletbl_estado_clientes.fld_usuarioColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_estado_clientesRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_estado_clientesRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_estado_clientesRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_estado_clientesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_estado_proveedorDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id_ec_p As DataColumn
        
        Private columnfld_date As DataColumn
        
        Private columnfld_description As DataColumn
        
        Private columnfld_dr As DataColumn
        
        Private columnfld_cr As DataColumn
        
        Private columnfld_bce_proveedor As DataColumn
        
        Private columnfld_proveedor_id As DataColumn
        
        Private columnfld_tipo_doc As DataColumn
        
        Private columnfld_tipo_doc_id As DataColumn
        
        Private columnfld_usuario As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_estado_proveedor")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_ec_pColumn As DataColumn
            Get
                Return Me.columnfld_id_ec_p
            End Get
        End Property
        
        Friend ReadOnly Property fld_dateColumn As DataColumn
            Get
                Return Me.columnfld_date
            End Get
        End Property
        
        Friend ReadOnly Property fld_descriptionColumn As DataColumn
            Get
                Return Me.columnfld_description
            End Get
        End Property
        
        Friend ReadOnly Property fld_drColumn As DataColumn
            Get
                Return Me.columnfld_dr
            End Get
        End Property
        
        Friend ReadOnly Property fld_crColumn As DataColumn
            Get
                Return Me.columnfld_cr
            End Get
        End Property
        
        Friend ReadOnly Property fld_bce_proveedorColumn As DataColumn
            Get
                Return Me.columnfld_bce_proveedor
            End Get
        End Property
        
        Friend ReadOnly Property fld_proveedor_idColumn As DataColumn
            Get
                Return Me.columnfld_proveedor_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_tipo_docColumn As DataColumn
            Get
                Return Me.columnfld_tipo_doc
            End Get
        End Property
        
        Friend ReadOnly Property fld_tipo_doc_idColumn As DataColumn
            Get
                Return Me.columnfld_tipo_doc_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_usuarioColumn As DataColumn
            Get
                Return Me.columnfld_usuario
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_estado_proveedorRow
            Get
                Return CType(Me.Rows(index),tbl_estado_proveedorRow)
            End Get
        End Property
        
        Public Event tbl_estado_proveedorRowChanged As tbl_estado_proveedorRowChangeEventHandler
        
        Public Event tbl_estado_proveedorRowChanging As tbl_estado_proveedorRowChangeEventHandler
        
        Public Event tbl_estado_proveedorRowDeleted As tbl_estado_proveedorRowChangeEventHandler
        
        Public Event tbl_estado_proveedorRowDeleting As tbl_estado_proveedorRowChangeEventHandler
        
        Public Overloads Sub Addtbl_estado_proveedorRow(ByVal row As tbl_estado_proveedorRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_estado_proveedorRow(ByVal fld_date As Date, ByVal fld_description As String, ByVal fld_dr As Double, ByVal fld_cr As Double, ByVal fld_bce_proveedor As Double, ByVal fld_proveedor_id As Integer, ByVal fld_tipo_doc As String, ByVal fld_tipo_doc_id As String, ByVal fld_usuario As String) As tbl_estado_proveedorRow
            Dim rowtbl_estado_proveedorRow As tbl_estado_proveedorRow = CType(Me.NewRow,tbl_estado_proveedorRow)
            rowtbl_estado_proveedorRow.ItemArray = New Object() {Nothing, fld_date, fld_description, fld_dr, fld_cr, fld_bce_proveedor, fld_proveedor_id, fld_tipo_doc, fld_tipo_doc_id, fld_usuario}
            Me.Rows.Add(rowtbl_estado_proveedorRow)
            Return rowtbl_estado_proveedorRow
        End Function
        
        Public Function FindByfld_id_ec_p(ByVal fld_id_ec_p As Integer) As tbl_estado_proveedorRow
            Return CType(Me.Rows.Find(New Object() {fld_id_ec_p}),tbl_estado_proveedorRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_estado_proveedorDataTable = CType(MyBase.Clone,tbl_estado_proveedorDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_estado_proveedorDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id_ec_p = Me.Columns("fld_id_ec_p")
            Me.columnfld_date = Me.Columns("fld_date")
            Me.columnfld_description = Me.Columns("fld_description")
            Me.columnfld_dr = Me.Columns("fld_dr")
            Me.columnfld_cr = Me.Columns("fld_cr")
            Me.columnfld_bce_proveedor = Me.Columns("fld_bce_proveedor")
            Me.columnfld_proveedor_id = Me.Columns("fld_proveedor_id")
            Me.columnfld_tipo_doc = Me.Columns("fld_tipo_doc")
            Me.columnfld_tipo_doc_id = Me.Columns("fld_tipo_doc_id")
            Me.columnfld_usuario = Me.Columns("fld_usuario")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id_ec_p = New DataColumn("fld_id_ec_p", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_ec_p)
            Me.columnfld_date = New DataColumn("fld_date", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_date)
            Me.columnfld_description = New DataColumn("fld_description", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_description)
            Me.columnfld_dr = New DataColumn("fld_dr", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_dr)
            Me.columnfld_cr = New DataColumn("fld_cr", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cr)
            Me.columnfld_bce_proveedor = New DataColumn("fld_bce_proveedor", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce_proveedor)
            Me.columnfld_proveedor_id = New DataColumn("fld_proveedor_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_proveedor_id)
            Me.columnfld_tipo_doc = New DataColumn("fld_tipo_doc", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_tipo_doc)
            Me.columnfld_tipo_doc_id = New DataColumn("fld_tipo_doc_id", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_tipo_doc_id)
            Me.columnfld_usuario = New DataColumn("fld_usuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_usuario)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey23", New DataColumn() {Me.columnfld_id_ec_p}, true))
            Me.columnfld_id_ec_p.AutoIncrement = true
            Me.columnfld_id_ec_p.AllowDBNull = false
            Me.columnfld_id_ec_p.Unique = true
        End Sub
        
        Public Function Newtbl_estado_proveedorRow() As tbl_estado_proveedorRow
            Return CType(Me.NewRow,tbl_estado_proveedorRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_estado_proveedorRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_estado_proveedorRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_estado_proveedorRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_estado_proveedorRowChanged(Me, New tbl_estado_proveedorRowChangeEvent(CType(e.Row,tbl_estado_proveedorRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_estado_proveedorRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_estado_proveedorRowChanging(Me, New tbl_estado_proveedorRowChangeEvent(CType(e.Row,tbl_estado_proveedorRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_estado_proveedorRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_estado_proveedorRowDeleted(Me, New tbl_estado_proveedorRowChangeEvent(CType(e.Row,tbl_estado_proveedorRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_estado_proveedorRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_estado_proveedorRowDeleting(Me, New tbl_estado_proveedorRowChangeEvent(CType(e.Row,tbl_estado_proveedorRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_estado_proveedorRow(ByVal row As tbl_estado_proveedorRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_estado_proveedorRow
        Inherits DataRow
        
        Private tabletbl_estado_proveedor As tbl_estado_proveedorDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_estado_proveedor = CType(Me.Table,tbl_estado_proveedorDataTable)
        End Sub
        
        Public Property fld_id_ec_p As Integer
            Get
                Return CType(Me(Me.tabletbl_estado_proveedor.fld_id_ec_pColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_estado_proveedor.fld_id_ec_pColumn) = value
            End Set
        End Property
        
        Public Property fld_date As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_estado_proveedor.fld_dateColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_estado_proveedor.fld_dateColumn) = value
            End Set
        End Property
        
        Public Property fld_description As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_estado_proveedor.fld_descriptionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_estado_proveedor.fld_descriptionColumn) = value
            End Set
        End Property
        
        Public Property fld_dr As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_estado_proveedor.fld_drColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_estado_proveedor.fld_drColumn) = value
            End Set
        End Property
        
        Public Property fld_cr As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_estado_proveedor.fld_crColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_estado_proveedor.fld_crColumn) = value
            End Set
        End Property
        
        Public Property fld_bce_proveedor As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_estado_proveedor.fld_bce_proveedorColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_estado_proveedor.fld_bce_proveedorColumn) = value
            End Set
        End Property
        
        Public Property fld_proveedor_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_estado_proveedor.fld_proveedor_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_estado_proveedor.fld_proveedor_idColumn) = value
            End Set
        End Property
        
        Public Property fld_tipo_doc As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_estado_proveedor.fld_tipo_docColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_estado_proveedor.fld_tipo_docColumn) = value
            End Set
        End Property
        
        Public Property fld_tipo_doc_id As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_estado_proveedor.fld_tipo_doc_idColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_estado_proveedor.fld_tipo_doc_idColumn) = value
            End Set
        End Property
        
        Public Property fld_usuario As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_estado_proveedor.fld_usuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_estado_proveedor.fld_usuarioColumn) = value
            End Set
        End Property
        
        Public Function Isfld_dateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_estado_proveedor.fld_dateColumn)
        End Function
        
        Public Sub Setfld_dateNull()
            Me(Me.tabletbl_estado_proveedor.fld_dateColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_descriptionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_estado_proveedor.fld_descriptionColumn)
        End Function
        
        Public Sub Setfld_descriptionNull()
            Me(Me.tabletbl_estado_proveedor.fld_descriptionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_drNull() As Boolean
            Return Me.IsNull(Me.tabletbl_estado_proveedor.fld_drColumn)
        End Function
        
        Public Sub Setfld_drNull()
            Me(Me.tabletbl_estado_proveedor.fld_drColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_crNull() As Boolean
            Return Me.IsNull(Me.tabletbl_estado_proveedor.fld_crColumn)
        End Function
        
        Public Sub Setfld_crNull()
            Me(Me.tabletbl_estado_proveedor.fld_crColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bce_proveedorNull() As Boolean
            Return Me.IsNull(Me.tabletbl_estado_proveedor.fld_bce_proveedorColumn)
        End Function
        
        Public Sub Setfld_bce_proveedorNull()
            Me(Me.tabletbl_estado_proveedor.fld_bce_proveedorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_proveedor_idNull() As Boolean
            Return Me.IsNull(Me.tabletbl_estado_proveedor.fld_proveedor_idColumn)
        End Function
        
        Public Sub Setfld_proveedor_idNull()
            Me(Me.tabletbl_estado_proveedor.fld_proveedor_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_tipo_docNull() As Boolean
            Return Me.IsNull(Me.tabletbl_estado_proveedor.fld_tipo_docColumn)
        End Function
        
        Public Sub Setfld_tipo_docNull()
            Me(Me.tabletbl_estado_proveedor.fld_tipo_docColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_tipo_doc_idNull() As Boolean
            Return Me.IsNull(Me.tabletbl_estado_proveedor.fld_tipo_doc_idColumn)
        End Function
        
        Public Sub Setfld_tipo_doc_idNull()
            Me(Me.tabletbl_estado_proveedor.fld_tipo_doc_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_usuarioNull() As Boolean
            Return Me.IsNull(Me.tabletbl_estado_proveedor.fld_usuarioColumn)
        End Function
        
        Public Sub Setfld_usuarioNull()
            Me(Me.tabletbl_estado_proveedor.fld_usuarioColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_estado_proveedorRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_estado_proveedorRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_estado_proveedorRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_estado_proveedorRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_ingresosDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_Id_RI As DataColumn
        
        Private columnfld_forma_pago As DataColumn
        
        Private columnfld_detalle_forma_pago As DataColumn
        
        Private columnfld_id_cliente_ri As DataColumn
        
        Private columnfld_date As DataColumn
        
        Private columnfld_Description As DataColumn
        
        Private columnfld_monto As DataColumn
        
        Private columnfld_doc_afectado As DataColumn
        
        Private columnfld_User As DataColumn
        
        Private columnfld_Estado As DataColumn
        
        Private columnfld_pago_con As DataColumn
        
        Private columnfld_id_prestamo As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_ingresos")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_Id_RIColumn As DataColumn
            Get
                Return Me.columnfld_Id_RI
            End Get
        End Property
        
        Friend ReadOnly Property fld_forma_pagoColumn As DataColumn
            Get
                Return Me.columnfld_forma_pago
            End Get
        End Property
        
        Friend ReadOnly Property fld_detalle_forma_pagoColumn As DataColumn
            Get
                Return Me.columnfld_detalle_forma_pago
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_cliente_riColumn As DataColumn
            Get
                Return Me.columnfld_id_cliente_ri
            End Get
        End Property
        
        Friend ReadOnly Property fld_dateColumn As DataColumn
            Get
                Return Me.columnfld_date
            End Get
        End Property
        
        Friend ReadOnly Property fld_DescriptionColumn As DataColumn
            Get
                Return Me.columnfld_Description
            End Get
        End Property
        
        Friend ReadOnly Property fld_montoColumn As DataColumn
            Get
                Return Me.columnfld_monto
            End Get
        End Property
        
        Friend ReadOnly Property fld_doc_afectadoColumn As DataColumn
            Get
                Return Me.columnfld_doc_afectado
            End Get
        End Property
        
        Friend ReadOnly Property fld_UserColumn As DataColumn
            Get
                Return Me.columnfld_User
            End Get
        End Property
        
        Friend ReadOnly Property fld_EstadoColumn As DataColumn
            Get
                Return Me.columnfld_Estado
            End Get
        End Property
        
        Friend ReadOnly Property fld_pago_conColumn As DataColumn
            Get
                Return Me.columnfld_pago_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_prestamoColumn As DataColumn
            Get
                Return Me.columnfld_id_prestamo
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_ingresosRow
            Get
                Return CType(Me.Rows(index),tbl_ingresosRow)
            End Get
        End Property
        
        Public Event tbl_ingresosRowChanged As tbl_ingresosRowChangeEventHandler
        
        Public Event tbl_ingresosRowChanging As tbl_ingresosRowChangeEventHandler
        
        Public Event tbl_ingresosRowDeleted As tbl_ingresosRowChangeEventHandler
        
        Public Event tbl_ingresosRowDeleting As tbl_ingresosRowChangeEventHandler
        
        Public Overloads Sub Addtbl_ingresosRow(ByVal row As tbl_ingresosRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_ingresosRow(ByVal fld_forma_pago As String, ByVal fld_detalle_forma_pago As String, ByVal fld_id_cliente_ri As Integer, ByVal fld_date As Date, ByVal fld_Description As String, ByVal fld_monto As Double, ByVal fld_doc_afectado As Integer, ByVal fld_User As String, ByVal fld_Estado As String, ByVal fld_pago_con As Double, ByVal fld_id_prestamo As Integer) As tbl_ingresosRow
            Dim rowtbl_ingresosRow As tbl_ingresosRow = CType(Me.NewRow,tbl_ingresosRow)
            rowtbl_ingresosRow.ItemArray = New Object() {Nothing, fld_forma_pago, fld_detalle_forma_pago, fld_id_cliente_ri, fld_date, fld_Description, fld_monto, fld_doc_afectado, fld_User, fld_Estado, fld_pago_con, fld_id_prestamo}
            Me.Rows.Add(rowtbl_ingresosRow)
            Return rowtbl_ingresosRow
        End Function
        
        Public Function FindByfld_Id_RI(ByVal fld_Id_RI As Integer) As tbl_ingresosRow
            Return CType(Me.Rows.Find(New Object() {fld_Id_RI}),tbl_ingresosRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_ingresosDataTable = CType(MyBase.Clone,tbl_ingresosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_ingresosDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_Id_RI = Me.Columns("fld_Id_RI")
            Me.columnfld_forma_pago = Me.Columns("fld_forma_pago")
            Me.columnfld_detalle_forma_pago = Me.Columns("fld_detalle_forma_pago")
            Me.columnfld_id_cliente_ri = Me.Columns("fld_id_cliente_ri")
            Me.columnfld_date = Me.Columns("fld_date")
            Me.columnfld_Description = Me.Columns("fld_Description")
            Me.columnfld_monto = Me.Columns("fld_monto")
            Me.columnfld_doc_afectado = Me.Columns("fld_doc_afectado")
            Me.columnfld_User = Me.Columns("fld_User")
            Me.columnfld_Estado = Me.Columns("fld_Estado")
            Me.columnfld_pago_con = Me.Columns("fld_pago_con")
            Me.columnfld_id_prestamo = Me.Columns("fld_id_prestamo")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_Id_RI = New DataColumn("fld_Id_RI", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Id_RI)
            Me.columnfld_forma_pago = New DataColumn("fld_forma_pago", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_forma_pago)
            Me.columnfld_detalle_forma_pago = New DataColumn("fld_detalle_forma_pago", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_detalle_forma_pago)
            Me.columnfld_id_cliente_ri = New DataColumn("fld_id_cliente_ri", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_cliente_ri)
            Me.columnfld_date = New DataColumn("fld_date", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_date)
            Me.columnfld_Description = New DataColumn("fld_Description", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Description)
            Me.columnfld_monto = New DataColumn("fld_monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto)
            Me.columnfld_doc_afectado = New DataColumn("fld_doc_afectado", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_doc_afectado)
            Me.columnfld_User = New DataColumn("fld_User", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_User)
            Me.columnfld_Estado = New DataColumn("fld_Estado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Estado)
            Me.columnfld_pago_con = New DataColumn("fld_pago_con", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_pago_con)
            Me.columnfld_id_prestamo = New DataColumn("fld_id_prestamo", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_prestamo)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey24", New DataColumn() {Me.columnfld_Id_RI}, true))
            Me.columnfld_Id_RI.AutoIncrement = true
            Me.columnfld_Id_RI.AllowDBNull = false
            Me.columnfld_Id_RI.Unique = true
        End Sub
        
        Public Function Newtbl_ingresosRow() As tbl_ingresosRow
            Return CType(Me.NewRow,tbl_ingresosRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_ingresosRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_ingresosRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_ingresosRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_ingresosRowChanged(Me, New tbl_ingresosRowChangeEvent(CType(e.Row,tbl_ingresosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_ingresosRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_ingresosRowChanging(Me, New tbl_ingresosRowChangeEvent(CType(e.Row,tbl_ingresosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_ingresosRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_ingresosRowDeleted(Me, New tbl_ingresosRowChangeEvent(CType(e.Row,tbl_ingresosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_ingresosRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_ingresosRowDeleting(Me, New tbl_ingresosRowChangeEvent(CType(e.Row,tbl_ingresosRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_ingresosRow(ByVal row As tbl_ingresosRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_ingresosRow
        Inherits DataRow
        
        Private tabletbl_ingresos As tbl_ingresosDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_ingresos = CType(Me.Table,tbl_ingresosDataTable)
        End Sub
        
        Public Property fld_Id_RI As Integer
            Get
                Return CType(Me(Me.tabletbl_ingresos.fld_Id_RIColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_ingresos.fld_Id_RIColumn) = value
            End Set
        End Property
        
        Public Property fld_forma_pago As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ingresos.fld_forma_pagoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ingresos.fld_forma_pagoColumn) = value
            End Set
        End Property
        
        Public Property fld_detalle_forma_pago As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ingresos.fld_detalle_forma_pagoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ingresos.fld_detalle_forma_pagoColumn) = value
            End Set
        End Property
        
        Public Property fld_id_cliente_ri As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ingresos.fld_id_cliente_riColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ingresos.fld_id_cliente_riColumn) = value
            End Set
        End Property
        
        Public Property fld_date As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ingresos.fld_dateColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ingresos.fld_dateColumn) = value
            End Set
        End Property
        
        Public Property fld_Description As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ingresos.fld_DescriptionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ingresos.fld_DescriptionColumn) = value
            End Set
        End Property
        
        Public Property fld_monto As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ingresos.fld_montoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ingresos.fld_montoColumn) = value
            End Set
        End Property
        
        Public Property fld_doc_afectado As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ingresos.fld_doc_afectadoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ingresos.fld_doc_afectadoColumn) = value
            End Set
        End Property
        
        Public Property fld_User As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ingresos.fld_UserColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ingresos.fld_UserColumn) = value
            End Set
        End Property
        
        Public Property fld_Estado As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ingresos.fld_EstadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ingresos.fld_EstadoColumn) = value
            End Set
        End Property
        
        Public Property fld_pago_con As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ingresos.fld_pago_conColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ingresos.fld_pago_conColumn) = value
            End Set
        End Property
        
        Public Property fld_id_prestamo As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ingresos.fld_id_prestamoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ingresos.fld_id_prestamoColumn) = value
            End Set
        End Property
        
        Public Function Isfld_forma_pagoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ingresos.fld_forma_pagoColumn)
        End Function
        
        Public Sub Setfld_forma_pagoNull()
            Me(Me.tabletbl_ingresos.fld_forma_pagoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_detalle_forma_pagoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ingresos.fld_detalle_forma_pagoColumn)
        End Function
        
        Public Sub Setfld_detalle_forma_pagoNull()
            Me(Me.tabletbl_ingresos.fld_detalle_forma_pagoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_cliente_riNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ingresos.fld_id_cliente_riColumn)
        End Function
        
        Public Sub Setfld_id_cliente_riNull()
            Me(Me.tabletbl_ingresos.fld_id_cliente_riColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_dateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ingresos.fld_dateColumn)
        End Function
        
        Public Sub Setfld_dateNull()
            Me(Me.tabletbl_ingresos.fld_dateColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ingresos.fld_DescriptionColumn)
        End Function
        
        Public Sub Setfld_DescriptionNull()
            Me(Me.tabletbl_ingresos.fld_DescriptionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_montoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ingresos.fld_montoColumn)
        End Function
        
        Public Sub Setfld_montoNull()
            Me(Me.tabletbl_ingresos.fld_montoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_doc_afectadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ingresos.fld_doc_afectadoColumn)
        End Function
        
        Public Sub Setfld_doc_afectadoNull()
            Me(Me.tabletbl_ingresos.fld_doc_afectadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_UserNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ingresos.fld_UserColumn)
        End Function
        
        Public Sub Setfld_UserNull()
            Me(Me.tabletbl_ingresos.fld_UserColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_EstadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ingresos.fld_EstadoColumn)
        End Function
        
        Public Sub Setfld_EstadoNull()
            Me(Me.tabletbl_ingresos.fld_EstadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_pago_conNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ingresos.fld_pago_conColumn)
        End Function
        
        Public Sub Setfld_pago_conNull()
            Me(Me.tabletbl_ingresos.fld_pago_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_prestamoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ingresos.fld_id_prestamoColumn)
        End Function
        
        Public Sub Setfld_id_prestamoNull()
            Me(Me.tabletbl_ingresos.fld_id_prestamoColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_ingresosRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_ingresosRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_ingresosRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_ingresosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_nc_cxpDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id As DataColumn
        
        Private columnfld_proveedor_id_nc As DataColumn
        
        Private columnfld_fecha As DataColumn
        
        Private columnfld_concepto As DataColumn
        
        Private columnfld_monto As DataColumn
        
        Private columnfld_abono As DataColumn
        
        Private columnfld_balance As DataColumn
        
        Private columnfld_user As DataColumn
        
        Private columnfld_status As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_nc_cxp")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_proveedor_id_ncColumn As DataColumn
            Get
                Return Me.columnfld_proveedor_id_nc
            End Get
        End Property
        
        Friend ReadOnly Property fld_fechaColumn As DataColumn
            Get
                Return Me.columnfld_fecha
            End Get
        End Property
        
        Friend ReadOnly Property fld_conceptoColumn As DataColumn
            Get
                Return Me.columnfld_concepto
            End Get
        End Property
        
        Friend ReadOnly Property fld_montoColumn As DataColumn
            Get
                Return Me.columnfld_monto
            End Get
        End Property
        
        Friend ReadOnly Property fld_abonoColumn As DataColumn
            Get
                Return Me.columnfld_abono
            End Get
        End Property
        
        Friend ReadOnly Property fld_balanceColumn As DataColumn
            Get
                Return Me.columnfld_balance
            End Get
        End Property
        
        Friend ReadOnly Property fld_userColumn As DataColumn
            Get
                Return Me.columnfld_user
            End Get
        End Property
        
        Friend ReadOnly Property fld_statusColumn As DataColumn
            Get
                Return Me.columnfld_status
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_nc_cxpRow
            Get
                Return CType(Me.Rows(index),tbl_nc_cxpRow)
            End Get
        End Property
        
        Public Event tbl_nc_cxpRowChanged As tbl_nc_cxpRowChangeEventHandler
        
        Public Event tbl_nc_cxpRowChanging As tbl_nc_cxpRowChangeEventHandler
        
        Public Event tbl_nc_cxpRowDeleted As tbl_nc_cxpRowChangeEventHandler
        
        Public Event tbl_nc_cxpRowDeleting As tbl_nc_cxpRowChangeEventHandler
        
        Public Overloads Sub Addtbl_nc_cxpRow(ByVal row As tbl_nc_cxpRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_nc_cxpRow(ByVal fld_proveedor_id_nc As Integer, ByVal fld_fecha As Date, ByVal fld_concepto As String, ByVal fld_monto As Double, ByVal fld_abono As Double, ByVal fld_balance As Double, ByVal fld_user As String, ByVal fld_status As String) As tbl_nc_cxpRow
            Dim rowtbl_nc_cxpRow As tbl_nc_cxpRow = CType(Me.NewRow,tbl_nc_cxpRow)
            rowtbl_nc_cxpRow.ItemArray = New Object() {Nothing, fld_proveedor_id_nc, fld_fecha, fld_concepto, fld_monto, fld_abono, fld_balance, fld_user, fld_status}
            Me.Rows.Add(rowtbl_nc_cxpRow)
            Return rowtbl_nc_cxpRow
        End Function
        
        Public Function FindByfld_id(ByVal fld_id As Integer) As tbl_nc_cxpRow
            Return CType(Me.Rows.Find(New Object() {fld_id}),tbl_nc_cxpRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_nc_cxpDataTable = CType(MyBase.Clone,tbl_nc_cxpDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_nc_cxpDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnfld_proveedor_id_nc = Me.Columns("fld_proveedor_id_nc")
            Me.columnfld_fecha = Me.Columns("fld_fecha")
            Me.columnfld_concepto = Me.Columns("fld_concepto")
            Me.columnfld_monto = Me.Columns("fld_monto")
            Me.columnfld_abono = Me.Columns("fld_abono")
            Me.columnfld_balance = Me.Columns("fld_balance")
            Me.columnfld_user = Me.Columns("fld_user")
            Me.columnfld_status = Me.Columns("fld_status")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnfld_proveedor_id_nc = New DataColumn("fld_proveedor_id_nc", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_proveedor_id_nc)
            Me.columnfld_fecha = New DataColumn("fld_fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha)
            Me.columnfld_concepto = New DataColumn("fld_concepto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_concepto)
            Me.columnfld_monto = New DataColumn("fld_monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto)
            Me.columnfld_abono = New DataColumn("fld_abono", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_abono)
            Me.columnfld_balance = New DataColumn("fld_balance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_balance)
            Me.columnfld_user = New DataColumn("fld_user", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_user)
            Me.columnfld_status = New DataColumn("fld_status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_status)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey29", New DataColumn() {Me.columnfld_id}, true))
            Me.columnfld_id.AutoIncrement = true
            Me.columnfld_id.AllowDBNull = false
            Me.columnfld_id.Unique = true
        End Sub
        
        Public Function Newtbl_nc_cxpRow() As tbl_nc_cxpRow
            Return CType(Me.NewRow,tbl_nc_cxpRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_nc_cxpRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_nc_cxpRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_nc_cxpRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_nc_cxpRowChanged(Me, New tbl_nc_cxpRowChangeEvent(CType(e.Row,tbl_nc_cxpRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_nc_cxpRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_nc_cxpRowChanging(Me, New tbl_nc_cxpRowChangeEvent(CType(e.Row,tbl_nc_cxpRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_nc_cxpRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_nc_cxpRowDeleted(Me, New tbl_nc_cxpRowChangeEvent(CType(e.Row,tbl_nc_cxpRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_nc_cxpRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_nc_cxpRowDeleting(Me, New tbl_nc_cxpRowChangeEvent(CType(e.Row,tbl_nc_cxpRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_nc_cxpRow(ByVal row As tbl_nc_cxpRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_nc_cxpRow
        Inherits DataRow
        
        Private tabletbl_nc_cxp As tbl_nc_cxpDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_nc_cxp = CType(Me.Table,tbl_nc_cxpDataTable)
        End Sub
        
        Public Property fld_id As Integer
            Get
                Return CType(Me(Me.tabletbl_nc_cxp.fld_idColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_nc_cxp.fld_idColumn) = value
            End Set
        End Property
        
        Public Property fld_proveedor_id_nc As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nc_cxp.fld_proveedor_id_ncColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nc_cxp.fld_proveedor_id_ncColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nc_cxp.fld_fechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nc_cxp.fld_fechaColumn) = value
            End Set
        End Property
        
        Public Property fld_concepto As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nc_cxp.fld_conceptoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nc_cxp.fld_conceptoColumn) = value
            End Set
        End Property
        
        Public Property fld_monto As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nc_cxp.fld_montoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nc_cxp.fld_montoColumn) = value
            End Set
        End Property
        
        Public Property fld_abono As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nc_cxp.fld_abonoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nc_cxp.fld_abonoColumn) = value
            End Set
        End Property
        
        Public Property fld_balance As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nc_cxp.fld_balanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nc_cxp.fld_balanceColumn) = value
            End Set
        End Property
        
        Public Property fld_user As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nc_cxp.fld_userColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nc_cxp.fld_userColumn) = value
            End Set
        End Property
        
        Public Property fld_status As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nc_cxp.fld_statusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nc_cxp.fld_statusColumn) = value
            End Set
        End Property
        
        Public Function Isfld_proveedor_id_ncNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nc_cxp.fld_proveedor_id_ncColumn)
        End Function
        
        Public Sub Setfld_proveedor_id_ncNull()
            Me(Me.tabletbl_nc_cxp.fld_proveedor_id_ncColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fechaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nc_cxp.fld_fechaColumn)
        End Function
        
        Public Sub Setfld_fechaNull()
            Me(Me.tabletbl_nc_cxp.fld_fechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_conceptoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nc_cxp.fld_conceptoColumn)
        End Function
        
        Public Sub Setfld_conceptoNull()
            Me(Me.tabletbl_nc_cxp.fld_conceptoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_montoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nc_cxp.fld_montoColumn)
        End Function
        
        Public Sub Setfld_montoNull()
            Me(Me.tabletbl_nc_cxp.fld_montoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_abonoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nc_cxp.fld_abonoColumn)
        End Function
        
        Public Sub Setfld_abonoNull()
            Me(Me.tabletbl_nc_cxp.fld_abonoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_balanceNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nc_cxp.fld_balanceColumn)
        End Function
        
        Public Sub Setfld_balanceNull()
            Me(Me.tabletbl_nc_cxp.fld_balanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_userNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nc_cxp.fld_userColumn)
        End Function
        
        Public Sub Setfld_userNull()
            Me(Me.tabletbl_nc_cxp.fld_userColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_statusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nc_cxp.fld_statusColumn)
        End Function
        
        Public Sub Setfld_statusNull()
            Me(Me.tabletbl_nc_cxp.fld_statusColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_nc_cxpRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_nc_cxpRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_nc_cxpRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_nc_cxpRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_nd_cxpDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id As DataColumn
        
        Private columnfld_proveedor_id_nd As DataColumn
        
        Private columnfld_fecha As DataColumn
        
        Private columnfld_concepto As DataColumn
        
        Private columnfld_monto As DataColumn
        
        Private columnfld_user As DataColumn
        
        Private columnfld_status As DataColumn
        
        Private columnfld_doc_afectado As DataColumn
        
        Private columnfld_doc_afectado_id As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_nd_cxp")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_proveedor_id_ndColumn As DataColumn
            Get
                Return Me.columnfld_proveedor_id_nd
            End Get
        End Property
        
        Friend ReadOnly Property fld_fechaColumn As DataColumn
            Get
                Return Me.columnfld_fecha
            End Get
        End Property
        
        Friend ReadOnly Property fld_conceptoColumn As DataColumn
            Get
                Return Me.columnfld_concepto
            End Get
        End Property
        
        Friend ReadOnly Property fld_montoColumn As DataColumn
            Get
                Return Me.columnfld_monto
            End Get
        End Property
        
        Friend ReadOnly Property fld_userColumn As DataColumn
            Get
                Return Me.columnfld_user
            End Get
        End Property
        
        Friend ReadOnly Property fld_statusColumn As DataColumn
            Get
                Return Me.columnfld_status
            End Get
        End Property
        
        Friend ReadOnly Property fld_doc_afectadoColumn As DataColumn
            Get
                Return Me.columnfld_doc_afectado
            End Get
        End Property
        
        Friend ReadOnly Property fld_doc_afectado_idColumn As DataColumn
            Get
                Return Me.columnfld_doc_afectado_id
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_nd_cxpRow
            Get
                Return CType(Me.Rows(index),tbl_nd_cxpRow)
            End Get
        End Property
        
        Public Event tbl_nd_cxpRowChanged As tbl_nd_cxpRowChangeEventHandler
        
        Public Event tbl_nd_cxpRowChanging As tbl_nd_cxpRowChangeEventHandler
        
        Public Event tbl_nd_cxpRowDeleted As tbl_nd_cxpRowChangeEventHandler
        
        Public Event tbl_nd_cxpRowDeleting As tbl_nd_cxpRowChangeEventHandler
        
        Public Overloads Sub Addtbl_nd_cxpRow(ByVal row As tbl_nd_cxpRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_nd_cxpRow(ByVal fld_proveedor_id_nd As Integer, ByVal fld_fecha As Date, ByVal fld_concepto As String, ByVal fld_monto As Double, ByVal fld_user As String, ByVal fld_status As String, ByVal fld_doc_afectado As String, ByVal fld_doc_afectado_id As Integer) As tbl_nd_cxpRow
            Dim rowtbl_nd_cxpRow As tbl_nd_cxpRow = CType(Me.NewRow,tbl_nd_cxpRow)
            rowtbl_nd_cxpRow.ItemArray = New Object() {Nothing, fld_proveedor_id_nd, fld_fecha, fld_concepto, fld_monto, fld_user, fld_status, fld_doc_afectado, fld_doc_afectado_id}
            Me.Rows.Add(rowtbl_nd_cxpRow)
            Return rowtbl_nd_cxpRow
        End Function
        
        Public Function FindByfld_id(ByVal fld_id As Integer) As tbl_nd_cxpRow
            Return CType(Me.Rows.Find(New Object() {fld_id}),tbl_nd_cxpRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_nd_cxpDataTable = CType(MyBase.Clone,tbl_nd_cxpDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_nd_cxpDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnfld_proveedor_id_nd = Me.Columns("fld_proveedor_id_nd")
            Me.columnfld_fecha = Me.Columns("fld_fecha")
            Me.columnfld_concepto = Me.Columns("fld_concepto")
            Me.columnfld_monto = Me.Columns("fld_monto")
            Me.columnfld_user = Me.Columns("fld_user")
            Me.columnfld_status = Me.Columns("fld_status")
            Me.columnfld_doc_afectado = Me.Columns("fld_doc_afectado")
            Me.columnfld_doc_afectado_id = Me.Columns("fld_doc_afectado_id")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnfld_proveedor_id_nd = New DataColumn("fld_proveedor_id_nd", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_proveedor_id_nd)
            Me.columnfld_fecha = New DataColumn("fld_fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha)
            Me.columnfld_concepto = New DataColumn("fld_concepto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_concepto)
            Me.columnfld_monto = New DataColumn("fld_monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto)
            Me.columnfld_user = New DataColumn("fld_user", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_user)
            Me.columnfld_status = New DataColumn("fld_status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_status)
            Me.columnfld_doc_afectado = New DataColumn("fld_doc_afectado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_doc_afectado)
            Me.columnfld_doc_afectado_id = New DataColumn("fld_doc_afectado_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_doc_afectado_id)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey32", New DataColumn() {Me.columnfld_id}, true))
            Me.columnfld_id.AutoIncrement = true
            Me.columnfld_id.AllowDBNull = false
            Me.columnfld_id.Unique = true
        End Sub
        
        Public Function Newtbl_nd_cxpRow() As tbl_nd_cxpRow
            Return CType(Me.NewRow,tbl_nd_cxpRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_nd_cxpRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_nd_cxpRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_nd_cxpRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_nd_cxpRowChanged(Me, New tbl_nd_cxpRowChangeEvent(CType(e.Row,tbl_nd_cxpRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_nd_cxpRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_nd_cxpRowChanging(Me, New tbl_nd_cxpRowChangeEvent(CType(e.Row,tbl_nd_cxpRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_nd_cxpRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_nd_cxpRowDeleted(Me, New tbl_nd_cxpRowChangeEvent(CType(e.Row,tbl_nd_cxpRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_nd_cxpRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_nd_cxpRowDeleting(Me, New tbl_nd_cxpRowChangeEvent(CType(e.Row,tbl_nd_cxpRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_nd_cxpRow(ByVal row As tbl_nd_cxpRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_nd_cxpRow
        Inherits DataRow
        
        Private tabletbl_nd_cxp As tbl_nd_cxpDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_nd_cxp = CType(Me.Table,tbl_nd_cxpDataTable)
        End Sub
        
        Public Property fld_id As Integer
            Get
                Return CType(Me(Me.tabletbl_nd_cxp.fld_idColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_nd_cxp.fld_idColumn) = value
            End Set
        End Property
        
        Public Property fld_proveedor_id_nd As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nd_cxp.fld_proveedor_id_ndColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nd_cxp.fld_proveedor_id_ndColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nd_cxp.fld_fechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nd_cxp.fld_fechaColumn) = value
            End Set
        End Property
        
        Public Property fld_concepto As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nd_cxp.fld_conceptoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nd_cxp.fld_conceptoColumn) = value
            End Set
        End Property
        
        Public Property fld_monto As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nd_cxp.fld_montoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nd_cxp.fld_montoColumn) = value
            End Set
        End Property
        
        Public Property fld_user As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nd_cxp.fld_userColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nd_cxp.fld_userColumn) = value
            End Set
        End Property
        
        Public Property fld_status As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nd_cxp.fld_statusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nd_cxp.fld_statusColumn) = value
            End Set
        End Property
        
        Public Property fld_doc_afectado As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nd_cxp.fld_doc_afectadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nd_cxp.fld_doc_afectadoColumn) = value
            End Set
        End Property
        
        Public Property fld_doc_afectado_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nd_cxp.fld_doc_afectado_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nd_cxp.fld_doc_afectado_idColumn) = value
            End Set
        End Property
        
        Public Function Isfld_proveedor_id_ndNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nd_cxp.fld_proveedor_id_ndColumn)
        End Function
        
        Public Sub Setfld_proveedor_id_ndNull()
            Me(Me.tabletbl_nd_cxp.fld_proveedor_id_ndColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fechaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nd_cxp.fld_fechaColumn)
        End Function
        
        Public Sub Setfld_fechaNull()
            Me(Me.tabletbl_nd_cxp.fld_fechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_conceptoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nd_cxp.fld_conceptoColumn)
        End Function
        
        Public Sub Setfld_conceptoNull()
            Me(Me.tabletbl_nd_cxp.fld_conceptoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_montoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nd_cxp.fld_montoColumn)
        End Function
        
        Public Sub Setfld_montoNull()
            Me(Me.tabletbl_nd_cxp.fld_montoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_userNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nd_cxp.fld_userColumn)
        End Function
        
        Public Sub Setfld_userNull()
            Me(Me.tabletbl_nd_cxp.fld_userColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_statusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nd_cxp.fld_statusColumn)
        End Function
        
        Public Sub Setfld_statusNull()
            Me(Me.tabletbl_nd_cxp.fld_statusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_doc_afectadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nd_cxp.fld_doc_afectadoColumn)
        End Function
        
        Public Sub Setfld_doc_afectadoNull()
            Me(Me.tabletbl_nd_cxp.fld_doc_afectadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_doc_afectado_idNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nd_cxp.fld_doc_afectado_idColumn)
        End Function
        
        Public Sub Setfld_doc_afectado_idNull()
            Me(Me.tabletbl_nd_cxp.fld_doc_afectado_idColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_nd_cxpRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_nd_cxpRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_nd_cxpRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_nd_cxpRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_temp_transaccionesDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_Codigo As DataColumn
        
        Private columnfld_Descripcion As DataColumn
        
        Private columnfld_DR As DataColumn
        
        Private columnfld_CR As DataColumn
        
        Private columnfld_Date As DataColumn
        
        Private columnfld_CreadoPor As DataColumn
        
        Private columnfld_Status As DataColumn
        
        Private columnfld_IdEntrada As DataColumn
        
        Private columnfld_id As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_temp_transacciones")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_CodigoColumn As DataColumn
            Get
                Return Me.columnfld_Codigo
            End Get
        End Property
        
        Friend ReadOnly Property fld_DescripcionColumn As DataColumn
            Get
                Return Me.columnfld_Descripcion
            End Get
        End Property
        
        Friend ReadOnly Property fld_DRColumn As DataColumn
            Get
                Return Me.columnfld_DR
            End Get
        End Property
        
        Friend ReadOnly Property fld_CRColumn As DataColumn
            Get
                Return Me.columnfld_CR
            End Get
        End Property
        
        Friend ReadOnly Property fld_DateColumn As DataColumn
            Get
                Return Me.columnfld_Date
            End Get
        End Property
        
        Friend ReadOnly Property fld_CreadoPorColumn As DataColumn
            Get
                Return Me.columnfld_CreadoPor
            End Get
        End Property
        
        Friend ReadOnly Property fld_StatusColumn As DataColumn
            Get
                Return Me.columnfld_Status
            End Get
        End Property
        
        Friend ReadOnly Property fld_IdEntradaColumn As DataColumn
            Get
                Return Me.columnfld_IdEntrada
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_temp_transaccionesRow
            Get
                Return CType(Me.Rows(index),tbl_temp_transaccionesRow)
            End Get
        End Property
        
        Public Event tbl_temp_transaccionesRowChanged As tbl_temp_transaccionesRowChangeEventHandler
        
        Public Event tbl_temp_transaccionesRowChanging As tbl_temp_transaccionesRowChangeEventHandler
        
        Public Event tbl_temp_transaccionesRowDeleted As tbl_temp_transaccionesRowChangeEventHandler
        
        Public Event tbl_temp_transaccionesRowDeleting As tbl_temp_transaccionesRowChangeEventHandler
        
        Public Overloads Sub Addtbl_temp_transaccionesRow(ByVal row As tbl_temp_transaccionesRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_temp_transaccionesRow(ByVal fld_Codigo As String, ByVal fld_Descripcion As String, ByVal fld_DR As Double, ByVal fld_CR As Double, ByVal fld_Date As Date, ByVal fld_CreadoPor As String, ByVal fld_Status As String, ByVal fld_IdEntrada As String) As tbl_temp_transaccionesRow
            Dim rowtbl_temp_transaccionesRow As tbl_temp_transaccionesRow = CType(Me.NewRow,tbl_temp_transaccionesRow)
            rowtbl_temp_transaccionesRow.ItemArray = New Object() {fld_Codigo, fld_Descripcion, fld_DR, fld_CR, fld_Date, fld_CreadoPor, fld_Status, fld_IdEntrada, Nothing}
            Me.Rows.Add(rowtbl_temp_transaccionesRow)
            Return rowtbl_temp_transaccionesRow
        End Function
        
        Public Function FindByfld_id(ByVal fld_id As Integer) As tbl_temp_transaccionesRow
            Return CType(Me.Rows.Find(New Object() {fld_id}),tbl_temp_transaccionesRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_temp_transaccionesDataTable = CType(MyBase.Clone,tbl_temp_transaccionesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_temp_transaccionesDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_Codigo = Me.Columns("fld_Codigo")
            Me.columnfld_Descripcion = Me.Columns("fld_Descripcion")
            Me.columnfld_DR = Me.Columns("fld_DR")
            Me.columnfld_CR = Me.Columns("fld_CR")
            Me.columnfld_Date = Me.Columns("fld_Date")
            Me.columnfld_CreadoPor = Me.Columns("fld_CreadoPor")
            Me.columnfld_Status = Me.Columns("fld_Status")
            Me.columnfld_IdEntrada = Me.Columns("fld_IdEntrada")
            Me.columnfld_id = Me.Columns("fld_id")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_Codigo = New DataColumn("fld_Codigo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Codigo)
            Me.columnfld_Descripcion = New DataColumn("fld_Descripcion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Descripcion)
            Me.columnfld_DR = New DataColumn("fld_DR", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_DR)
            Me.columnfld_CR = New DataColumn("fld_CR", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_CR)
            Me.columnfld_Date = New DataColumn("fld_Date", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Date)
            Me.columnfld_CreadoPor = New DataColumn("fld_CreadoPor", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_CreadoPor)
            Me.columnfld_Status = New DataColumn("fld_Status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Status)
            Me.columnfld_IdEntrada = New DataColumn("fld_IdEntrada", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_IdEntrada)
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey47", New DataColumn() {Me.columnfld_id}, true))
            Me.columnfld_id.AutoIncrement = true
            Me.columnfld_id.AllowDBNull = false
            Me.columnfld_id.Unique = true
        End Sub
        
        Public Function Newtbl_temp_transaccionesRow() As tbl_temp_transaccionesRow
            Return CType(Me.NewRow,tbl_temp_transaccionesRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_temp_transaccionesRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_temp_transaccionesRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_temp_transaccionesRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_temp_transaccionesRowChanged(Me, New tbl_temp_transaccionesRowChangeEvent(CType(e.Row,tbl_temp_transaccionesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_temp_transaccionesRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_temp_transaccionesRowChanging(Me, New tbl_temp_transaccionesRowChangeEvent(CType(e.Row,tbl_temp_transaccionesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_temp_transaccionesRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_temp_transaccionesRowDeleted(Me, New tbl_temp_transaccionesRowChangeEvent(CType(e.Row,tbl_temp_transaccionesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_temp_transaccionesRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_temp_transaccionesRowDeleting(Me, New tbl_temp_transaccionesRowChangeEvent(CType(e.Row,tbl_temp_transaccionesRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_temp_transaccionesRow(ByVal row As tbl_temp_transaccionesRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_temp_transaccionesRow
        Inherits DataRow
        
        Private tabletbl_temp_transacciones As tbl_temp_transaccionesDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_temp_transacciones = CType(Me.Table,tbl_temp_transaccionesDataTable)
        End Sub
        
        Public Property fld_Codigo As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_temp_transacciones.fld_CodigoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_temp_transacciones.fld_CodigoColumn) = value
            End Set
        End Property
        
        Public Property fld_Descripcion As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_temp_transacciones.fld_DescripcionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_temp_transacciones.fld_DescripcionColumn) = value
            End Set
        End Property
        
        Public Property fld_DR As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_temp_transacciones.fld_DRColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_temp_transacciones.fld_DRColumn) = value
            End Set
        End Property
        
        Public Property fld_CR As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_temp_transacciones.fld_CRColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_temp_transacciones.fld_CRColumn) = value
            End Set
        End Property
        
        Public Property fld_Date As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_temp_transacciones.fld_DateColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_temp_transacciones.fld_DateColumn) = value
            End Set
        End Property
        
        Public Property fld_CreadoPor As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_temp_transacciones.fld_CreadoPorColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_temp_transacciones.fld_CreadoPorColumn) = value
            End Set
        End Property
        
        Public Property fld_Status As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_temp_transacciones.fld_StatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_temp_transacciones.fld_StatusColumn) = value
            End Set
        End Property
        
        Public Property fld_IdEntrada As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_temp_transacciones.fld_IdEntradaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_temp_transacciones.fld_IdEntradaColumn) = value
            End Set
        End Property
        
        Public Property fld_id As Integer
            Get
                Return CType(Me(Me.tabletbl_temp_transacciones.fld_idColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_temp_transacciones.fld_idColumn) = value
            End Set
        End Property
        
        Public Function Isfld_CodigoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_temp_transacciones.fld_CodigoColumn)
        End Function
        
        Public Sub Setfld_CodigoNull()
            Me(Me.tabletbl_temp_transacciones.fld_CodigoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_DescripcionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_temp_transacciones.fld_DescripcionColumn)
        End Function
        
        Public Sub Setfld_DescripcionNull()
            Me(Me.tabletbl_temp_transacciones.fld_DescripcionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_DRNull() As Boolean
            Return Me.IsNull(Me.tabletbl_temp_transacciones.fld_DRColumn)
        End Function
        
        Public Sub Setfld_DRNull()
            Me(Me.tabletbl_temp_transacciones.fld_DRColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_CRNull() As Boolean
            Return Me.IsNull(Me.tabletbl_temp_transacciones.fld_CRColumn)
        End Function
        
        Public Sub Setfld_CRNull()
            Me(Me.tabletbl_temp_transacciones.fld_CRColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_DateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_temp_transacciones.fld_DateColumn)
        End Function
        
        Public Sub Setfld_DateNull()
            Me(Me.tabletbl_temp_transacciones.fld_DateColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_CreadoPorNull() As Boolean
            Return Me.IsNull(Me.tabletbl_temp_transacciones.fld_CreadoPorColumn)
        End Function
        
        Public Sub Setfld_CreadoPorNull()
            Me(Me.tabletbl_temp_transacciones.fld_CreadoPorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_StatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_temp_transacciones.fld_StatusColumn)
        End Function
        
        Public Sub Setfld_StatusNull()
            Me(Me.tabletbl_temp_transacciones.fld_StatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_IdEntradaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_temp_transacciones.fld_IdEntradaColumn)
        End Function
        
        Public Sub Setfld_IdEntradaNull()
            Me(Me.tabletbl_temp_transacciones.fld_IdEntradaColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_temp_transaccionesRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_temp_transaccionesRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_temp_transaccionesRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_temp_transaccionesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_tipo_entrada_diarioDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id As DataColumn
        
        Private columnfld_codigo As DataColumn
        
        Private columnfld_descripcion As DataColumn
        
        Private columnfld_cta_relacionada As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_tipo_entrada_diario")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_codigoColumn As DataColumn
            Get
                Return Me.columnfld_codigo
            End Get
        End Property
        
        Friend ReadOnly Property fld_descripcionColumn As DataColumn
            Get
                Return Me.columnfld_descripcion
            End Get
        End Property
        
        Friend ReadOnly Property fld_cta_relacionadaColumn As DataColumn
            Get
                Return Me.columnfld_cta_relacionada
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_tipo_entrada_diarioRow
            Get
                Return CType(Me.Rows(index),tbl_tipo_entrada_diarioRow)
            End Get
        End Property
        
        Public Event tbl_tipo_entrada_diarioRowChanged As tbl_tipo_entrada_diarioRowChangeEventHandler
        
        Public Event tbl_tipo_entrada_diarioRowChanging As tbl_tipo_entrada_diarioRowChangeEventHandler
        
        Public Event tbl_tipo_entrada_diarioRowDeleted As tbl_tipo_entrada_diarioRowChangeEventHandler
        
        Public Event tbl_tipo_entrada_diarioRowDeleting As tbl_tipo_entrada_diarioRowChangeEventHandler
        
        Public Overloads Sub Addtbl_tipo_entrada_diarioRow(ByVal row As tbl_tipo_entrada_diarioRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_tipo_entrada_diarioRow(ByVal fld_codigo As String, ByVal fld_descripcion As String, ByVal fld_cta_relacionada As String) As tbl_tipo_entrada_diarioRow
            Dim rowtbl_tipo_entrada_diarioRow As tbl_tipo_entrada_diarioRow = CType(Me.NewRow,tbl_tipo_entrada_diarioRow)
            rowtbl_tipo_entrada_diarioRow.ItemArray = New Object() {Nothing, fld_codigo, fld_descripcion, fld_cta_relacionada}
            Me.Rows.Add(rowtbl_tipo_entrada_diarioRow)
            Return rowtbl_tipo_entrada_diarioRow
        End Function
        
        Public Function FindByfld_id(ByVal fld_id As Integer) As tbl_tipo_entrada_diarioRow
            Return CType(Me.Rows.Find(New Object() {fld_id}),tbl_tipo_entrada_diarioRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_tipo_entrada_diarioDataTable = CType(MyBase.Clone,tbl_tipo_entrada_diarioDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_tipo_entrada_diarioDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnfld_codigo = Me.Columns("fld_codigo")
            Me.columnfld_descripcion = Me.Columns("fld_descripcion")
            Me.columnfld_cta_relacionada = Me.Columns("fld_cta_relacionada")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnfld_codigo = New DataColumn("fld_codigo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_codigo)
            Me.columnfld_descripcion = New DataColumn("fld_descripcion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_descripcion)
            Me.columnfld_cta_relacionada = New DataColumn("fld_cta_relacionada", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cta_relacionada)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey49", New DataColumn() {Me.columnfld_id}, true))
            Me.columnfld_id.AutoIncrement = true
            Me.columnfld_id.AllowDBNull = false
            Me.columnfld_id.Unique = true
        End Sub
        
        Public Function Newtbl_tipo_entrada_diarioRow() As tbl_tipo_entrada_diarioRow
            Return CType(Me.NewRow,tbl_tipo_entrada_diarioRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_tipo_entrada_diarioRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_tipo_entrada_diarioRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_tipo_entrada_diarioRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_tipo_entrada_diarioRowChanged(Me, New tbl_tipo_entrada_diarioRowChangeEvent(CType(e.Row,tbl_tipo_entrada_diarioRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_tipo_entrada_diarioRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_tipo_entrada_diarioRowChanging(Me, New tbl_tipo_entrada_diarioRowChangeEvent(CType(e.Row,tbl_tipo_entrada_diarioRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_tipo_entrada_diarioRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_tipo_entrada_diarioRowDeleted(Me, New tbl_tipo_entrada_diarioRowChangeEvent(CType(e.Row,tbl_tipo_entrada_diarioRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_tipo_entrada_diarioRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_tipo_entrada_diarioRowDeleting(Me, New tbl_tipo_entrada_diarioRowChangeEvent(CType(e.Row,tbl_tipo_entrada_diarioRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_tipo_entrada_diarioRow(ByVal row As tbl_tipo_entrada_diarioRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_tipo_entrada_diarioRow
        Inherits DataRow
        
        Private tabletbl_tipo_entrada_diario As tbl_tipo_entrada_diarioDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_tipo_entrada_diario = CType(Me.Table,tbl_tipo_entrada_diarioDataTable)
        End Sub
        
        Public Property fld_id As Integer
            Get
                Return CType(Me(Me.tabletbl_tipo_entrada_diario.fld_idColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_tipo_entrada_diario.fld_idColumn) = value
            End Set
        End Property
        
        Public Property fld_codigo As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_tipo_entrada_diario.fld_codigoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_tipo_entrada_diario.fld_codigoColumn) = value
            End Set
        End Property
        
        Public Property fld_descripcion As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_tipo_entrada_diario.fld_descripcionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_tipo_entrada_diario.fld_descripcionColumn) = value
            End Set
        End Property
        
        Public Property fld_cta_relacionada As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_tipo_entrada_diario.fld_cta_relacionadaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_tipo_entrada_diario.fld_cta_relacionadaColumn) = value
            End Set
        End Property
        
        Public Function Isfld_codigoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_tipo_entrada_diario.fld_codigoColumn)
        End Function
        
        Public Sub Setfld_codigoNull()
            Me(Me.tabletbl_tipo_entrada_diario.fld_codigoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_descripcionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_tipo_entrada_diario.fld_descripcionColumn)
        End Function
        
        Public Sub Setfld_descripcionNull()
            Me(Me.tabletbl_tipo_entrada_diario.fld_descripcionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cta_relacionadaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_tipo_entrada_diario.fld_cta_relacionadaColumn)
        End Function
        
        Public Sub Setfld_cta_relacionadaNull()
            Me(Me.tabletbl_tipo_entrada_diario.fld_cta_relacionadaColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_tipo_entrada_diarioRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_tipo_entrada_diarioRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_tipo_entrada_diarioRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_tipo_entrada_diarioRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_transaccionesDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_Codigo As DataColumn
        
        Private columnfld_Descripcion As DataColumn
        
        Private columnfld_DR As DataColumn
        
        Private columnfld_CR As DataColumn
        
        Private columnfld_Date As DataColumn
        
        Private columnfld_CreadoPor As DataColumn
        
        Private columnfld_Status As DataColumn
        
        Private columnfld_IdEntrada As DataColumn
        
        Private columnfld_id As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_transacciones")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_CodigoColumn As DataColumn
            Get
                Return Me.columnfld_Codigo
            End Get
        End Property
        
        Friend ReadOnly Property fld_DescripcionColumn As DataColumn
            Get
                Return Me.columnfld_Descripcion
            End Get
        End Property
        
        Friend ReadOnly Property fld_DRColumn As DataColumn
            Get
                Return Me.columnfld_DR
            End Get
        End Property
        
        Friend ReadOnly Property fld_CRColumn As DataColumn
            Get
                Return Me.columnfld_CR
            End Get
        End Property
        
        Friend ReadOnly Property fld_DateColumn As DataColumn
            Get
                Return Me.columnfld_Date
            End Get
        End Property
        
        Friend ReadOnly Property fld_CreadoPorColumn As DataColumn
            Get
                Return Me.columnfld_CreadoPor
            End Get
        End Property
        
        Friend ReadOnly Property fld_StatusColumn As DataColumn
            Get
                Return Me.columnfld_Status
            End Get
        End Property
        
        Friend ReadOnly Property fld_IdEntradaColumn As DataColumn
            Get
                Return Me.columnfld_IdEntrada
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_transaccionesRow
            Get
                Return CType(Me.Rows(index),tbl_transaccionesRow)
            End Get
        End Property
        
        Public Event tbl_transaccionesRowChanged As tbl_transaccionesRowChangeEventHandler
        
        Public Event tbl_transaccionesRowChanging As tbl_transaccionesRowChangeEventHandler
        
        Public Event tbl_transaccionesRowDeleted As tbl_transaccionesRowChangeEventHandler
        
        Public Event tbl_transaccionesRowDeleting As tbl_transaccionesRowChangeEventHandler
        
        Public Overloads Sub Addtbl_transaccionesRow(ByVal row As tbl_transaccionesRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_transaccionesRow(ByVal fld_Codigo As String, ByVal fld_Descripcion As String, ByVal fld_DR As Double, ByVal fld_CR As Double, ByVal fld_Date As Date, ByVal fld_CreadoPor As String, ByVal fld_Status As String, ByVal fld_IdEntrada As String) As tbl_transaccionesRow
            Dim rowtbl_transaccionesRow As tbl_transaccionesRow = CType(Me.NewRow,tbl_transaccionesRow)
            rowtbl_transaccionesRow.ItemArray = New Object() {fld_Codigo, fld_Descripcion, fld_DR, fld_CR, fld_Date, fld_CreadoPor, fld_Status, fld_IdEntrada, Nothing}
            Me.Rows.Add(rowtbl_transaccionesRow)
            Return rowtbl_transaccionesRow
        End Function
        
        Public Function FindByfld_id(ByVal fld_id As Integer) As tbl_transaccionesRow
            Return CType(Me.Rows.Find(New Object() {fld_id}),tbl_transaccionesRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_transaccionesDataTable = CType(MyBase.Clone,tbl_transaccionesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_transaccionesDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_Codigo = Me.Columns("fld_Codigo")
            Me.columnfld_Descripcion = Me.Columns("fld_Descripcion")
            Me.columnfld_DR = Me.Columns("fld_DR")
            Me.columnfld_CR = Me.Columns("fld_CR")
            Me.columnfld_Date = Me.Columns("fld_Date")
            Me.columnfld_CreadoPor = Me.Columns("fld_CreadoPor")
            Me.columnfld_Status = Me.Columns("fld_Status")
            Me.columnfld_IdEntrada = Me.Columns("fld_IdEntrada")
            Me.columnfld_id = Me.Columns("fld_id")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_Codigo = New DataColumn("fld_Codigo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Codigo)
            Me.columnfld_Descripcion = New DataColumn("fld_Descripcion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Descripcion)
            Me.columnfld_DR = New DataColumn("fld_DR", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_DR)
            Me.columnfld_CR = New DataColumn("fld_CR", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_CR)
            Me.columnfld_Date = New DataColumn("fld_Date", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Date)
            Me.columnfld_CreadoPor = New DataColumn("fld_CreadoPor", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_CreadoPor)
            Me.columnfld_Status = New DataColumn("fld_Status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Status)
            Me.columnfld_IdEntrada = New DataColumn("fld_IdEntrada", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_IdEntrada)
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey50", New DataColumn() {Me.columnfld_id}, true))
            Me.columnfld_id.AutoIncrement = true
            Me.columnfld_id.AllowDBNull = false
            Me.columnfld_id.Unique = true
        End Sub
        
        Public Function Newtbl_transaccionesRow() As tbl_transaccionesRow
            Return CType(Me.NewRow,tbl_transaccionesRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_transaccionesRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_transaccionesRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_transaccionesRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_transaccionesRowChanged(Me, New tbl_transaccionesRowChangeEvent(CType(e.Row,tbl_transaccionesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_transaccionesRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_transaccionesRowChanging(Me, New tbl_transaccionesRowChangeEvent(CType(e.Row,tbl_transaccionesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_transaccionesRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_transaccionesRowDeleted(Me, New tbl_transaccionesRowChangeEvent(CType(e.Row,tbl_transaccionesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_transaccionesRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_transaccionesRowDeleting(Me, New tbl_transaccionesRowChangeEvent(CType(e.Row,tbl_transaccionesRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_transaccionesRow(ByVal row As tbl_transaccionesRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_transaccionesRow
        Inherits DataRow
        
        Private tabletbl_transacciones As tbl_transaccionesDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_transacciones = CType(Me.Table,tbl_transaccionesDataTable)
        End Sub
        
        Public Property fld_Codigo As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_transacciones.fld_CodigoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_transacciones.fld_CodigoColumn) = value
            End Set
        End Property
        
        Public Property fld_Descripcion As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_transacciones.fld_DescripcionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_transacciones.fld_DescripcionColumn) = value
            End Set
        End Property
        
        Public Property fld_DR As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_transacciones.fld_DRColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_transacciones.fld_DRColumn) = value
            End Set
        End Property
        
        Public Property fld_CR As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_transacciones.fld_CRColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_transacciones.fld_CRColumn) = value
            End Set
        End Property
        
        Public Property fld_Date As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_transacciones.fld_DateColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_transacciones.fld_DateColumn) = value
            End Set
        End Property
        
        Public Property fld_CreadoPor As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_transacciones.fld_CreadoPorColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_transacciones.fld_CreadoPorColumn) = value
            End Set
        End Property
        
        Public Property fld_Status As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_transacciones.fld_StatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_transacciones.fld_StatusColumn) = value
            End Set
        End Property
        
        Public Property fld_IdEntrada As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_transacciones.fld_IdEntradaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_transacciones.fld_IdEntradaColumn) = value
            End Set
        End Property
        
        Public Property fld_id As Integer
            Get
                Return CType(Me(Me.tabletbl_transacciones.fld_idColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_transacciones.fld_idColumn) = value
            End Set
        End Property
        
        Public Function Isfld_CodigoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_transacciones.fld_CodigoColumn)
        End Function
        
        Public Sub Setfld_CodigoNull()
            Me(Me.tabletbl_transacciones.fld_CodigoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_DescripcionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_transacciones.fld_DescripcionColumn)
        End Function
        
        Public Sub Setfld_DescripcionNull()
            Me(Me.tabletbl_transacciones.fld_DescripcionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_DRNull() As Boolean
            Return Me.IsNull(Me.tabletbl_transacciones.fld_DRColumn)
        End Function
        
        Public Sub Setfld_DRNull()
            Me(Me.tabletbl_transacciones.fld_DRColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_CRNull() As Boolean
            Return Me.IsNull(Me.tabletbl_transacciones.fld_CRColumn)
        End Function
        
        Public Sub Setfld_CRNull()
            Me(Me.tabletbl_transacciones.fld_CRColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_DateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_transacciones.fld_DateColumn)
        End Function
        
        Public Sub Setfld_DateNull()
            Me(Me.tabletbl_transacciones.fld_DateColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_CreadoPorNull() As Boolean
            Return Me.IsNull(Me.tabletbl_transacciones.fld_CreadoPorColumn)
        End Function
        
        Public Sub Setfld_CreadoPorNull()
            Me(Me.tabletbl_transacciones.fld_CreadoPorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_StatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_transacciones.fld_StatusColumn)
        End Function
        
        Public Sub Setfld_StatusNull()
            Me(Me.tabletbl_transacciones.fld_StatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_IdEntradaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_transacciones.fld_IdEntradaColumn)
        End Function
        
        Public Sub Setfld_IdEntradaNull()
            Me(Me.tabletbl_transacciones.fld_IdEntradaColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_transaccionesRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_transaccionesRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_transaccionesRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_transaccionesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_userDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id As DataColumn
        
        Private columnfld_UserID As DataColumn
        
        Private columnfld_Password As DataColumn
        
        Private columnfld_cargo As DataColumn
        
        Private columnfld_FirstName As DataColumn
        
        Private columnfld_LastName As DataColumn
        
        Private columnfld_departamento As DataColumn
        
        Private columnfld_Status As DataColumn
        
        Private columnfld_Created As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_user")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_UserIDColumn As DataColumn
            Get
                Return Me.columnfld_UserID
            End Get
        End Property
        
        Friend ReadOnly Property fld_PasswordColumn As DataColumn
            Get
                Return Me.columnfld_Password
            End Get
        End Property
        
        Friend ReadOnly Property fld_cargoColumn As DataColumn
            Get
                Return Me.columnfld_cargo
            End Get
        End Property
        
        Friend ReadOnly Property fld_FirstNameColumn As DataColumn
            Get
                Return Me.columnfld_FirstName
            End Get
        End Property
        
        Friend ReadOnly Property fld_LastNameColumn As DataColumn
            Get
                Return Me.columnfld_LastName
            End Get
        End Property
        
        Friend ReadOnly Property fld_departamentoColumn As DataColumn
            Get
                Return Me.columnfld_departamento
            End Get
        End Property
        
        Friend ReadOnly Property fld_StatusColumn As DataColumn
            Get
                Return Me.columnfld_Status
            End Get
        End Property
        
        Friend ReadOnly Property fld_CreatedColumn As DataColumn
            Get
                Return Me.columnfld_Created
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_userRow
            Get
                Return CType(Me.Rows(index),tbl_userRow)
            End Get
        End Property
        
        Public Event tbl_userRowChanged As tbl_userRowChangeEventHandler
        
        Public Event tbl_userRowChanging As tbl_userRowChangeEventHandler
        
        Public Event tbl_userRowDeleted As tbl_userRowChangeEventHandler
        
        Public Event tbl_userRowDeleting As tbl_userRowChangeEventHandler
        
        Public Overloads Sub Addtbl_userRow(ByVal row As tbl_userRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_userRow(ByVal fld_UserID As String, ByVal fld_Password As String, ByVal fld_cargo As String, ByVal fld_FirstName As String, ByVal fld_LastName As String, ByVal fld_departamento As String, ByVal fld_Status As String, ByVal fld_Created As String) As tbl_userRow
            Dim rowtbl_userRow As tbl_userRow = CType(Me.NewRow,tbl_userRow)
            rowtbl_userRow.ItemArray = New Object() {Nothing, fld_UserID, fld_Password, fld_cargo, fld_FirstName, fld_LastName, fld_departamento, fld_Status, fld_Created}
            Me.Rows.Add(rowtbl_userRow)
            Return rowtbl_userRow
        End Function
        
        Public Function FindByfld_id(ByVal fld_id As Integer) As tbl_userRow
            Return CType(Me.Rows.Find(New Object() {fld_id}),tbl_userRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_userDataTable = CType(MyBase.Clone,tbl_userDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_userDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnfld_UserID = Me.Columns("fld_UserID")
            Me.columnfld_Password = Me.Columns("fld_Password")
            Me.columnfld_cargo = Me.Columns("fld_cargo")
            Me.columnfld_FirstName = Me.Columns("fld_FirstName")
            Me.columnfld_LastName = Me.Columns("fld_LastName")
            Me.columnfld_departamento = Me.Columns("fld_departamento")
            Me.columnfld_Status = Me.Columns("fld_Status")
            Me.columnfld_Created = Me.Columns("fld_Created")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnfld_UserID = New DataColumn("fld_UserID", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_UserID)
            Me.columnfld_Password = New DataColumn("fld_Password", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Password)
            Me.columnfld_cargo = New DataColumn("fld_cargo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cargo)
            Me.columnfld_FirstName = New DataColumn("fld_FirstName", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_FirstName)
            Me.columnfld_LastName = New DataColumn("fld_LastName", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_LastName)
            Me.columnfld_departamento = New DataColumn("fld_departamento", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_departamento)
            Me.columnfld_Status = New DataColumn("fld_Status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Status)
            Me.columnfld_Created = New DataColumn("fld_Created", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Created)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey53", New DataColumn() {Me.columnfld_id}, true))
            Me.columnfld_id.AutoIncrement = true
            Me.columnfld_id.AllowDBNull = false
            Me.columnfld_id.Unique = true
        End Sub
        
        Public Function Newtbl_userRow() As tbl_userRow
            Return CType(Me.NewRow,tbl_userRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_userRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_userRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_userRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_userRowChanged(Me, New tbl_userRowChangeEvent(CType(e.Row,tbl_userRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_userRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_userRowChanging(Me, New tbl_userRowChangeEvent(CType(e.Row,tbl_userRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_userRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_userRowDeleted(Me, New tbl_userRowChangeEvent(CType(e.Row,tbl_userRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_userRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_userRowDeleting(Me, New tbl_userRowChangeEvent(CType(e.Row,tbl_userRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_userRow(ByVal row As tbl_userRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_userRow
        Inherits DataRow
        
        Private tabletbl_user As tbl_userDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_user = CType(Me.Table,tbl_userDataTable)
        End Sub
        
        Public Property fld_id As Integer
            Get
                Return CType(Me(Me.tabletbl_user.fld_idColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_user.fld_idColumn) = value
            End Set
        End Property
        
        Public Property fld_UserID As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_user.fld_UserIDColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_user.fld_UserIDColumn) = value
            End Set
        End Property
        
        Public Property fld_Password As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_user.fld_PasswordColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_user.fld_PasswordColumn) = value
            End Set
        End Property
        
        Public Property fld_cargo As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_user.fld_cargoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_user.fld_cargoColumn) = value
            End Set
        End Property
        
        Public Property fld_FirstName As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_user.fld_FirstNameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_user.fld_FirstNameColumn) = value
            End Set
        End Property
        
        Public Property fld_LastName As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_user.fld_LastNameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_user.fld_LastNameColumn) = value
            End Set
        End Property
        
        Public Property fld_departamento As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_user.fld_departamentoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_user.fld_departamentoColumn) = value
            End Set
        End Property
        
        Public Property fld_Status As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_user.fld_StatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_user.fld_StatusColumn) = value
            End Set
        End Property
        
        Public Property fld_Created As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_user.fld_CreatedColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_user.fld_CreatedColumn) = value
            End Set
        End Property
        
        Public Function Isfld_UserIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_user.fld_UserIDColumn)
        End Function
        
        Public Sub Setfld_UserIDNull()
            Me(Me.tabletbl_user.fld_UserIDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_PasswordNull() As Boolean
            Return Me.IsNull(Me.tabletbl_user.fld_PasswordColumn)
        End Function
        
        Public Sub Setfld_PasswordNull()
            Me(Me.tabletbl_user.fld_PasswordColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cargoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_user.fld_cargoColumn)
        End Function
        
        Public Sub Setfld_cargoNull()
            Me(Me.tabletbl_user.fld_cargoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_FirstNameNull() As Boolean
            Return Me.IsNull(Me.tabletbl_user.fld_FirstNameColumn)
        End Function
        
        Public Sub Setfld_FirstNameNull()
            Me(Me.tabletbl_user.fld_FirstNameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_LastNameNull() As Boolean
            Return Me.IsNull(Me.tabletbl_user.fld_LastNameColumn)
        End Function
        
        Public Sub Setfld_LastNameNull()
            Me(Me.tabletbl_user.fld_LastNameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_departamentoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_user.fld_departamentoColumn)
        End Function
        
        Public Sub Setfld_departamentoNull()
            Me(Me.tabletbl_user.fld_departamentoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_StatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_user.fld_StatusColumn)
        End Function
        
        Public Sub Setfld_StatusNull()
            Me(Me.tabletbl_user.fld_StatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_CreatedNull() As Boolean
            Return Me.IsNull(Me.tabletbl_user.fld_CreatedColumn)
        End Function
        
        Public Sub Setfld_CreatedNull()
            Me(Me.tabletbl_user.fld_CreatedColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_userRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_userRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_userRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_userRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_cuadre_cajaDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id_cc As DataColumn
        
        Private columnfld_fecha As DataColumn
        
        Private columnfld_detalle_venta_contado As DataColumn
        
        Private columnfld_monto_venta_contado As DataColumn
        
        Private columnfld_detalle_venta_credito As DataColumn
        
        Private columnfld_monto_venta_credito As DataColumn
        
        Private columnfld_detalle_recibo_ingreso As DataColumn
        
        Private columnfld_monto_recibo_ingreso As DataColumn
        
        Private columnfld_detalle_salida_caja As DataColumn
        
        Private columnfld_monto_salida_caja As DataColumn
        
        Private columnfld_detalle_ventas_nulas_contado As DataColumn
        
        Private columnfld_monto_ventas_nulas_contado As DataColumn
        
        Private columnfld_detalle_ventas_nulas_credito As DataColumn
        
        Private columnfld_monto_ventas_nulas_credito As DataColumn
        
        Private columnfld_detalle_ingreso_caja As DataColumn
        
        Private columnfld_monto_ingreso_caja As DataColumn
        
        Private columnfld_detalle_dev_ventas_credito As DataColumn
        
        Private columnfld_monto_dev_ventas_credito As DataColumn
        
        Private columnfld_detalle_dev_ventas_contado As DataColumn
        
        Private columnfld_monto_dev_ventas_contado As DataColumn
        
        Private columnfld_doc_afectado_dev_credito As DataColumn
        
        Private columnfld_doc_afectado_dev_contado As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_cuadre_caja")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_ccColumn As DataColumn
            Get
                Return Me.columnfld_id_cc
            End Get
        End Property
        
        Friend ReadOnly Property fld_fechaColumn As DataColumn
            Get
                Return Me.columnfld_fecha
            End Get
        End Property
        
        Friend ReadOnly Property fld_detalle_venta_contadoColumn As DataColumn
            Get
                Return Me.columnfld_detalle_venta_contado
            End Get
        End Property
        
        Friend ReadOnly Property fld_monto_venta_contadoColumn As DataColumn
            Get
                Return Me.columnfld_monto_venta_contado
            End Get
        End Property
        
        Friend ReadOnly Property fld_detalle_venta_creditoColumn As DataColumn
            Get
                Return Me.columnfld_detalle_venta_credito
            End Get
        End Property
        
        Friend ReadOnly Property fld_monto_venta_creditoColumn As DataColumn
            Get
                Return Me.columnfld_monto_venta_credito
            End Get
        End Property
        
        Friend ReadOnly Property fld_detalle_recibo_ingresoColumn As DataColumn
            Get
                Return Me.columnfld_detalle_recibo_ingreso
            End Get
        End Property
        
        Friend ReadOnly Property fld_monto_recibo_ingresoColumn As DataColumn
            Get
                Return Me.columnfld_monto_recibo_ingreso
            End Get
        End Property
        
        Friend ReadOnly Property fld_detalle_salida_cajaColumn As DataColumn
            Get
                Return Me.columnfld_detalle_salida_caja
            End Get
        End Property
        
        Friend ReadOnly Property fld_monto_salida_cajaColumn As DataColumn
            Get
                Return Me.columnfld_monto_salida_caja
            End Get
        End Property
        
        Friend ReadOnly Property fld_detalle_ventas_nulas_contadoColumn As DataColumn
            Get
                Return Me.columnfld_detalle_ventas_nulas_contado
            End Get
        End Property
        
        Friend ReadOnly Property fld_monto_ventas_nulas_contadoColumn As DataColumn
            Get
                Return Me.columnfld_monto_ventas_nulas_contado
            End Get
        End Property
        
        Friend ReadOnly Property fld_detalle_ventas_nulas_creditoColumn As DataColumn
            Get
                Return Me.columnfld_detalle_ventas_nulas_credito
            End Get
        End Property
        
        Friend ReadOnly Property fld_monto_ventas_nulas_creditoColumn As DataColumn
            Get
                Return Me.columnfld_monto_ventas_nulas_credito
            End Get
        End Property
        
        Friend ReadOnly Property fld_detalle_ingreso_cajaColumn As DataColumn
            Get
                Return Me.columnfld_detalle_ingreso_caja
            End Get
        End Property
        
        Friend ReadOnly Property fld_monto_ingreso_cajaColumn As DataColumn
            Get
                Return Me.columnfld_monto_ingreso_caja
            End Get
        End Property
        
        Friend ReadOnly Property fld_detalle_dev_ventas_creditoColumn As DataColumn
            Get
                Return Me.columnfld_detalle_dev_ventas_credito
            End Get
        End Property
        
        Friend ReadOnly Property fld_monto_dev_ventas_creditoColumn As DataColumn
            Get
                Return Me.columnfld_monto_dev_ventas_credito
            End Get
        End Property
        
        Friend ReadOnly Property fld_detalle_dev_ventas_contadoColumn As DataColumn
            Get
                Return Me.columnfld_detalle_dev_ventas_contado
            End Get
        End Property
        
        Friend ReadOnly Property fld_monto_dev_ventas_contadoColumn As DataColumn
            Get
                Return Me.columnfld_monto_dev_ventas_contado
            End Get
        End Property
        
        Friend ReadOnly Property fld_doc_afectado_dev_creditoColumn As DataColumn
            Get
                Return Me.columnfld_doc_afectado_dev_credito
            End Get
        End Property
        
        Friend ReadOnly Property fld_doc_afectado_dev_contadoColumn As DataColumn
            Get
                Return Me.columnfld_doc_afectado_dev_contado
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_cuadre_cajaRow
            Get
                Return CType(Me.Rows(index),tbl_cuadre_cajaRow)
            End Get
        End Property
        
        Public Event tbl_cuadre_cajaRowChanged As tbl_cuadre_cajaRowChangeEventHandler
        
        Public Event tbl_cuadre_cajaRowChanging As tbl_cuadre_cajaRowChangeEventHandler
        
        Public Event tbl_cuadre_cajaRowDeleted As tbl_cuadre_cajaRowChangeEventHandler
        
        Public Event tbl_cuadre_cajaRowDeleting As tbl_cuadre_cajaRowChangeEventHandler
        
        Public Overloads Sub Addtbl_cuadre_cajaRow(ByVal row As tbl_cuadre_cajaRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_cuadre_cajaRow( _
                    ByVal fld_fecha As Date,  _
                    ByVal fld_detalle_venta_contado As String,  _
                    ByVal fld_monto_venta_contado As Double,  _
                    ByVal fld_detalle_venta_credito As String,  _
                    ByVal fld_monto_venta_credito As Double,  _
                    ByVal fld_detalle_recibo_ingreso As String,  _
                    ByVal fld_monto_recibo_ingreso As Double,  _
                    ByVal fld_detalle_salida_caja As String,  _
                    ByVal fld_monto_salida_caja As Double,  _
                    ByVal fld_detalle_ventas_nulas_contado As String,  _
                    ByVal fld_monto_ventas_nulas_contado As Double,  _
                    ByVal fld_detalle_ventas_nulas_credito As String,  _
                    ByVal fld_monto_ventas_nulas_credito As Double,  _
                    ByVal fld_detalle_ingreso_caja As String,  _
                    ByVal fld_monto_ingreso_caja As Double,  _
                    ByVal fld_detalle_dev_ventas_credito As String,  _
                    ByVal fld_monto_dev_ventas_credito As Double,  _
                    ByVal fld_detalle_dev_ventas_contado As String,  _
                    ByVal fld_monto_dev_ventas_contado As Double,  _
                    ByVal fld_doc_afectado_dev_credito As String,  _
                    ByVal fld_doc_afectado_dev_contado As String) As tbl_cuadre_cajaRow
            Dim rowtbl_cuadre_cajaRow As tbl_cuadre_cajaRow = CType(Me.NewRow,tbl_cuadre_cajaRow)
            rowtbl_cuadre_cajaRow.ItemArray = New Object() {Nothing, fld_fecha, fld_detalle_venta_contado, fld_monto_venta_contado, fld_detalle_venta_credito, fld_monto_venta_credito, fld_detalle_recibo_ingreso, fld_monto_recibo_ingreso, fld_detalle_salida_caja, fld_monto_salida_caja, fld_detalle_ventas_nulas_contado, fld_monto_ventas_nulas_contado, fld_detalle_ventas_nulas_credito, fld_monto_ventas_nulas_credito, fld_detalle_ingreso_caja, fld_monto_ingreso_caja, fld_detalle_dev_ventas_credito, fld_monto_dev_ventas_credito, fld_detalle_dev_ventas_contado, fld_monto_dev_ventas_contado, fld_doc_afectado_dev_credito, fld_doc_afectado_dev_contado}
            Me.Rows.Add(rowtbl_cuadre_cajaRow)
            Return rowtbl_cuadre_cajaRow
        End Function
        
        Public Function FindByfld_id_cc(ByVal fld_id_cc As Integer) As tbl_cuadre_cajaRow
            Return CType(Me.Rows.Find(New Object() {fld_id_cc}),tbl_cuadre_cajaRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_cuadre_cajaDataTable = CType(MyBase.Clone,tbl_cuadre_cajaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_cuadre_cajaDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id_cc = Me.Columns("fld_id_cc")
            Me.columnfld_fecha = Me.Columns("fld_fecha")
            Me.columnfld_detalle_venta_contado = Me.Columns("fld_detalle_venta_contado")
            Me.columnfld_monto_venta_contado = Me.Columns("fld_monto_venta_contado")
            Me.columnfld_detalle_venta_credito = Me.Columns("fld_detalle_venta_credito")
            Me.columnfld_monto_venta_credito = Me.Columns("fld_monto_venta_credito")
            Me.columnfld_detalle_recibo_ingreso = Me.Columns("fld_detalle_recibo_ingreso")
            Me.columnfld_monto_recibo_ingreso = Me.Columns("fld_monto_recibo_ingreso")
            Me.columnfld_detalle_salida_caja = Me.Columns("fld_detalle_salida_caja")
            Me.columnfld_monto_salida_caja = Me.Columns("fld_monto_salida_caja")
            Me.columnfld_detalle_ventas_nulas_contado = Me.Columns("fld_detalle_ventas_nulas_contado")
            Me.columnfld_monto_ventas_nulas_contado = Me.Columns("fld_monto_ventas_nulas_contado")
            Me.columnfld_detalle_ventas_nulas_credito = Me.Columns("fld_detalle_ventas_nulas_credito")
            Me.columnfld_monto_ventas_nulas_credito = Me.Columns("fld_monto_ventas_nulas_credito")
            Me.columnfld_detalle_ingreso_caja = Me.Columns("fld_detalle_ingreso_caja")
            Me.columnfld_monto_ingreso_caja = Me.Columns("fld_monto_ingreso_caja")
            Me.columnfld_detalle_dev_ventas_credito = Me.Columns("fld_detalle_dev_ventas_credito")
            Me.columnfld_monto_dev_ventas_credito = Me.Columns("fld_monto_dev_ventas_credito")
            Me.columnfld_detalle_dev_ventas_contado = Me.Columns("fld_detalle_dev_ventas_contado")
            Me.columnfld_monto_dev_ventas_contado = Me.Columns("fld_monto_dev_ventas_contado")
            Me.columnfld_doc_afectado_dev_credito = Me.Columns("fld_doc_afectado_dev_credito")
            Me.columnfld_doc_afectado_dev_contado = Me.Columns("fld_doc_afectado_dev_contado")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id_cc = New DataColumn("fld_id_cc", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_cc)
            Me.columnfld_fecha = New DataColumn("fld_fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha)
            Me.columnfld_detalle_venta_contado = New DataColumn("fld_detalle_venta_contado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_detalle_venta_contado)
            Me.columnfld_monto_venta_contado = New DataColumn("fld_monto_venta_contado", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto_venta_contado)
            Me.columnfld_detalle_venta_credito = New DataColumn("fld_detalle_venta_credito", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_detalle_venta_credito)
            Me.columnfld_monto_venta_credito = New DataColumn("fld_monto_venta_credito", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto_venta_credito)
            Me.columnfld_detalle_recibo_ingreso = New DataColumn("fld_detalle_recibo_ingreso", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_detalle_recibo_ingreso)
            Me.columnfld_monto_recibo_ingreso = New DataColumn("fld_monto_recibo_ingreso", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto_recibo_ingreso)
            Me.columnfld_detalle_salida_caja = New DataColumn("fld_detalle_salida_caja", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_detalle_salida_caja)
            Me.columnfld_monto_salida_caja = New DataColumn("fld_monto_salida_caja", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto_salida_caja)
            Me.columnfld_detalle_ventas_nulas_contado = New DataColumn("fld_detalle_ventas_nulas_contado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_detalle_ventas_nulas_contado)
            Me.columnfld_monto_ventas_nulas_contado = New DataColumn("fld_monto_ventas_nulas_contado", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto_ventas_nulas_contado)
            Me.columnfld_detalle_ventas_nulas_credito = New DataColumn("fld_detalle_ventas_nulas_credito", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_detalle_ventas_nulas_credito)
            Me.columnfld_monto_ventas_nulas_credito = New DataColumn("fld_monto_ventas_nulas_credito", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto_ventas_nulas_credito)
            Me.columnfld_detalle_ingreso_caja = New DataColumn("fld_detalle_ingreso_caja", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_detalle_ingreso_caja)
            Me.columnfld_monto_ingreso_caja = New DataColumn("fld_monto_ingreso_caja", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto_ingreso_caja)
            Me.columnfld_detalle_dev_ventas_credito = New DataColumn("fld_detalle_dev_ventas_credito", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_detalle_dev_ventas_credito)
            Me.columnfld_monto_dev_ventas_credito = New DataColumn("fld_monto_dev_ventas_credito", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto_dev_ventas_credito)
            Me.columnfld_detalle_dev_ventas_contado = New DataColumn("fld_detalle_dev_ventas_contado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_detalle_dev_ventas_contado)
            Me.columnfld_monto_dev_ventas_contado = New DataColumn("fld_monto_dev_ventas_contado", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto_dev_ventas_contado)
            Me.columnfld_doc_afectado_dev_credito = New DataColumn("fld_doc_afectado_dev_credito", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_doc_afectado_dev_credito)
            Me.columnfld_doc_afectado_dev_contado = New DataColumn("fld_doc_afectado_dev_contado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_doc_afectado_dev_contado)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey3", New DataColumn() {Me.columnfld_id_cc}, true))
            Me.columnfld_id_cc.AutoIncrement = true
            Me.columnfld_id_cc.AllowDBNull = false
            Me.columnfld_id_cc.Unique = true
        End Sub
        
        Public Function Newtbl_cuadre_cajaRow() As tbl_cuadre_cajaRow
            Return CType(Me.NewRow,tbl_cuadre_cajaRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_cuadre_cajaRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_cuadre_cajaRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_cuadre_cajaRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_cuadre_cajaRowChanged(Me, New tbl_cuadre_cajaRowChangeEvent(CType(e.Row,tbl_cuadre_cajaRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_cuadre_cajaRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_cuadre_cajaRowChanging(Me, New tbl_cuadre_cajaRowChangeEvent(CType(e.Row,tbl_cuadre_cajaRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_cuadre_cajaRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_cuadre_cajaRowDeleted(Me, New tbl_cuadre_cajaRowChangeEvent(CType(e.Row,tbl_cuadre_cajaRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_cuadre_cajaRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_cuadre_cajaRowDeleting(Me, New tbl_cuadre_cajaRowChangeEvent(CType(e.Row,tbl_cuadre_cajaRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_cuadre_cajaRow(ByVal row As tbl_cuadre_cajaRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_cuadre_cajaRow
        Inherits DataRow
        
        Private tabletbl_cuadre_caja As tbl_cuadre_cajaDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_cuadre_caja = CType(Me.Table,tbl_cuadre_cajaDataTable)
        End Sub
        
        Public Property fld_id_cc As Integer
            Get
                Return CType(Me(Me.tabletbl_cuadre_caja.fld_id_ccColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_id_ccColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_caja.fld_fechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_fechaColumn) = value
            End Set
        End Property
        
        Public Property fld_detalle_venta_contado As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_caja.fld_detalle_venta_contadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_detalle_venta_contadoColumn) = value
            End Set
        End Property
        
        Public Property fld_monto_venta_contado As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_caja.fld_monto_venta_contadoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_monto_venta_contadoColumn) = value
            End Set
        End Property
        
        Public Property fld_detalle_venta_credito As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_caja.fld_detalle_venta_creditoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_detalle_venta_creditoColumn) = value
            End Set
        End Property
        
        Public Property fld_monto_venta_credito As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_caja.fld_monto_venta_creditoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_monto_venta_creditoColumn) = value
            End Set
        End Property
        
        Public Property fld_detalle_recibo_ingreso As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_caja.fld_detalle_recibo_ingresoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_detalle_recibo_ingresoColumn) = value
            End Set
        End Property
        
        Public Property fld_monto_recibo_ingreso As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_caja.fld_monto_recibo_ingresoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_monto_recibo_ingresoColumn) = value
            End Set
        End Property
        
        Public Property fld_detalle_salida_caja As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_caja.fld_detalle_salida_cajaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_detalle_salida_cajaColumn) = value
            End Set
        End Property
        
        Public Property fld_monto_salida_caja As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_caja.fld_monto_salida_cajaColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_monto_salida_cajaColumn) = value
            End Set
        End Property
        
        Public Property fld_detalle_ventas_nulas_contado As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_caja.fld_detalle_ventas_nulas_contadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_detalle_ventas_nulas_contadoColumn) = value
            End Set
        End Property
        
        Public Property fld_monto_ventas_nulas_contado As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_caja.fld_monto_ventas_nulas_contadoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_monto_ventas_nulas_contadoColumn) = value
            End Set
        End Property
        
        Public Property fld_detalle_ventas_nulas_credito As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_caja.fld_detalle_ventas_nulas_creditoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_detalle_ventas_nulas_creditoColumn) = value
            End Set
        End Property
        
        Public Property fld_monto_ventas_nulas_credito As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_caja.fld_monto_ventas_nulas_creditoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_monto_ventas_nulas_creditoColumn) = value
            End Set
        End Property
        
        Public Property fld_detalle_ingreso_caja As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_caja.fld_detalle_ingreso_cajaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_detalle_ingreso_cajaColumn) = value
            End Set
        End Property
        
        Public Property fld_monto_ingreso_caja As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_caja.fld_monto_ingreso_cajaColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_monto_ingreso_cajaColumn) = value
            End Set
        End Property
        
        Public Property fld_detalle_dev_ventas_credito As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_caja.fld_detalle_dev_ventas_creditoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_detalle_dev_ventas_creditoColumn) = value
            End Set
        End Property
        
        Public Property fld_monto_dev_ventas_credito As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_caja.fld_monto_dev_ventas_creditoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_monto_dev_ventas_creditoColumn) = value
            End Set
        End Property
        
        Public Property fld_detalle_dev_ventas_contado As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_caja.fld_detalle_dev_ventas_contadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_detalle_dev_ventas_contadoColumn) = value
            End Set
        End Property
        
        Public Property fld_monto_dev_ventas_contado As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_caja.fld_monto_dev_ventas_contadoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_monto_dev_ventas_contadoColumn) = value
            End Set
        End Property
        
        Public Property fld_doc_afectado_dev_credito As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_caja.fld_doc_afectado_dev_creditoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_doc_afectado_dev_creditoColumn) = value
            End Set
        End Property
        
        Public Property fld_doc_afectado_dev_contado As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_caja.fld_doc_afectado_dev_contadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_caja.fld_doc_afectado_dev_contadoColumn) = value
            End Set
        End Property
        
        Public Function Isfld_fechaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_caja.fld_fechaColumn)
        End Function
        
        Public Sub Setfld_fechaNull()
            Me(Me.tabletbl_cuadre_caja.fld_fechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_detalle_venta_contadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_caja.fld_detalle_venta_contadoColumn)
        End Function
        
        Public Sub Setfld_detalle_venta_contadoNull()
            Me(Me.tabletbl_cuadre_caja.fld_detalle_venta_contadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_monto_venta_contadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_caja.fld_monto_venta_contadoColumn)
        End Function
        
        Public Sub Setfld_monto_venta_contadoNull()
            Me(Me.tabletbl_cuadre_caja.fld_monto_venta_contadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_detalle_venta_creditoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_caja.fld_detalle_venta_creditoColumn)
        End Function
        
        Public Sub Setfld_detalle_venta_creditoNull()
            Me(Me.tabletbl_cuadre_caja.fld_detalle_venta_creditoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_monto_venta_creditoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_caja.fld_monto_venta_creditoColumn)
        End Function
        
        Public Sub Setfld_monto_venta_creditoNull()
            Me(Me.tabletbl_cuadre_caja.fld_monto_venta_creditoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_detalle_recibo_ingresoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_caja.fld_detalle_recibo_ingresoColumn)
        End Function
        
        Public Sub Setfld_detalle_recibo_ingresoNull()
            Me(Me.tabletbl_cuadre_caja.fld_detalle_recibo_ingresoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_monto_recibo_ingresoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_caja.fld_monto_recibo_ingresoColumn)
        End Function
        
        Public Sub Setfld_monto_recibo_ingresoNull()
            Me(Me.tabletbl_cuadre_caja.fld_monto_recibo_ingresoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_detalle_salida_cajaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_caja.fld_detalle_salida_cajaColumn)
        End Function
        
        Public Sub Setfld_detalle_salida_cajaNull()
            Me(Me.tabletbl_cuadre_caja.fld_detalle_salida_cajaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_monto_salida_cajaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_caja.fld_monto_salida_cajaColumn)
        End Function
        
        Public Sub Setfld_monto_salida_cajaNull()
            Me(Me.tabletbl_cuadre_caja.fld_monto_salida_cajaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_detalle_ventas_nulas_contadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_caja.fld_detalle_ventas_nulas_contadoColumn)
        End Function
        
        Public Sub Setfld_detalle_ventas_nulas_contadoNull()
            Me(Me.tabletbl_cuadre_caja.fld_detalle_ventas_nulas_contadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_monto_ventas_nulas_contadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_caja.fld_monto_ventas_nulas_contadoColumn)
        End Function
        
        Public Sub Setfld_monto_ventas_nulas_contadoNull()
            Me(Me.tabletbl_cuadre_caja.fld_monto_ventas_nulas_contadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_detalle_ventas_nulas_creditoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_caja.fld_detalle_ventas_nulas_creditoColumn)
        End Function
        
        Public Sub Setfld_detalle_ventas_nulas_creditoNull()
            Me(Me.tabletbl_cuadre_caja.fld_detalle_ventas_nulas_creditoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_monto_ventas_nulas_creditoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_caja.fld_monto_ventas_nulas_creditoColumn)
        End Function
        
        Public Sub Setfld_monto_ventas_nulas_creditoNull()
            Me(Me.tabletbl_cuadre_caja.fld_monto_ventas_nulas_creditoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_detalle_ingreso_cajaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_caja.fld_detalle_ingreso_cajaColumn)
        End Function
        
        Public Sub Setfld_detalle_ingreso_cajaNull()
            Me(Me.tabletbl_cuadre_caja.fld_detalle_ingreso_cajaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_monto_ingreso_cajaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_caja.fld_monto_ingreso_cajaColumn)
        End Function
        
        Public Sub Setfld_monto_ingreso_cajaNull()
            Me(Me.tabletbl_cuadre_caja.fld_monto_ingreso_cajaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_detalle_dev_ventas_creditoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_caja.fld_detalle_dev_ventas_creditoColumn)
        End Function
        
        Public Sub Setfld_detalle_dev_ventas_creditoNull()
            Me(Me.tabletbl_cuadre_caja.fld_detalle_dev_ventas_creditoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_monto_dev_ventas_creditoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_caja.fld_monto_dev_ventas_creditoColumn)
        End Function
        
        Public Sub Setfld_monto_dev_ventas_creditoNull()
            Me(Me.tabletbl_cuadre_caja.fld_monto_dev_ventas_creditoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_detalle_dev_ventas_contadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_caja.fld_detalle_dev_ventas_contadoColumn)
        End Function
        
        Public Sub Setfld_detalle_dev_ventas_contadoNull()
            Me(Me.tabletbl_cuadre_caja.fld_detalle_dev_ventas_contadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_monto_dev_ventas_contadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_caja.fld_monto_dev_ventas_contadoColumn)
        End Function
        
        Public Sub Setfld_monto_dev_ventas_contadoNull()
            Me(Me.tabletbl_cuadre_caja.fld_monto_dev_ventas_contadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_doc_afectado_dev_creditoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_caja.fld_doc_afectado_dev_creditoColumn)
        End Function
        
        Public Sub Setfld_doc_afectado_dev_creditoNull()
            Me(Me.tabletbl_cuadre_caja.fld_doc_afectado_dev_creditoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_doc_afectado_dev_contadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_caja.fld_doc_afectado_dev_contadoColumn)
        End Function
        
        Public Sub Setfld_doc_afectado_dev_contadoNull()
            Me(Me.tabletbl_cuadre_caja.fld_doc_afectado_dev_contadoColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_cuadre_cajaRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_cuadre_cajaRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_cuadre_cajaRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_cuadre_cajaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_nc_cxcDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id_nc_cxc As DataColumn
        
        Private columnfld_cliente_id_nc As DataColumn
        
        Private columnfld_fecha As DataColumn
        
        Private columnfld_concepto As DataColumn
        
        Private columnfld_monto As DataColumn
        
        Private columnfld_user As DataColumn
        
        Private columnfld_status_nc As DataColumn
        
        Private columnfld_doc_afectado As DataColumn
        
        Private columnfld_doc_afectado_id As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_nc_cxc")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_nc_cxcColumn As DataColumn
            Get
                Return Me.columnfld_id_nc_cxc
            End Get
        End Property
        
        Friend ReadOnly Property fld_cliente_id_ncColumn As DataColumn
            Get
                Return Me.columnfld_cliente_id_nc
            End Get
        End Property
        
        Friend ReadOnly Property fld_fechaColumn As DataColumn
            Get
                Return Me.columnfld_fecha
            End Get
        End Property
        
        Friend ReadOnly Property fld_conceptoColumn As DataColumn
            Get
                Return Me.columnfld_concepto
            End Get
        End Property
        
        Friend ReadOnly Property fld_montoColumn As DataColumn
            Get
                Return Me.columnfld_monto
            End Get
        End Property
        
        Friend ReadOnly Property fld_userColumn As DataColumn
            Get
                Return Me.columnfld_user
            End Get
        End Property
        
        Friend ReadOnly Property fld_status_ncColumn As DataColumn
            Get
                Return Me.columnfld_status_nc
            End Get
        End Property
        
        Friend ReadOnly Property fld_doc_afectadoColumn As DataColumn
            Get
                Return Me.columnfld_doc_afectado
            End Get
        End Property
        
        Friend ReadOnly Property fld_doc_afectado_idColumn As DataColumn
            Get
                Return Me.columnfld_doc_afectado_id
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_nc_cxcRow
            Get
                Return CType(Me.Rows(index),tbl_nc_cxcRow)
            End Get
        End Property
        
        Public Event tbl_nc_cxcRowChanged As tbl_nc_cxcRowChangeEventHandler
        
        Public Event tbl_nc_cxcRowChanging As tbl_nc_cxcRowChangeEventHandler
        
        Public Event tbl_nc_cxcRowDeleted As tbl_nc_cxcRowChangeEventHandler
        
        Public Event tbl_nc_cxcRowDeleting As tbl_nc_cxcRowChangeEventHandler
        
        Public Overloads Sub Addtbl_nc_cxcRow(ByVal row As tbl_nc_cxcRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_nc_cxcRow(ByVal fld_cliente_id_nc As Integer, ByVal fld_fecha As Date, ByVal fld_concepto As String, ByVal fld_monto As Double, ByVal fld_user As String, ByVal fld_status_nc As String, ByVal fld_doc_afectado As String, ByVal fld_doc_afectado_id As Integer) As tbl_nc_cxcRow
            Dim rowtbl_nc_cxcRow As tbl_nc_cxcRow = CType(Me.NewRow,tbl_nc_cxcRow)
            rowtbl_nc_cxcRow.ItemArray = New Object() {Nothing, fld_cliente_id_nc, fld_fecha, fld_concepto, fld_monto, fld_user, fld_status_nc, fld_doc_afectado, fld_doc_afectado_id}
            Me.Rows.Add(rowtbl_nc_cxcRow)
            Return rowtbl_nc_cxcRow
        End Function
        
        Public Function FindByfld_id_nc_cxc(ByVal fld_id_nc_cxc As Integer) As tbl_nc_cxcRow
            Return CType(Me.Rows.Find(New Object() {fld_id_nc_cxc}),tbl_nc_cxcRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_nc_cxcDataTable = CType(MyBase.Clone,tbl_nc_cxcDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_nc_cxcDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id_nc_cxc = Me.Columns("fld_id_nc_cxc")
            Me.columnfld_cliente_id_nc = Me.Columns("fld_cliente_id_nc")
            Me.columnfld_fecha = Me.Columns("fld_fecha")
            Me.columnfld_concepto = Me.Columns("fld_concepto")
            Me.columnfld_monto = Me.Columns("fld_monto")
            Me.columnfld_user = Me.Columns("fld_user")
            Me.columnfld_status_nc = Me.Columns("fld_status_nc")
            Me.columnfld_doc_afectado = Me.Columns("fld_doc_afectado")
            Me.columnfld_doc_afectado_id = Me.Columns("fld_doc_afectado_id")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id_nc_cxc = New DataColumn("fld_id_nc_cxc", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_nc_cxc)
            Me.columnfld_cliente_id_nc = New DataColumn("fld_cliente_id_nc", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cliente_id_nc)
            Me.columnfld_fecha = New DataColumn("fld_fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha)
            Me.columnfld_concepto = New DataColumn("fld_concepto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_concepto)
            Me.columnfld_monto = New DataColumn("fld_monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto)
            Me.columnfld_user = New DataColumn("fld_user", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_user)
            Me.columnfld_status_nc = New DataColumn("fld_status_nc", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_status_nc)
            Me.columnfld_doc_afectado = New DataColumn("fld_doc_afectado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_doc_afectado)
            Me.columnfld_doc_afectado_id = New DataColumn("fld_doc_afectado_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_doc_afectado_id)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey12", New DataColumn() {Me.columnfld_id_nc_cxc}, true))
            Me.columnfld_id_nc_cxc.AutoIncrement = true
            Me.columnfld_id_nc_cxc.AllowDBNull = false
            Me.columnfld_id_nc_cxc.Unique = true
        End Sub
        
        Public Function Newtbl_nc_cxcRow() As tbl_nc_cxcRow
            Return CType(Me.NewRow,tbl_nc_cxcRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_nc_cxcRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_nc_cxcRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_nc_cxcRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_nc_cxcRowChanged(Me, New tbl_nc_cxcRowChangeEvent(CType(e.Row,tbl_nc_cxcRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_nc_cxcRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_nc_cxcRowChanging(Me, New tbl_nc_cxcRowChangeEvent(CType(e.Row,tbl_nc_cxcRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_nc_cxcRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_nc_cxcRowDeleted(Me, New tbl_nc_cxcRowChangeEvent(CType(e.Row,tbl_nc_cxcRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_nc_cxcRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_nc_cxcRowDeleting(Me, New tbl_nc_cxcRowChangeEvent(CType(e.Row,tbl_nc_cxcRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_nc_cxcRow(ByVal row As tbl_nc_cxcRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_nc_cxcRow
        Inherits DataRow
        
        Private tabletbl_nc_cxc As tbl_nc_cxcDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_nc_cxc = CType(Me.Table,tbl_nc_cxcDataTable)
        End Sub
        
        Public Property fld_id_nc_cxc As Integer
            Get
                Return CType(Me(Me.tabletbl_nc_cxc.fld_id_nc_cxcColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_nc_cxc.fld_id_nc_cxcColumn) = value
            End Set
        End Property
        
        Public Property fld_cliente_id_nc As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nc_cxc.fld_cliente_id_ncColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nc_cxc.fld_cliente_id_ncColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nc_cxc.fld_fechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nc_cxc.fld_fechaColumn) = value
            End Set
        End Property
        
        Public Property fld_concepto As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nc_cxc.fld_conceptoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nc_cxc.fld_conceptoColumn) = value
            End Set
        End Property
        
        Public Property fld_monto As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nc_cxc.fld_montoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nc_cxc.fld_montoColumn) = value
            End Set
        End Property
        
        Public Property fld_user As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nc_cxc.fld_userColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nc_cxc.fld_userColumn) = value
            End Set
        End Property
        
        Public Property fld_status_nc As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nc_cxc.fld_status_ncColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nc_cxc.fld_status_ncColumn) = value
            End Set
        End Property
        
        Public Property fld_doc_afectado As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nc_cxc.fld_doc_afectadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nc_cxc.fld_doc_afectadoColumn) = value
            End Set
        End Property
        
        Public Property fld_doc_afectado_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nc_cxc.fld_doc_afectado_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nc_cxc.fld_doc_afectado_idColumn) = value
            End Set
        End Property
        
        Public Function Isfld_cliente_id_ncNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nc_cxc.fld_cliente_id_ncColumn)
        End Function
        
        Public Sub Setfld_cliente_id_ncNull()
            Me(Me.tabletbl_nc_cxc.fld_cliente_id_ncColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fechaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nc_cxc.fld_fechaColumn)
        End Function
        
        Public Sub Setfld_fechaNull()
            Me(Me.tabletbl_nc_cxc.fld_fechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_conceptoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nc_cxc.fld_conceptoColumn)
        End Function
        
        Public Sub Setfld_conceptoNull()
            Me(Me.tabletbl_nc_cxc.fld_conceptoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_montoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nc_cxc.fld_montoColumn)
        End Function
        
        Public Sub Setfld_montoNull()
            Me(Me.tabletbl_nc_cxc.fld_montoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_userNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nc_cxc.fld_userColumn)
        End Function
        
        Public Sub Setfld_userNull()
            Me(Me.tabletbl_nc_cxc.fld_userColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_status_ncNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nc_cxc.fld_status_ncColumn)
        End Function
        
        Public Sub Setfld_status_ncNull()
            Me(Me.tabletbl_nc_cxc.fld_status_ncColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_doc_afectadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nc_cxc.fld_doc_afectadoColumn)
        End Function
        
        Public Sub Setfld_doc_afectadoNull()
            Me(Me.tabletbl_nc_cxc.fld_doc_afectadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_doc_afectado_idNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nc_cxc.fld_doc_afectado_idColumn)
        End Function
        
        Public Sub Setfld_doc_afectado_idNull()
            Me(Me.tabletbl_nc_cxc.fld_doc_afectado_idColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_nc_cxcRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_nc_cxcRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_nc_cxcRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_nc_cxcRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_nd_cxcDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id_nd_cxc As DataColumn
        
        Private columnfld_cliente_id_nd As DataColumn
        
        Private columnfld_fecha As DataColumn
        
        Private columnfld_concepto As DataColumn
        
        Private columnfld_monto As DataColumn
        
        Private columnfld_abono As DataColumn
        
        Private columnfld_balance As DataColumn
        
        Private columnfld_user As DataColumn
        
        Private columnfld_status_nd As DataColumn
        
        Private columnfld_ultimo_abono As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_nd_cxc")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_nd_cxcColumn As DataColumn
            Get
                Return Me.columnfld_id_nd_cxc
            End Get
        End Property
        
        Friend ReadOnly Property fld_cliente_id_ndColumn As DataColumn
            Get
                Return Me.columnfld_cliente_id_nd
            End Get
        End Property
        
        Friend ReadOnly Property fld_fechaColumn As DataColumn
            Get
                Return Me.columnfld_fecha
            End Get
        End Property
        
        Friend ReadOnly Property fld_conceptoColumn As DataColumn
            Get
                Return Me.columnfld_concepto
            End Get
        End Property
        
        Friend ReadOnly Property fld_montoColumn As DataColumn
            Get
                Return Me.columnfld_monto
            End Get
        End Property
        
        Friend ReadOnly Property fld_abonoColumn As DataColumn
            Get
                Return Me.columnfld_abono
            End Get
        End Property
        
        Friend ReadOnly Property fld_balanceColumn As DataColumn
            Get
                Return Me.columnfld_balance
            End Get
        End Property
        
        Friend ReadOnly Property fld_userColumn As DataColumn
            Get
                Return Me.columnfld_user
            End Get
        End Property
        
        Friend ReadOnly Property fld_status_ndColumn As DataColumn
            Get
                Return Me.columnfld_status_nd
            End Get
        End Property
        
        Friend ReadOnly Property fld_ultimo_abonoColumn As DataColumn
            Get
                Return Me.columnfld_ultimo_abono
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_nd_cxcRow
            Get
                Return CType(Me.Rows(index),tbl_nd_cxcRow)
            End Get
        End Property
        
        Public Event tbl_nd_cxcRowChanged As tbl_nd_cxcRowChangeEventHandler
        
        Public Event tbl_nd_cxcRowChanging As tbl_nd_cxcRowChangeEventHandler
        
        Public Event tbl_nd_cxcRowDeleted As tbl_nd_cxcRowChangeEventHandler
        
        Public Event tbl_nd_cxcRowDeleting As tbl_nd_cxcRowChangeEventHandler
        
        Public Overloads Sub Addtbl_nd_cxcRow(ByVal row As tbl_nd_cxcRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_nd_cxcRow(ByVal fld_cliente_id_nd As Integer, ByVal fld_fecha As Date, ByVal fld_concepto As String, ByVal fld_monto As Double, ByVal fld_abono As Double, ByVal fld_balance As Double, ByVal fld_user As String, ByVal fld_status_nd As String, ByVal fld_ultimo_abono As String) As tbl_nd_cxcRow
            Dim rowtbl_nd_cxcRow As tbl_nd_cxcRow = CType(Me.NewRow,tbl_nd_cxcRow)
            rowtbl_nd_cxcRow.ItemArray = New Object() {Nothing, fld_cliente_id_nd, fld_fecha, fld_concepto, fld_monto, fld_abono, fld_balance, fld_user, fld_status_nd, fld_ultimo_abono}
            Me.Rows.Add(rowtbl_nd_cxcRow)
            Return rowtbl_nd_cxcRow
        End Function
        
        Public Function FindByfld_id_nd_cxc(ByVal fld_id_nd_cxc As Integer) As tbl_nd_cxcRow
            Return CType(Me.Rows.Find(New Object() {fld_id_nd_cxc}),tbl_nd_cxcRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_nd_cxcDataTable = CType(MyBase.Clone,tbl_nd_cxcDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_nd_cxcDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id_nd_cxc = Me.Columns("fld_id_nd_cxc")
            Me.columnfld_cliente_id_nd = Me.Columns("fld_cliente_id_nd")
            Me.columnfld_fecha = Me.Columns("fld_fecha")
            Me.columnfld_concepto = Me.Columns("fld_concepto")
            Me.columnfld_monto = Me.Columns("fld_monto")
            Me.columnfld_abono = Me.Columns("fld_abono")
            Me.columnfld_balance = Me.Columns("fld_balance")
            Me.columnfld_user = Me.Columns("fld_user")
            Me.columnfld_status_nd = Me.Columns("fld_status_nd")
            Me.columnfld_ultimo_abono = Me.Columns("fld_ultimo_abono")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id_nd_cxc = New DataColumn("fld_id_nd_cxc", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_nd_cxc)
            Me.columnfld_cliente_id_nd = New DataColumn("fld_cliente_id_nd", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cliente_id_nd)
            Me.columnfld_fecha = New DataColumn("fld_fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha)
            Me.columnfld_concepto = New DataColumn("fld_concepto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_concepto)
            Me.columnfld_monto = New DataColumn("fld_monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto)
            Me.columnfld_abono = New DataColumn("fld_abono", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_abono)
            Me.columnfld_balance = New DataColumn("fld_balance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_balance)
            Me.columnfld_user = New DataColumn("fld_user", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_user)
            Me.columnfld_status_nd = New DataColumn("fld_status_nd", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_status_nd)
            Me.columnfld_ultimo_abono = New DataColumn("fld_ultimo_abono", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ultimo_abono)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey13", New DataColumn() {Me.columnfld_id_nd_cxc}, true))
            Me.columnfld_id_nd_cxc.AutoIncrement = true
            Me.columnfld_id_nd_cxc.AllowDBNull = false
            Me.columnfld_id_nd_cxc.Unique = true
        End Sub
        
        Public Function Newtbl_nd_cxcRow() As tbl_nd_cxcRow
            Return CType(Me.NewRow,tbl_nd_cxcRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_nd_cxcRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_nd_cxcRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_nd_cxcRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_nd_cxcRowChanged(Me, New tbl_nd_cxcRowChangeEvent(CType(e.Row,tbl_nd_cxcRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_nd_cxcRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_nd_cxcRowChanging(Me, New tbl_nd_cxcRowChangeEvent(CType(e.Row,tbl_nd_cxcRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_nd_cxcRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_nd_cxcRowDeleted(Me, New tbl_nd_cxcRowChangeEvent(CType(e.Row,tbl_nd_cxcRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_nd_cxcRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_nd_cxcRowDeleting(Me, New tbl_nd_cxcRowChangeEvent(CType(e.Row,tbl_nd_cxcRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_nd_cxcRow(ByVal row As tbl_nd_cxcRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_nd_cxcRow
        Inherits DataRow
        
        Private tabletbl_nd_cxc As tbl_nd_cxcDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_nd_cxc = CType(Me.Table,tbl_nd_cxcDataTable)
        End Sub
        
        Public Property fld_id_nd_cxc As Integer
            Get
                Return CType(Me(Me.tabletbl_nd_cxc.fld_id_nd_cxcColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_nd_cxc.fld_id_nd_cxcColumn) = value
            End Set
        End Property
        
        Public Property fld_cliente_id_nd As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nd_cxc.fld_cliente_id_ndColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nd_cxc.fld_cliente_id_ndColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nd_cxc.fld_fechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nd_cxc.fld_fechaColumn) = value
            End Set
        End Property
        
        Public Property fld_concepto As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nd_cxc.fld_conceptoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nd_cxc.fld_conceptoColumn) = value
            End Set
        End Property
        
        Public Property fld_monto As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nd_cxc.fld_montoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nd_cxc.fld_montoColumn) = value
            End Set
        End Property
        
        Public Property fld_abono As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nd_cxc.fld_abonoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nd_cxc.fld_abonoColumn) = value
            End Set
        End Property
        
        Public Property fld_balance As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nd_cxc.fld_balanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nd_cxc.fld_balanceColumn) = value
            End Set
        End Property
        
        Public Property fld_user As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nd_cxc.fld_userColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nd_cxc.fld_userColumn) = value
            End Set
        End Property
        
        Public Property fld_status_nd As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nd_cxc.fld_status_ndColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nd_cxc.fld_status_ndColumn) = value
            End Set
        End Property
        
        Public Property fld_ultimo_abono As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_nd_cxc.fld_ultimo_abonoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_nd_cxc.fld_ultimo_abonoColumn) = value
            End Set
        End Property
        
        Public Function Isfld_cliente_id_ndNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nd_cxc.fld_cliente_id_ndColumn)
        End Function
        
        Public Sub Setfld_cliente_id_ndNull()
            Me(Me.tabletbl_nd_cxc.fld_cliente_id_ndColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fechaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nd_cxc.fld_fechaColumn)
        End Function
        
        Public Sub Setfld_fechaNull()
            Me(Me.tabletbl_nd_cxc.fld_fechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_conceptoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nd_cxc.fld_conceptoColumn)
        End Function
        
        Public Sub Setfld_conceptoNull()
            Me(Me.tabletbl_nd_cxc.fld_conceptoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_montoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nd_cxc.fld_montoColumn)
        End Function
        
        Public Sub Setfld_montoNull()
            Me(Me.tabletbl_nd_cxc.fld_montoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_abonoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nd_cxc.fld_abonoColumn)
        End Function
        
        Public Sub Setfld_abonoNull()
            Me(Me.tabletbl_nd_cxc.fld_abonoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_balanceNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nd_cxc.fld_balanceColumn)
        End Function
        
        Public Sub Setfld_balanceNull()
            Me(Me.tabletbl_nd_cxc.fld_balanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_userNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nd_cxc.fld_userColumn)
        End Function
        
        Public Sub Setfld_userNull()
            Me(Me.tabletbl_nd_cxc.fld_userColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_status_ndNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nd_cxc.fld_status_ndColumn)
        End Function
        
        Public Sub Setfld_status_ndNull()
            Me(Me.tabletbl_nd_cxc.fld_status_ndColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ultimo_abonoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_nd_cxc.fld_ultimo_abonoColumn)
        End Function
        
        Public Sub Setfld_ultimo_abonoNull()
            Me(Me.tabletbl_nd_cxc.fld_ultimo_abonoColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_nd_cxcRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_nd_cxcRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_nd_cxcRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_nd_cxcRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_compras_salida_cajaDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id_doc As DataColumn
        
        Private columnfld_fecha As DataColumn
        
        Private columnfld_concepto As DataColumn
        
        Private columnfld_proveedor As DataColumn
        
        Private columnfld_fact_proveedor As DataColumn
        
        Private columnfld_monto As DataColumn
        
        Private columnfld_beneficiario As DataColumn
        
        Private columnfld_tipo As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_compras_salida_caja")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_docColumn As DataColumn
            Get
                Return Me.columnfld_id_doc
            End Get
        End Property
        
        Friend ReadOnly Property fld_fechaColumn As DataColumn
            Get
                Return Me.columnfld_fecha
            End Get
        End Property
        
        Friend ReadOnly Property fld_conceptoColumn As DataColumn
            Get
                Return Me.columnfld_concepto
            End Get
        End Property
        
        Friend ReadOnly Property fld_proveedorColumn As DataColumn
            Get
                Return Me.columnfld_proveedor
            End Get
        End Property
        
        Friend ReadOnly Property fld_fact_proveedorColumn As DataColumn
            Get
                Return Me.columnfld_fact_proveedor
            End Get
        End Property
        
        Friend ReadOnly Property fld_montoColumn As DataColumn
            Get
                Return Me.columnfld_monto
            End Get
        End Property
        
        Friend ReadOnly Property fld_beneficiarioColumn As DataColumn
            Get
                Return Me.columnfld_beneficiario
            End Get
        End Property
        
        Friend ReadOnly Property fld_tipoColumn As DataColumn
            Get
                Return Me.columnfld_tipo
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_compras_salida_cajaRow
            Get
                Return CType(Me.Rows(index),tbl_compras_salida_cajaRow)
            End Get
        End Property
        
        Public Event tbl_compras_salida_cajaRowChanged As tbl_compras_salida_cajaRowChangeEventHandler
        
        Public Event tbl_compras_salida_cajaRowChanging As tbl_compras_salida_cajaRowChangeEventHandler
        
        Public Event tbl_compras_salida_cajaRowDeleted As tbl_compras_salida_cajaRowChangeEventHandler
        
        Public Event tbl_compras_salida_cajaRowDeleting As tbl_compras_salida_cajaRowChangeEventHandler
        
        Public Overloads Sub Addtbl_compras_salida_cajaRow(ByVal row As tbl_compras_salida_cajaRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_compras_salida_cajaRow(ByVal fld_fecha As Date, ByVal fld_concepto As String, ByVal fld_proveedor As String, ByVal fld_fact_proveedor As String, ByVal fld_monto As Double, ByVal fld_beneficiario As String, ByVal fld_tipo As String) As tbl_compras_salida_cajaRow
            Dim rowtbl_compras_salida_cajaRow As tbl_compras_salida_cajaRow = CType(Me.NewRow,tbl_compras_salida_cajaRow)
            rowtbl_compras_salida_cajaRow.ItemArray = New Object() {Nothing, fld_fecha, fld_concepto, fld_proveedor, fld_fact_proveedor, fld_monto, fld_beneficiario, fld_tipo}
            Me.Rows.Add(rowtbl_compras_salida_cajaRow)
            Return rowtbl_compras_salida_cajaRow
        End Function
        
        Public Function FindByfld_id_doc(ByVal fld_id_doc As Integer) As tbl_compras_salida_cajaRow
            Return CType(Me.Rows.Find(New Object() {fld_id_doc}),tbl_compras_salida_cajaRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_compras_salida_cajaDataTable = CType(MyBase.Clone,tbl_compras_salida_cajaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_compras_salida_cajaDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id_doc = Me.Columns("fld_id_doc")
            Me.columnfld_fecha = Me.Columns("fld_fecha")
            Me.columnfld_concepto = Me.Columns("fld_concepto")
            Me.columnfld_proveedor = Me.Columns("fld_proveedor")
            Me.columnfld_fact_proveedor = Me.Columns("fld_fact_proveedor")
            Me.columnfld_monto = Me.Columns("fld_monto")
            Me.columnfld_beneficiario = Me.Columns("fld_beneficiario")
            Me.columnfld_tipo = Me.Columns("fld_tipo")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id_doc = New DataColumn("fld_id_doc", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_doc)
            Me.columnfld_fecha = New DataColumn("fld_fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha)
            Me.columnfld_concepto = New DataColumn("fld_concepto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_concepto)
            Me.columnfld_proveedor = New DataColumn("fld_proveedor", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_proveedor)
            Me.columnfld_fact_proveedor = New DataColumn("fld_fact_proveedor", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fact_proveedor)
            Me.columnfld_monto = New DataColumn("fld_monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto)
            Me.columnfld_beneficiario = New DataColumn("fld_beneficiario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_beneficiario)
            Me.columnfld_tipo = New DataColumn("fld_tipo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_tipo)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey14", New DataColumn() {Me.columnfld_id_doc}, true))
            Me.columnfld_id_doc.AutoIncrement = true
            Me.columnfld_id_doc.AllowDBNull = false
            Me.columnfld_id_doc.Unique = true
        End Sub
        
        Public Function Newtbl_compras_salida_cajaRow() As tbl_compras_salida_cajaRow
            Return CType(Me.NewRow,tbl_compras_salida_cajaRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_compras_salida_cajaRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_compras_salida_cajaRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_compras_salida_cajaRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_compras_salida_cajaRowChanged(Me, New tbl_compras_salida_cajaRowChangeEvent(CType(e.Row,tbl_compras_salida_cajaRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_compras_salida_cajaRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_compras_salida_cajaRowChanging(Me, New tbl_compras_salida_cajaRowChangeEvent(CType(e.Row,tbl_compras_salida_cajaRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_compras_salida_cajaRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_compras_salida_cajaRowDeleted(Me, New tbl_compras_salida_cajaRowChangeEvent(CType(e.Row,tbl_compras_salida_cajaRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_compras_salida_cajaRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_compras_salida_cajaRowDeleting(Me, New tbl_compras_salida_cajaRowChangeEvent(CType(e.Row,tbl_compras_salida_cajaRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_compras_salida_cajaRow(ByVal row As tbl_compras_salida_cajaRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_compras_salida_cajaRow
        Inherits DataRow
        
        Private tabletbl_compras_salida_caja As tbl_compras_salida_cajaDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_compras_salida_caja = CType(Me.Table,tbl_compras_salida_cajaDataTable)
        End Sub
        
        Public Property fld_id_doc As Integer
            Get
                Return CType(Me(Me.tabletbl_compras_salida_caja.fld_id_docColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_compras_salida_caja.fld_id_docColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_compras_salida_caja.fld_fechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_compras_salida_caja.fld_fechaColumn) = value
            End Set
        End Property
        
        Public Property fld_concepto As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_compras_salida_caja.fld_conceptoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_compras_salida_caja.fld_conceptoColumn) = value
            End Set
        End Property
        
        Public Property fld_proveedor As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_compras_salida_caja.fld_proveedorColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_compras_salida_caja.fld_proveedorColumn) = value
            End Set
        End Property
        
        Public Property fld_fact_proveedor As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_compras_salida_caja.fld_fact_proveedorColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_compras_salida_caja.fld_fact_proveedorColumn) = value
            End Set
        End Property
        
        Public Property fld_monto As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_compras_salida_caja.fld_montoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_compras_salida_caja.fld_montoColumn) = value
            End Set
        End Property
        
        Public Property fld_beneficiario As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_compras_salida_caja.fld_beneficiarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_compras_salida_caja.fld_beneficiarioColumn) = value
            End Set
        End Property
        
        Public Property fld_tipo As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_compras_salida_caja.fld_tipoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_compras_salida_caja.fld_tipoColumn) = value
            End Set
        End Property
        
        Public Function Isfld_fechaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_compras_salida_caja.fld_fechaColumn)
        End Function
        
        Public Sub Setfld_fechaNull()
            Me(Me.tabletbl_compras_salida_caja.fld_fechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_conceptoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_compras_salida_caja.fld_conceptoColumn)
        End Function
        
        Public Sub Setfld_conceptoNull()
            Me(Me.tabletbl_compras_salida_caja.fld_conceptoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_proveedorNull() As Boolean
            Return Me.IsNull(Me.tabletbl_compras_salida_caja.fld_proveedorColumn)
        End Function
        
        Public Sub Setfld_proveedorNull()
            Me(Me.tabletbl_compras_salida_caja.fld_proveedorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fact_proveedorNull() As Boolean
            Return Me.IsNull(Me.tabletbl_compras_salida_caja.fld_fact_proveedorColumn)
        End Function
        
        Public Sub Setfld_fact_proveedorNull()
            Me(Me.tabletbl_compras_salida_caja.fld_fact_proveedorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_montoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_compras_salida_caja.fld_montoColumn)
        End Function
        
        Public Sub Setfld_montoNull()
            Me(Me.tabletbl_compras_salida_caja.fld_montoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_beneficiarioNull() As Boolean
            Return Me.IsNull(Me.tabletbl_compras_salida_caja.fld_beneficiarioColumn)
        End Function
        
        Public Sub Setfld_beneficiarioNull()
            Me(Me.tabletbl_compras_salida_caja.fld_beneficiarioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_tipoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_compras_salida_caja.fld_tipoColumn)
        End Function
        
        Public Sub Setfld_tipoNull()
            Me(Me.tabletbl_compras_salida_caja.fld_tipoColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_compras_salida_cajaRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_compras_salida_cajaRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_compras_salida_cajaRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_compras_salida_cajaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_clientesDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id As DataColumn
        
        Private columnfld_FullName As DataColumn
        
        Private columnfld_apodo As DataColumn
        
        Private columnfld_Identity As DataColumn
        
        Private columnfld_Phone As DataColumn
        
        Private columnfld_Phone2 As DataColumn
        
        Private columnfld_Address As DataColumn
        
        Private columnfld_City As DataColumn
        
        Private columnfld_Status As DataColumn
        
        Private columnfld_bce As DataColumn
        
        Private columnfld_cod_zona As DataColumn
        
        Private columnfld_zona As DataColumn
        
        Private columnfld_nombre_con As DataColumn
        
        Private columnfld_apodo_con As DataColumn
        
        Private columnfld_cedula_con As DataColumn
        
        Private columnfld_telefono_con As DataColumn
        
        Private columnfld_celular_con As DataColumn
        
        Private columnfld_ref_personales_cliente As DataColumn
        
        Private columnfld_ref_comerciales_cliente As DataColumn
        
        Private columnfld_nombre_gar As DataColumn
        
        Private columnfld_apodo_gar As DataColumn
        
        Private columnfld_cedula_gar As DataColumn
        
        Private columnfld_telefono_gar As DataColumn
        
        Private columnfld_celular_gar As DataColumn
        
        Private columnfld_direccion_gar As DataColumn
        
        Private columnfld_ciudad_gar As DataColumn
        
        Private columnfld_ref_personales_gar As DataColumn
        
        Private columnfld_ref_comerciales_gar As DataColumn
        
        Private columnfld_ingresos_mesuales As DataColumn
        
        Private columnfld_nombre_banco1 As DataColumn
        
        Private columnfld_cuenta_banco1 As DataColumn
        
        Private columnfld_nombre_banco2 As DataColumn
        
        Private columnfld_cuenta_banco2 As DataColumn
        
        Private columnfld_otra_informacion As DataColumn
        
        Private columnfld_nombre_con_gar As DataColumn
        
        Private columnfld_apodo_con_gar As DataColumn
        
        Private columnfld_cedula_con_gar As DataColumn
        
        Private columnfld_telefono_con_gar As DataColumn
        
        Private columnfld_celular_con_gar As DataColumn
        
        Private columnfld_edad As DataColumn
        
        Private columnfld_estado_civil As DataColumn
        
        Private columnfld_edad_gar As DataColumn
        
        Private columnfld_estado_civil_gar As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_clientes")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_FullNameColumn As DataColumn
            Get
                Return Me.columnfld_FullName
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodoColumn As DataColumn
            Get
                Return Me.columnfld_apodo
            End Get
        End Property
        
        Friend ReadOnly Property fld_IdentityColumn As DataColumn
            Get
                Return Me.columnfld_Identity
            End Get
        End Property
        
        Friend ReadOnly Property fld_PhoneColumn As DataColumn
            Get
                Return Me.columnfld_Phone
            End Get
        End Property
        
        Friend ReadOnly Property fld_Phone2Column As DataColumn
            Get
                Return Me.columnfld_Phone2
            End Get
        End Property
        
        Friend ReadOnly Property fld_AddressColumn As DataColumn
            Get
                Return Me.columnfld_Address
            End Get
        End Property
        
        Friend ReadOnly Property fld_CityColumn As DataColumn
            Get
                Return Me.columnfld_City
            End Get
        End Property
        
        Friend ReadOnly Property fld_StatusColumn As DataColumn
            Get
                Return Me.columnfld_Status
            End Get
        End Property
        
        Friend ReadOnly Property fld_bceColumn As DataColumn
            Get
                Return Me.columnfld_bce
            End Get
        End Property
        
        Friend ReadOnly Property fld_cod_zonaColumn As DataColumn
            Get
                Return Me.columnfld_cod_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_zonaColumn As DataColumn
            Get
                Return Me.columnfld_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_conColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_conColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_conColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_conColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_conColumn As DataColumn
            Get
                Return Me.columnfld_celular_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_direccion_garColumn As DataColumn
            Get
                Return Me.columnfld_direccion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ciudad_garColumn As DataColumn
            Get
                Return Me.columnfld_ciudad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ingresos_mesualesColumn As DataColumn
            Get
                Return Me.columnfld_ingresos_mesuales
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco1Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco1Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco2Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco2Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_otra_informacionColumn As DataColumn
            Get
                Return Me.columnfld_otra_informacion
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_con_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_con_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_con_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_con_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_con_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_edadColumn As DataColumn
            Get
                Return Me.columnfld_edad
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civilColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil
            End Get
        End Property
        
        Friend ReadOnly Property fld_edad_garColumn As DataColumn
            Get
                Return Me.columnfld_edad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civil_garColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil_gar
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_clientesRow
            Get
                Return CType(Me.Rows(index),tbl_clientesRow)
            End Get
        End Property
        
        Public Event tbl_clientesRowChanged As tbl_clientesRowChangeEventHandler
        
        Public Event tbl_clientesRowChanging As tbl_clientesRowChangeEventHandler
        
        Public Event tbl_clientesRowDeleted As tbl_clientesRowChangeEventHandler
        
        Public Event tbl_clientesRowDeleting As tbl_clientesRowChangeEventHandler
        
        Public Overloads Sub Addtbl_clientesRow(ByVal row As tbl_clientesRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_clientesRow( _
                    ByVal fld_FullName As String,  _
                    ByVal fld_apodo As String,  _
                    ByVal fld_Identity As String,  _
                    ByVal fld_Phone As String,  _
                    ByVal fld_Phone2 As String,  _
                    ByVal fld_Address As String,  _
                    ByVal fld_City As String,  _
                    ByVal fld_Status As String,  _
                    ByVal fld_bce As Double,  _
                    ByVal fld_cod_zona As Integer,  _
                    ByVal fld_zona As String,  _
                    ByVal fld_nombre_con As String,  _
                    ByVal fld_apodo_con As String,  _
                    ByVal fld_cedula_con As String,  _
                    ByVal fld_telefono_con As String,  _
                    ByVal fld_celular_con As String,  _
                    ByVal fld_ref_personales_cliente As String,  _
                    ByVal fld_ref_comerciales_cliente As String,  _
                    ByVal fld_nombre_gar As String,  _
                    ByVal fld_apodo_gar As String,  _
                    ByVal fld_cedula_gar As String,  _
                    ByVal fld_telefono_gar As String,  _
                    ByVal fld_celular_gar As String,  _
                    ByVal fld_direccion_gar As String,  _
                    ByVal fld_ciudad_gar As String,  _
                    ByVal fld_ref_personales_gar As String,  _
                    ByVal fld_ref_comerciales_gar As String,  _
                    ByVal fld_ingresos_mesuales As Double,  _
                    ByVal fld_nombre_banco1 As String,  _
                    ByVal fld_cuenta_banco1 As String,  _
                    ByVal fld_nombre_banco2 As String,  _
                    ByVal fld_cuenta_banco2 As String,  _
                    ByVal fld_otra_informacion As String,  _
                    ByVal fld_nombre_con_gar As String,  _
                    ByVal fld_apodo_con_gar As String,  _
                    ByVal fld_cedula_con_gar As String,  _
                    ByVal fld_telefono_con_gar As String,  _
                    ByVal fld_celular_con_gar As String,  _
                    ByVal fld_edad As Integer,  _
                    ByVal fld_estado_civil As String,  _
                    ByVal fld_edad_gar As String,  _
                    ByVal fld_estado_civil_gar As String) As tbl_clientesRow
            Dim rowtbl_clientesRow As tbl_clientesRow = CType(Me.NewRow,tbl_clientesRow)
            rowtbl_clientesRow.ItemArray = New Object() {Nothing, fld_FullName, fld_apodo, fld_Identity, fld_Phone, fld_Phone2, fld_Address, fld_City, fld_Status, fld_bce, fld_cod_zona, fld_zona, fld_nombre_con, fld_apodo_con, fld_cedula_con, fld_telefono_con, fld_celular_con, fld_ref_personales_cliente, fld_ref_comerciales_cliente, fld_nombre_gar, fld_apodo_gar, fld_cedula_gar, fld_telefono_gar, fld_celular_gar, fld_direccion_gar, fld_ciudad_gar, fld_ref_personales_gar, fld_ref_comerciales_gar, fld_ingresos_mesuales, fld_nombre_banco1, fld_cuenta_banco1, fld_nombre_banco2, fld_cuenta_banco2, fld_otra_informacion, fld_nombre_con_gar, fld_apodo_con_gar, fld_cedula_con_gar, fld_telefono_con_gar, fld_celular_con_gar, fld_edad, fld_estado_civil, fld_edad_gar, fld_estado_civil_gar}
            Me.Rows.Add(rowtbl_clientesRow)
            Return rowtbl_clientesRow
        End Function
        
        Public Function FindByfld_id(ByVal fld_id As Integer) As tbl_clientesRow
            Return CType(Me.Rows.Find(New Object() {fld_id}),tbl_clientesRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_clientesDataTable = CType(MyBase.Clone,tbl_clientesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_clientesDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnfld_FullName = Me.Columns("fld_FullName")
            Me.columnfld_apodo = Me.Columns("fld_apodo")
            Me.columnfld_Identity = Me.Columns("fld_Identity")
            Me.columnfld_Phone = Me.Columns("fld_Phone")
            Me.columnfld_Phone2 = Me.Columns("fld_Phone2")
            Me.columnfld_Address = Me.Columns("fld_Address")
            Me.columnfld_City = Me.Columns("fld_City")
            Me.columnfld_Status = Me.Columns("fld_Status")
            Me.columnfld_bce = Me.Columns("fld_bce")
            Me.columnfld_cod_zona = Me.Columns("fld_cod_zona")
            Me.columnfld_zona = Me.Columns("fld_zona")
            Me.columnfld_nombre_con = Me.Columns("fld_nombre_con")
            Me.columnfld_apodo_con = Me.Columns("fld_apodo_con")
            Me.columnfld_cedula_con = Me.Columns("fld_cedula_con")
            Me.columnfld_telefono_con = Me.Columns("fld_telefono_con")
            Me.columnfld_celular_con = Me.Columns("fld_celular_con")
            Me.columnfld_ref_personales_cliente = Me.Columns("fld_ref_personales_cliente")
            Me.columnfld_ref_comerciales_cliente = Me.Columns("fld_ref_comerciales_cliente")
            Me.columnfld_nombre_gar = Me.Columns("fld_nombre_gar")
            Me.columnfld_apodo_gar = Me.Columns("fld_apodo_gar")
            Me.columnfld_cedula_gar = Me.Columns("fld_cedula_gar")
            Me.columnfld_telefono_gar = Me.Columns("fld_telefono_gar")
            Me.columnfld_celular_gar = Me.Columns("fld_celular_gar")
            Me.columnfld_direccion_gar = Me.Columns("fld_direccion_gar")
            Me.columnfld_ciudad_gar = Me.Columns("fld_ciudad_gar")
            Me.columnfld_ref_personales_gar = Me.Columns("fld_ref_personales_gar")
            Me.columnfld_ref_comerciales_gar = Me.Columns("fld_ref_comerciales_gar")
            Me.columnfld_ingresos_mesuales = Me.Columns("fld_ingresos_mesuales")
            Me.columnfld_nombre_banco1 = Me.Columns("fld_nombre_banco1")
            Me.columnfld_cuenta_banco1 = Me.Columns("fld_cuenta_banco1")
            Me.columnfld_nombre_banco2 = Me.Columns("fld_nombre_banco2")
            Me.columnfld_cuenta_banco2 = Me.Columns("fld_cuenta_banco2")
            Me.columnfld_otra_informacion = Me.Columns("fld_otra_informacion")
            Me.columnfld_nombre_con_gar = Me.Columns("fld_nombre_con_gar")
            Me.columnfld_apodo_con_gar = Me.Columns("fld_apodo_con_gar")
            Me.columnfld_cedula_con_gar = Me.Columns("fld_cedula_con_gar")
            Me.columnfld_telefono_con_gar = Me.Columns("fld_telefono_con_gar")
            Me.columnfld_celular_con_gar = Me.Columns("fld_celular_con_gar")
            Me.columnfld_edad = Me.Columns("fld_edad")
            Me.columnfld_estado_civil = Me.Columns("fld_estado_civil")
            Me.columnfld_edad_gar = Me.Columns("fld_edad_gar")
            Me.columnfld_estado_civil_gar = Me.Columns("fld_estado_civil_gar")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnfld_FullName = New DataColumn("fld_FullName", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_FullName)
            Me.columnfld_apodo = New DataColumn("fld_apodo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo)
            Me.columnfld_Identity = New DataColumn("fld_Identity", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Identity)
            Me.columnfld_Phone = New DataColumn("fld_Phone", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone)
            Me.columnfld_Phone2 = New DataColumn("fld_Phone2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone2)
            Me.columnfld_Address = New DataColumn("fld_Address", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Address)
            Me.columnfld_City = New DataColumn("fld_City", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_City)
            Me.columnfld_Status = New DataColumn("fld_Status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Status)
            Me.columnfld_bce = New DataColumn("fld_bce", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce)
            Me.columnfld_cod_zona = New DataColumn("fld_cod_zona", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cod_zona)
            Me.columnfld_zona = New DataColumn("fld_zona", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_zona)
            Me.columnfld_nombre_con = New DataColumn("fld_nombre_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con)
            Me.columnfld_apodo_con = New DataColumn("fld_apodo_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con)
            Me.columnfld_cedula_con = New DataColumn("fld_cedula_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con)
            Me.columnfld_telefono_con = New DataColumn("fld_telefono_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con)
            Me.columnfld_celular_con = New DataColumn("fld_celular_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con)
            Me.columnfld_ref_personales_cliente = New DataColumn("fld_ref_personales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_cliente)
            Me.columnfld_ref_comerciales_cliente = New DataColumn("fld_ref_comerciales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_cliente)
            Me.columnfld_nombre_gar = New DataColumn("fld_nombre_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_gar)
            Me.columnfld_apodo_gar = New DataColumn("fld_apodo_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_gar)
            Me.columnfld_cedula_gar = New DataColumn("fld_cedula_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_gar)
            Me.columnfld_telefono_gar = New DataColumn("fld_telefono_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_gar)
            Me.columnfld_celular_gar = New DataColumn("fld_celular_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_gar)
            Me.columnfld_direccion_gar = New DataColumn("fld_direccion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_direccion_gar)
            Me.columnfld_ciudad_gar = New DataColumn("fld_ciudad_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ciudad_gar)
            Me.columnfld_ref_personales_gar = New DataColumn("fld_ref_personales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_gar)
            Me.columnfld_ref_comerciales_gar = New DataColumn("fld_ref_comerciales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_gar)
            Me.columnfld_ingresos_mesuales = New DataColumn("fld_ingresos_mesuales", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ingresos_mesuales)
            Me.columnfld_nombre_banco1 = New DataColumn("fld_nombre_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco1)
            Me.columnfld_cuenta_banco1 = New DataColumn("fld_cuenta_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco1)
            Me.columnfld_nombre_banco2 = New DataColumn("fld_nombre_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco2)
            Me.columnfld_cuenta_banco2 = New DataColumn("fld_cuenta_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco2)
            Me.columnfld_otra_informacion = New DataColumn("fld_otra_informacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_otra_informacion)
            Me.columnfld_nombre_con_gar = New DataColumn("fld_nombre_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con_gar)
            Me.columnfld_apodo_con_gar = New DataColumn("fld_apodo_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con_gar)
            Me.columnfld_cedula_con_gar = New DataColumn("fld_cedula_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con_gar)
            Me.columnfld_telefono_con_gar = New DataColumn("fld_telefono_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con_gar)
            Me.columnfld_celular_con_gar = New DataColumn("fld_celular_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con_gar)
            Me.columnfld_edad = New DataColumn("fld_edad", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad)
            Me.columnfld_estado_civil = New DataColumn("fld_estado_civil", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil)
            Me.columnfld_edad_gar = New DataColumn("fld_edad_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad_gar)
            Me.columnfld_estado_civil_gar = New DataColumn("fld_estado_civil_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil_gar)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey5", New DataColumn() {Me.columnfld_id}, true))
            Me.columnfld_id.AutoIncrement = true
            Me.columnfld_id.AllowDBNull = false
            Me.columnfld_id.Unique = true
        End Sub
        
        Public Function Newtbl_clientesRow() As tbl_clientesRow
            Return CType(Me.NewRow,tbl_clientesRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_clientesRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_clientesRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_clientesRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_clientesRowChanged(Me, New tbl_clientesRowChangeEvent(CType(e.Row,tbl_clientesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_clientesRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_clientesRowChanging(Me, New tbl_clientesRowChangeEvent(CType(e.Row,tbl_clientesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_clientesRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_clientesRowDeleted(Me, New tbl_clientesRowChangeEvent(CType(e.Row,tbl_clientesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_clientesRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_clientesRowDeleting(Me, New tbl_clientesRowChangeEvent(CType(e.Row,tbl_clientesRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_clientesRow(ByVal row As tbl_clientesRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_clientesRow
        Inherits DataRow
        
        Private tabletbl_clientes As tbl_clientesDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_clientes = CType(Me.Table,tbl_clientesDataTable)
        End Sub
        
        Public Property fld_id As Integer
            Get
                Return CType(Me(Me.tabletbl_clientes.fld_idColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_idColumn) = value
            End Set
        End Property
        
        Public Property fld_FullName As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_FullNameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_FullNameColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_apodoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_apodoColumn) = value
            End Set
        End Property
        
        Public Property fld_Identity As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_IdentityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_IdentityColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_PhoneColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_PhoneColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone2 As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_Phone2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_Phone2Column) = value
            End Set
        End Property
        
        Public Property fld_Address As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_AddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_AddressColumn) = value
            End Set
        End Property
        
        Public Property fld_City As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_CityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_CityColumn) = value
            End Set
        End Property
        
        Public Property fld_Status As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_StatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_StatusColumn) = value
            End Set
        End Property
        
        Public Property fld_bce As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_bceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_bceColumn) = value
            End Set
        End Property
        
        Public Property fld_cod_zona As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_cod_zonaColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_cod_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_zona As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_zonaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_nombre_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_nombre_conColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_apodo_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_apodo_conColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_cedula_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_cedula_conColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_telefono_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_telefono_conColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_celular_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_celular_conColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_ref_personales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_ref_personales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_ref_comerciales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_ref_comerciales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_gar As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_nombre_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_nombre_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_gar As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_apodo_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_apodo_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_gar As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_cedula_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_cedula_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_gar As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_telefono_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_telefono_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_gar As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_celular_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_celular_garColumn) = value
            End Set
        End Property
        
        Public Property fld_direccion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_direccion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_direccion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ciudad_gar As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_ciudad_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_ciudad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_ref_personales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_ref_personales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_ref_comerciales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_ref_comerciales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ingresos_mesuales As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_ingresos_mesualesColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_ingresos_mesualesColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_nombre_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_nombre_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_cuenta_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_cuenta_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_nombre_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_nombre_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_cuenta_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_cuenta_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_otra_informacion As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_otra_informacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_otra_informacionColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_nombre_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_nombre_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_apodo_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_apodo_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_cedula_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_cedula_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_telefono_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_telefono_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_celular_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_celular_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_edad As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_edadColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_edadColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_estado_civilColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_estado_civilColumn) = value
            End Set
        End Property
        
        Public Property fld_edad_gar As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_edad_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_edad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil_gar As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_clientes.fld_estado_civil_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_clientes.fld_estado_civil_garColumn) = value
            End Set
        End Property
        
        Public Function Isfld_FullNameNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_FullNameColumn)
        End Function
        
        Public Sub Setfld_FullNameNull()
            Me(Me.tabletbl_clientes.fld_FullNameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_apodoColumn)
        End Function
        
        Public Sub Setfld_apodoNull()
            Me(Me.tabletbl_clientes.fld_apodoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_IdentityNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_IdentityColumn)
        End Function
        
        Public Sub Setfld_IdentityNull()
            Me(Me.tabletbl_clientes.fld_IdentityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_PhoneNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_PhoneColumn)
        End Function
        
        Public Sub Setfld_PhoneNull()
            Me(Me.tabletbl_clientes.fld_PhoneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_Phone2Null() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_Phone2Column)
        End Function
        
        Public Sub Setfld_Phone2Null()
            Me(Me.tabletbl_clientes.fld_Phone2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_AddressNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_AddressColumn)
        End Function
        
        Public Sub Setfld_AddressNull()
            Me(Me.tabletbl_clientes.fld_AddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_CityNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_CityColumn)
        End Function
        
        Public Sub Setfld_CityNull()
            Me(Me.tabletbl_clientes.fld_CityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_StatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_StatusColumn)
        End Function
        
        Public Sub Setfld_StatusNull()
            Me(Me.tabletbl_clientes.fld_StatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bceNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_bceColumn)
        End Function
        
        Public Sub Setfld_bceNull()
            Me(Me.tabletbl_clientes.fld_bceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cod_zonaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_cod_zonaColumn)
        End Function
        
        Public Sub Setfld_cod_zonaNull()
            Me(Me.tabletbl_clientes.fld_cod_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_zonaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_zonaColumn)
        End Function
        
        Public Sub Setfld_zonaNull()
            Me(Me.tabletbl_clientes.fld_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_conNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_nombre_conColumn)
        End Function
        
        Public Sub Setfld_nombre_conNull()
            Me(Me.tabletbl_clientes.fld_nombre_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_conNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_apodo_conColumn)
        End Function
        
        Public Sub Setfld_apodo_conNull()
            Me(Me.tabletbl_clientes.fld_apodo_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_conNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_cedula_conColumn)
        End Function
        
        Public Sub Setfld_cedula_conNull()
            Me(Me.tabletbl_clientes.fld_cedula_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_conNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_telefono_conColumn)
        End Function
        
        Public Sub Setfld_telefono_conNull()
            Me(Me.tabletbl_clientes.fld_telefono_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_conNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_celular_conColumn)
        End Function
        
        Public Sub Setfld_celular_conNull()
            Me(Me.tabletbl_clientes.fld_celular_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_clienteNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_ref_personales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_personales_clienteNull()
            Me(Me.tabletbl_clientes.fld_ref_personales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_clienteNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_ref_comerciales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_clienteNull()
            Me(Me.tabletbl_clientes.fld_ref_comerciales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_garNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_nombre_garColumn)
        End Function
        
        Public Sub Setfld_nombre_garNull()
            Me(Me.tabletbl_clientes.fld_nombre_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_garNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_apodo_garColumn)
        End Function
        
        Public Sub Setfld_apodo_garNull()
            Me(Me.tabletbl_clientes.fld_apodo_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_garNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_cedula_garColumn)
        End Function
        
        Public Sub Setfld_cedula_garNull()
            Me(Me.tabletbl_clientes.fld_cedula_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_garNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_telefono_garColumn)
        End Function
        
        Public Sub Setfld_telefono_garNull()
            Me(Me.tabletbl_clientes.fld_telefono_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_garNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_celular_garColumn)
        End Function
        
        Public Sub Setfld_celular_garNull()
            Me(Me.tabletbl_clientes.fld_celular_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_direccion_garNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_direccion_garColumn)
        End Function
        
        Public Sub Setfld_direccion_garNull()
            Me(Me.tabletbl_clientes.fld_direccion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ciudad_garNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_ciudad_garColumn)
        End Function
        
        Public Sub Setfld_ciudad_garNull()
            Me(Me.tabletbl_clientes.fld_ciudad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_garNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_ref_personales_garColumn)
        End Function
        
        Public Sub Setfld_ref_personales_garNull()
            Me(Me.tabletbl_clientes.fld_ref_personales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_garNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_ref_comerciales_garColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_garNull()
            Me(Me.tabletbl_clientes.fld_ref_comerciales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ingresos_mesualesNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_ingresos_mesualesColumn)
        End Function
        
        Public Sub Setfld_ingresos_mesualesNull()
            Me(Me.tabletbl_clientes.fld_ingresos_mesualesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco1Null() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_nombre_banco1Column)
        End Function
        
        Public Sub Setfld_nombre_banco1Null()
            Me(Me.tabletbl_clientes.fld_nombre_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco1Null() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_cuenta_banco1Column)
        End Function
        
        Public Sub Setfld_cuenta_banco1Null()
            Me(Me.tabletbl_clientes.fld_cuenta_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco2Null() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_nombre_banco2Column)
        End Function
        
        Public Sub Setfld_nombre_banco2Null()
            Me(Me.tabletbl_clientes.fld_nombre_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco2Null() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_cuenta_banco2Column)
        End Function
        
        Public Sub Setfld_cuenta_banco2Null()
            Me(Me.tabletbl_clientes.fld_cuenta_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_otra_informacionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_otra_informacionColumn)
        End Function
        
        Public Sub Setfld_otra_informacionNull()
            Me(Me.tabletbl_clientes.fld_otra_informacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_con_garNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_nombre_con_garColumn)
        End Function
        
        Public Sub Setfld_nombre_con_garNull()
            Me(Me.tabletbl_clientes.fld_nombre_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_con_garNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_apodo_con_garColumn)
        End Function
        
        Public Sub Setfld_apodo_con_garNull()
            Me(Me.tabletbl_clientes.fld_apodo_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_con_garNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_cedula_con_garColumn)
        End Function
        
        Public Sub Setfld_cedula_con_garNull()
            Me(Me.tabletbl_clientes.fld_cedula_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_con_garNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_telefono_con_garColumn)
        End Function
        
        Public Sub Setfld_telefono_con_garNull()
            Me(Me.tabletbl_clientes.fld_telefono_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_con_garNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_celular_con_garColumn)
        End Function
        
        Public Sub Setfld_celular_con_garNull()
            Me(Me.tabletbl_clientes.fld_celular_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edadNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_edadColumn)
        End Function
        
        Public Sub Setfld_edadNull()
            Me(Me.tabletbl_clientes.fld_edadColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civilNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_estado_civilColumn)
        End Function
        
        Public Sub Setfld_estado_civilNull()
            Me(Me.tabletbl_clientes.fld_estado_civilColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edad_garNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_edad_garColumn)
        End Function
        
        Public Sub Setfld_edad_garNull()
            Me(Me.tabletbl_clientes.fld_edad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civil_garNull() As Boolean
            Return Me.IsNull(Me.tabletbl_clientes.fld_estado_civil_garColumn)
        End Function
        
        Public Sub Setfld_estado_civil_garNull()
            Me(Me.tabletbl_clientes.fld_estado_civil_garColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_clientesRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_clientesRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_clientesRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_clientesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_cxc_nota_debitoDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id As DataColumn
        
        Private columnfld_FullName As DataColumn
        
        Private columnfld_apodo As DataColumn
        
        Private columnfld_Identity As DataColumn
        
        Private columnfld_Phone As DataColumn
        
        Private columnfld_Phone2 As DataColumn
        
        Private columnfld_Address As DataColumn
        
        Private columnfld_City As DataColumn
        
        Private columnfld_Status As DataColumn
        
        Private columnfld_bce As DataColumn
        
        Private columnfld_cod_zona As DataColumn
        
        Private columnfld_zona As DataColumn
        
        Private columnfld_nombre_con As DataColumn
        
        Private columnfld_apodo_con As DataColumn
        
        Private columnfld_cedula_con As DataColumn
        
        Private columnfld_telefono_con As DataColumn
        
        Private columnfld_celular_con As DataColumn
        
        Private columnfld_ref_personales_cliente As DataColumn
        
        Private columnfld_ref_comerciales_cliente As DataColumn
        
        Private columnfld_nombre_gar As DataColumn
        
        Private columnfld_apodo_gar As DataColumn
        
        Private columnfld_cedula_gar As DataColumn
        
        Private columnfld_telefono_gar As DataColumn
        
        Private columnfld_celular_gar As DataColumn
        
        Private columnfld_direccion_gar As DataColumn
        
        Private columnfld_ciudad_gar As DataColumn
        
        Private columnfld_ref_personales_gar As DataColumn
        
        Private columnfld_ref_comerciales_gar As DataColumn
        
        Private columnfld_ingresos_mesuales As DataColumn
        
        Private columnfld_nombre_banco1 As DataColumn
        
        Private columnfld_cuenta_banco1 As DataColumn
        
        Private columnfld_nombre_banco2 As DataColumn
        
        Private columnfld_cuenta_banco2 As DataColumn
        
        Private columnfld_otra_informacion As DataColumn
        
        Private columnfld_nombre_con_gar As DataColumn
        
        Private columnfld_apodo_con_gar As DataColumn
        
        Private columnfld_cedula_con_gar As DataColumn
        
        Private columnfld_telefono_con_gar As DataColumn
        
        Private columnfld_celular_con_gar As DataColumn
        
        Private columnfld_edad As DataColumn
        
        Private columnfld_estado_civil As DataColumn
        
        Private columnfld_edad_gar As DataColumn
        
        Private columnfld_estado_civil_gar As DataColumn
        
        Private columnfld_id_nd_cxc As DataColumn
        
        Private columnfld_cliente_id_nd As DataColumn
        
        Private columnfld_fecha As DataColumn
        
        Private columnfld_concepto As DataColumn
        
        Private columnfld_monto As DataColumn
        
        Private columnfld_abono As DataColumn
        
        Private columnfld_balance As DataColumn
        
        Private columnfld_user As DataColumn
        
        Private columnfld_status_nd As DataColumn
        
        Private columnfld_ultimo_abono As DataColumn
        
        Friend Sub New()
            MyBase.New("view_cxc_nota_debito")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_FullNameColumn As DataColumn
            Get
                Return Me.columnfld_FullName
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodoColumn As DataColumn
            Get
                Return Me.columnfld_apodo
            End Get
        End Property
        
        Friend ReadOnly Property fld_IdentityColumn As DataColumn
            Get
                Return Me.columnfld_Identity
            End Get
        End Property
        
        Friend ReadOnly Property fld_PhoneColumn As DataColumn
            Get
                Return Me.columnfld_Phone
            End Get
        End Property
        
        Friend ReadOnly Property fld_Phone2Column As DataColumn
            Get
                Return Me.columnfld_Phone2
            End Get
        End Property
        
        Friend ReadOnly Property fld_AddressColumn As DataColumn
            Get
                Return Me.columnfld_Address
            End Get
        End Property
        
        Friend ReadOnly Property fld_CityColumn As DataColumn
            Get
                Return Me.columnfld_City
            End Get
        End Property
        
        Friend ReadOnly Property fld_StatusColumn As DataColumn
            Get
                Return Me.columnfld_Status
            End Get
        End Property
        
        Friend ReadOnly Property fld_bceColumn As DataColumn
            Get
                Return Me.columnfld_bce
            End Get
        End Property
        
        Friend ReadOnly Property fld_cod_zonaColumn As DataColumn
            Get
                Return Me.columnfld_cod_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_zonaColumn As DataColumn
            Get
                Return Me.columnfld_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_conColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_conColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_conColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_conColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_conColumn As DataColumn
            Get
                Return Me.columnfld_celular_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_direccion_garColumn As DataColumn
            Get
                Return Me.columnfld_direccion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ciudad_garColumn As DataColumn
            Get
                Return Me.columnfld_ciudad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ingresos_mesualesColumn As DataColumn
            Get
                Return Me.columnfld_ingresos_mesuales
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco1Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco1Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco2Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco2Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_otra_informacionColumn As DataColumn
            Get
                Return Me.columnfld_otra_informacion
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_con_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_con_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_con_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_con_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_con_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_edadColumn As DataColumn
            Get
                Return Me.columnfld_edad
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civilColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil
            End Get
        End Property
        
        Friend ReadOnly Property fld_edad_garColumn As DataColumn
            Get
                Return Me.columnfld_edad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civil_garColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_nd_cxcColumn As DataColumn
            Get
                Return Me.columnfld_id_nd_cxc
            End Get
        End Property
        
        Friend ReadOnly Property fld_cliente_id_ndColumn As DataColumn
            Get
                Return Me.columnfld_cliente_id_nd
            End Get
        End Property
        
        Friend ReadOnly Property fld_fechaColumn As DataColumn
            Get
                Return Me.columnfld_fecha
            End Get
        End Property
        
        Friend ReadOnly Property fld_conceptoColumn As DataColumn
            Get
                Return Me.columnfld_concepto
            End Get
        End Property
        
        Friend ReadOnly Property fld_montoColumn As DataColumn
            Get
                Return Me.columnfld_monto
            End Get
        End Property
        
        Friend ReadOnly Property fld_abonoColumn As DataColumn
            Get
                Return Me.columnfld_abono
            End Get
        End Property
        
        Friend ReadOnly Property fld_balanceColumn As DataColumn
            Get
                Return Me.columnfld_balance
            End Get
        End Property
        
        Friend ReadOnly Property fld_userColumn As DataColumn
            Get
                Return Me.columnfld_user
            End Get
        End Property
        
        Friend ReadOnly Property fld_status_ndColumn As DataColumn
            Get
                Return Me.columnfld_status_nd
            End Get
        End Property
        
        Friend ReadOnly Property fld_ultimo_abonoColumn As DataColumn
            Get
                Return Me.columnfld_ultimo_abono
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_cxc_nota_debitoRow
            Get
                Return CType(Me.Rows(index),view_cxc_nota_debitoRow)
            End Get
        End Property
        
        Public Event view_cxc_nota_debitoRowChanged As view_cxc_nota_debitoRowChangeEventHandler
        
        Public Event view_cxc_nota_debitoRowChanging As view_cxc_nota_debitoRowChangeEventHandler
        
        Public Event view_cxc_nota_debitoRowDeleted As view_cxc_nota_debitoRowChangeEventHandler
        
        Public Event view_cxc_nota_debitoRowDeleting As view_cxc_nota_debitoRowChangeEventHandler
        
        Public Overloads Sub Addview_cxc_nota_debitoRow(ByVal row As view_cxc_nota_debitoRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addview_cxc_nota_debitoRow( _
                    ByVal fld_FullName As String,  _
                    ByVal fld_apodo As String,  _
                    ByVal fld_Identity As String,  _
                    ByVal fld_Phone As String,  _
                    ByVal fld_Phone2 As String,  _
                    ByVal fld_Address As String,  _
                    ByVal fld_City As String,  _
                    ByVal fld_Status As String,  _
                    ByVal fld_bce As Double,  _
                    ByVal fld_cod_zona As Integer,  _
                    ByVal fld_zona As String,  _
                    ByVal fld_nombre_con As String,  _
                    ByVal fld_apodo_con As String,  _
                    ByVal fld_cedula_con As String,  _
                    ByVal fld_telefono_con As String,  _
                    ByVal fld_celular_con As String,  _
                    ByVal fld_ref_personales_cliente As String,  _
                    ByVal fld_ref_comerciales_cliente As String,  _
                    ByVal fld_nombre_gar As String,  _
                    ByVal fld_apodo_gar As String,  _
                    ByVal fld_cedula_gar As String,  _
                    ByVal fld_telefono_gar As String,  _
                    ByVal fld_celular_gar As String,  _
                    ByVal fld_direccion_gar As String,  _
                    ByVal fld_ciudad_gar As String,  _
                    ByVal fld_ref_personales_gar As String,  _
                    ByVal fld_ref_comerciales_gar As String,  _
                    ByVal fld_ingresos_mesuales As Double,  _
                    ByVal fld_nombre_banco1 As String,  _
                    ByVal fld_cuenta_banco1 As String,  _
                    ByVal fld_nombre_banco2 As String,  _
                    ByVal fld_cuenta_banco2 As String,  _
                    ByVal fld_otra_informacion As String,  _
                    ByVal fld_nombre_con_gar As String,  _
                    ByVal fld_apodo_con_gar As String,  _
                    ByVal fld_cedula_con_gar As String,  _
                    ByVal fld_telefono_con_gar As String,  _
                    ByVal fld_celular_con_gar As String,  _
                    ByVal fld_edad As Integer,  _
                    ByVal fld_estado_civil As String,  _
                    ByVal fld_edad_gar As String,  _
                    ByVal fld_estado_civil_gar As String,  _
                    ByVal fld_cliente_id_nd As Integer,  _
                    ByVal fld_fecha As Date,  _
                    ByVal fld_concepto As String,  _
                    ByVal fld_monto As Double,  _
                    ByVal fld_abono As Double,  _
                    ByVal fld_balance As Double,  _
                    ByVal fld_user As String,  _
                    ByVal fld_status_nd As String,  _
                    ByVal fld_ultimo_abono As String) As view_cxc_nota_debitoRow
            Dim rowview_cxc_nota_debitoRow As view_cxc_nota_debitoRow = CType(Me.NewRow,view_cxc_nota_debitoRow)
            rowview_cxc_nota_debitoRow.ItemArray = New Object() {Nothing, fld_FullName, fld_apodo, fld_Identity, fld_Phone, fld_Phone2, fld_Address, fld_City, fld_Status, fld_bce, fld_cod_zona, fld_zona, fld_nombre_con, fld_apodo_con, fld_cedula_con, fld_telefono_con, fld_celular_con, fld_ref_personales_cliente, fld_ref_comerciales_cliente, fld_nombre_gar, fld_apodo_gar, fld_cedula_gar, fld_telefono_gar, fld_celular_gar, fld_direccion_gar, fld_ciudad_gar, fld_ref_personales_gar, fld_ref_comerciales_gar, fld_ingresos_mesuales, fld_nombre_banco1, fld_cuenta_banco1, fld_nombre_banco2, fld_cuenta_banco2, fld_otra_informacion, fld_nombre_con_gar, fld_apodo_con_gar, fld_cedula_con_gar, fld_telefono_con_gar, fld_celular_con_gar, fld_edad, fld_estado_civil, fld_edad_gar, fld_estado_civil_gar, Nothing, fld_cliente_id_nd, fld_fecha, fld_concepto, fld_monto, fld_abono, fld_balance, fld_user, fld_status_nd, fld_ultimo_abono}
            Me.Rows.Add(rowview_cxc_nota_debitoRow)
            Return rowview_cxc_nota_debitoRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As view_cxc_nota_debitoDataTable = CType(MyBase.Clone,view_cxc_nota_debitoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New view_cxc_nota_debitoDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnfld_FullName = Me.Columns("fld_FullName")
            Me.columnfld_apodo = Me.Columns("fld_apodo")
            Me.columnfld_Identity = Me.Columns("fld_Identity")
            Me.columnfld_Phone = Me.Columns("fld_Phone")
            Me.columnfld_Phone2 = Me.Columns("fld_Phone2")
            Me.columnfld_Address = Me.Columns("fld_Address")
            Me.columnfld_City = Me.Columns("fld_City")
            Me.columnfld_Status = Me.Columns("fld_Status")
            Me.columnfld_bce = Me.Columns("fld_bce")
            Me.columnfld_cod_zona = Me.Columns("fld_cod_zona")
            Me.columnfld_zona = Me.Columns("fld_zona")
            Me.columnfld_nombre_con = Me.Columns("fld_nombre_con")
            Me.columnfld_apodo_con = Me.Columns("fld_apodo_con")
            Me.columnfld_cedula_con = Me.Columns("fld_cedula_con")
            Me.columnfld_telefono_con = Me.Columns("fld_telefono_con")
            Me.columnfld_celular_con = Me.Columns("fld_celular_con")
            Me.columnfld_ref_personales_cliente = Me.Columns("fld_ref_personales_cliente")
            Me.columnfld_ref_comerciales_cliente = Me.Columns("fld_ref_comerciales_cliente")
            Me.columnfld_nombre_gar = Me.Columns("fld_nombre_gar")
            Me.columnfld_apodo_gar = Me.Columns("fld_apodo_gar")
            Me.columnfld_cedula_gar = Me.Columns("fld_cedula_gar")
            Me.columnfld_telefono_gar = Me.Columns("fld_telefono_gar")
            Me.columnfld_celular_gar = Me.Columns("fld_celular_gar")
            Me.columnfld_direccion_gar = Me.Columns("fld_direccion_gar")
            Me.columnfld_ciudad_gar = Me.Columns("fld_ciudad_gar")
            Me.columnfld_ref_personales_gar = Me.Columns("fld_ref_personales_gar")
            Me.columnfld_ref_comerciales_gar = Me.Columns("fld_ref_comerciales_gar")
            Me.columnfld_ingresos_mesuales = Me.Columns("fld_ingresos_mesuales")
            Me.columnfld_nombre_banco1 = Me.Columns("fld_nombre_banco1")
            Me.columnfld_cuenta_banco1 = Me.Columns("fld_cuenta_banco1")
            Me.columnfld_nombre_banco2 = Me.Columns("fld_nombre_banco2")
            Me.columnfld_cuenta_banco2 = Me.Columns("fld_cuenta_banco2")
            Me.columnfld_otra_informacion = Me.Columns("fld_otra_informacion")
            Me.columnfld_nombre_con_gar = Me.Columns("fld_nombre_con_gar")
            Me.columnfld_apodo_con_gar = Me.Columns("fld_apodo_con_gar")
            Me.columnfld_cedula_con_gar = Me.Columns("fld_cedula_con_gar")
            Me.columnfld_telefono_con_gar = Me.Columns("fld_telefono_con_gar")
            Me.columnfld_celular_con_gar = Me.Columns("fld_celular_con_gar")
            Me.columnfld_edad = Me.Columns("fld_edad")
            Me.columnfld_estado_civil = Me.Columns("fld_estado_civil")
            Me.columnfld_edad_gar = Me.Columns("fld_edad_gar")
            Me.columnfld_estado_civil_gar = Me.Columns("fld_estado_civil_gar")
            Me.columnfld_id_nd_cxc = Me.Columns("fld_id_nd_cxc")
            Me.columnfld_cliente_id_nd = Me.Columns("fld_cliente_id_nd")
            Me.columnfld_fecha = Me.Columns("fld_fecha")
            Me.columnfld_concepto = Me.Columns("fld_concepto")
            Me.columnfld_monto = Me.Columns("fld_monto")
            Me.columnfld_abono = Me.Columns("fld_abono")
            Me.columnfld_balance = Me.Columns("fld_balance")
            Me.columnfld_user = Me.Columns("fld_user")
            Me.columnfld_status_nd = Me.Columns("fld_status_nd")
            Me.columnfld_ultimo_abono = Me.Columns("fld_ultimo_abono")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnfld_FullName = New DataColumn("fld_FullName", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_FullName)
            Me.columnfld_apodo = New DataColumn("fld_apodo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo)
            Me.columnfld_Identity = New DataColumn("fld_Identity", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Identity)
            Me.columnfld_Phone = New DataColumn("fld_Phone", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone)
            Me.columnfld_Phone2 = New DataColumn("fld_Phone2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone2)
            Me.columnfld_Address = New DataColumn("fld_Address", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Address)
            Me.columnfld_City = New DataColumn("fld_City", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_City)
            Me.columnfld_Status = New DataColumn("fld_Status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Status)
            Me.columnfld_bce = New DataColumn("fld_bce", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce)
            Me.columnfld_cod_zona = New DataColumn("fld_cod_zona", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cod_zona)
            Me.columnfld_zona = New DataColumn("fld_zona", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_zona)
            Me.columnfld_nombre_con = New DataColumn("fld_nombre_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con)
            Me.columnfld_apodo_con = New DataColumn("fld_apodo_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con)
            Me.columnfld_cedula_con = New DataColumn("fld_cedula_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con)
            Me.columnfld_telefono_con = New DataColumn("fld_telefono_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con)
            Me.columnfld_celular_con = New DataColumn("fld_celular_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con)
            Me.columnfld_ref_personales_cliente = New DataColumn("fld_ref_personales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_cliente)
            Me.columnfld_ref_comerciales_cliente = New DataColumn("fld_ref_comerciales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_cliente)
            Me.columnfld_nombre_gar = New DataColumn("fld_nombre_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_gar)
            Me.columnfld_apodo_gar = New DataColumn("fld_apodo_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_gar)
            Me.columnfld_cedula_gar = New DataColumn("fld_cedula_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_gar)
            Me.columnfld_telefono_gar = New DataColumn("fld_telefono_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_gar)
            Me.columnfld_celular_gar = New DataColumn("fld_celular_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_gar)
            Me.columnfld_direccion_gar = New DataColumn("fld_direccion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_direccion_gar)
            Me.columnfld_ciudad_gar = New DataColumn("fld_ciudad_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ciudad_gar)
            Me.columnfld_ref_personales_gar = New DataColumn("fld_ref_personales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_gar)
            Me.columnfld_ref_comerciales_gar = New DataColumn("fld_ref_comerciales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_gar)
            Me.columnfld_ingresos_mesuales = New DataColumn("fld_ingresos_mesuales", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ingresos_mesuales)
            Me.columnfld_nombre_banco1 = New DataColumn("fld_nombre_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco1)
            Me.columnfld_cuenta_banco1 = New DataColumn("fld_cuenta_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco1)
            Me.columnfld_nombre_banco2 = New DataColumn("fld_nombre_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco2)
            Me.columnfld_cuenta_banco2 = New DataColumn("fld_cuenta_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco2)
            Me.columnfld_otra_informacion = New DataColumn("fld_otra_informacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_otra_informacion)
            Me.columnfld_nombre_con_gar = New DataColumn("fld_nombre_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con_gar)
            Me.columnfld_apodo_con_gar = New DataColumn("fld_apodo_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con_gar)
            Me.columnfld_cedula_con_gar = New DataColumn("fld_cedula_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con_gar)
            Me.columnfld_telefono_con_gar = New DataColumn("fld_telefono_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con_gar)
            Me.columnfld_celular_con_gar = New DataColumn("fld_celular_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con_gar)
            Me.columnfld_edad = New DataColumn("fld_edad", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad)
            Me.columnfld_estado_civil = New DataColumn("fld_estado_civil", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil)
            Me.columnfld_edad_gar = New DataColumn("fld_edad_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad_gar)
            Me.columnfld_estado_civil_gar = New DataColumn("fld_estado_civil_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil_gar)
            Me.columnfld_id_nd_cxc = New DataColumn("fld_id_nd_cxc", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_nd_cxc)
            Me.columnfld_cliente_id_nd = New DataColumn("fld_cliente_id_nd", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cliente_id_nd)
            Me.columnfld_fecha = New DataColumn("fld_fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha)
            Me.columnfld_concepto = New DataColumn("fld_concepto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_concepto)
            Me.columnfld_monto = New DataColumn("fld_monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto)
            Me.columnfld_abono = New DataColumn("fld_abono", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_abono)
            Me.columnfld_balance = New DataColumn("fld_balance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_balance)
            Me.columnfld_user = New DataColumn("fld_user", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_user)
            Me.columnfld_status_nd = New DataColumn("fld_status_nd", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_status_nd)
            Me.columnfld_ultimo_abono = New DataColumn("fld_ultimo_abono", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ultimo_abono)
            Me.columnfld_id.AutoIncrement = true
            Me.columnfld_id_nd_cxc.AutoIncrement = true
        End Sub
        
        Public Function Newview_cxc_nota_debitoRow() As view_cxc_nota_debitoRow
            Return CType(Me.NewRow,view_cxc_nota_debitoRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New view_cxc_nota_debitoRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(view_cxc_nota_debitoRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_cxc_nota_debitoRowChangedEvent) Is Nothing) Then
                RaiseEvent view_cxc_nota_debitoRowChanged(Me, New view_cxc_nota_debitoRowChangeEvent(CType(e.Row,view_cxc_nota_debitoRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_cxc_nota_debitoRowChangingEvent) Is Nothing) Then
                RaiseEvent view_cxc_nota_debitoRowChanging(Me, New view_cxc_nota_debitoRowChangeEvent(CType(e.Row,view_cxc_nota_debitoRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_cxc_nota_debitoRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_cxc_nota_debitoRowDeleted(Me, New view_cxc_nota_debitoRowChangeEvent(CType(e.Row,view_cxc_nota_debitoRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_cxc_nota_debitoRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_cxc_nota_debitoRowDeleting(Me, New view_cxc_nota_debitoRowChangeEvent(CType(e.Row,view_cxc_nota_debitoRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeview_cxc_nota_debitoRow(ByVal row As view_cxc_nota_debitoRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_cxc_nota_debitoRow
        Inherits DataRow
        
        Private tableview_cxc_nota_debito As view_cxc_nota_debitoDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_cxc_nota_debito = CType(Me.Table,view_cxc_nota_debitoDataTable)
        End Sub
        
        Public Property fld_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_idColumn) = value
            End Set
        End Property
        
        Public Property fld_FullName As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_FullNameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_FullNameColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_apodoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_apodoColumn) = value
            End Set
        End Property
        
        Public Property fld_Identity As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_IdentityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_IdentityColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_PhoneColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_PhoneColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_Phone2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_Phone2Column) = value
            End Set
        End Property
        
        Public Property fld_Address As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_AddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_AddressColumn) = value
            End Set
        End Property
        
        Public Property fld_City As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_CityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_CityColumn) = value
            End Set
        End Property
        
        Public Property fld_Status As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_StatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_StatusColumn) = value
            End Set
        End Property
        
        Public Property fld_bce As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_bceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_bceColumn) = value
            End Set
        End Property
        
        Public Property fld_cod_zona As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_cod_zonaColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_cod_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_zona As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_zonaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_nombre_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_nombre_conColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_apodo_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_apodo_conColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_cedula_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_cedula_conColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_telefono_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_telefono_conColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_celular_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_celular_conColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_ref_personales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_ref_personales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_ref_comerciales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_ref_comerciales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_nombre_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_nombre_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_apodo_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_apodo_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_cedula_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_cedula_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_telefono_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_telefono_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_celular_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_celular_garColumn) = value
            End Set
        End Property
        
        Public Property fld_direccion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_direccion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_direccion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ciudad_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_ciudad_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_ciudad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_ref_personales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_ref_personales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_ref_comerciales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_ref_comerciales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ingresos_mesuales As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_ingresos_mesualesColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_ingresos_mesualesColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_nombre_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_nombre_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_cuenta_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_cuenta_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_nombre_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_nombre_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_cuenta_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_cuenta_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_otra_informacion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_otra_informacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_otra_informacionColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_nombre_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_nombre_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_apodo_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_apodo_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_cedula_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_cedula_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_telefono_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_telefono_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_celular_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_celular_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_edad As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_edadColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_edadColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_estado_civilColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_estado_civilColumn) = value
            End Set
        End Property
        
        Public Property fld_edad_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_edad_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_edad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_estado_civil_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_estado_civil_garColumn) = value
            End Set
        End Property
        
        Public Property fld_id_nd_cxc As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_id_nd_cxcColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_id_nd_cxcColumn) = value
            End Set
        End Property
        
        Public Property fld_cliente_id_nd As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_cliente_id_ndColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_cliente_id_ndColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_fechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_fechaColumn) = value
            End Set
        End Property
        
        Public Property fld_concepto As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_conceptoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_conceptoColumn) = value
            End Set
        End Property
        
        Public Property fld_monto As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_montoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_montoColumn) = value
            End Set
        End Property
        
        Public Property fld_abono As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_abonoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_abonoColumn) = value
            End Set
        End Property
        
        Public Property fld_balance As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_balanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_balanceColumn) = value
            End Set
        End Property
        
        Public Property fld_user As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_userColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_userColumn) = value
            End Set
        End Property
        
        Public Property fld_status_nd As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_status_ndColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_status_ndColumn) = value
            End Set
        End Property
        
        Public Property fld_ultimo_abono As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_debito.fld_ultimo_abonoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_debito.fld_ultimo_abonoColumn) = value
            End Set
        End Property
        
        Public Function Isfld_idNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_idColumn)
        End Function
        
        Public Sub Setfld_idNull()
            Me(Me.tableview_cxc_nota_debito.fld_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_FullNameNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_FullNameColumn)
        End Function
        
        Public Sub Setfld_FullNameNull()
            Me(Me.tableview_cxc_nota_debito.fld_FullNameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodoNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_apodoColumn)
        End Function
        
        Public Sub Setfld_apodoNull()
            Me(Me.tableview_cxc_nota_debito.fld_apodoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_IdentityNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_IdentityColumn)
        End Function
        
        Public Sub Setfld_IdentityNull()
            Me(Me.tableview_cxc_nota_debito.fld_IdentityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_PhoneNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_PhoneColumn)
        End Function
        
        Public Sub Setfld_PhoneNull()
            Me(Me.tableview_cxc_nota_debito.fld_PhoneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_Phone2Null() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_Phone2Column)
        End Function
        
        Public Sub Setfld_Phone2Null()
            Me(Me.tableview_cxc_nota_debito.fld_Phone2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_AddressNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_AddressColumn)
        End Function
        
        Public Sub Setfld_AddressNull()
            Me(Me.tableview_cxc_nota_debito.fld_AddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_CityNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_CityColumn)
        End Function
        
        Public Sub Setfld_CityNull()
            Me(Me.tableview_cxc_nota_debito.fld_CityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_StatusNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_StatusColumn)
        End Function
        
        Public Sub Setfld_StatusNull()
            Me(Me.tableview_cxc_nota_debito.fld_StatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bceNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_bceColumn)
        End Function
        
        Public Sub Setfld_bceNull()
            Me(Me.tableview_cxc_nota_debito.fld_bceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cod_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_cod_zonaColumn)
        End Function
        
        Public Sub Setfld_cod_zonaNull()
            Me(Me.tableview_cxc_nota_debito.fld_cod_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_zonaColumn)
        End Function
        
        Public Sub Setfld_zonaNull()
            Me(Me.tableview_cxc_nota_debito.fld_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_conNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_nombre_conColumn)
        End Function
        
        Public Sub Setfld_nombre_conNull()
            Me(Me.tableview_cxc_nota_debito.fld_nombre_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_conNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_apodo_conColumn)
        End Function
        
        Public Sub Setfld_apodo_conNull()
            Me(Me.tableview_cxc_nota_debito.fld_apodo_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_conNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_cedula_conColumn)
        End Function
        
        Public Sub Setfld_cedula_conNull()
            Me(Me.tableview_cxc_nota_debito.fld_cedula_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_conNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_telefono_conColumn)
        End Function
        
        Public Sub Setfld_telefono_conNull()
            Me(Me.tableview_cxc_nota_debito.fld_telefono_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_conNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_celular_conColumn)
        End Function
        
        Public Sub Setfld_celular_conNull()
            Me(Me.tableview_cxc_nota_debito.fld_celular_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_ref_personales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_personales_clienteNull()
            Me(Me.tableview_cxc_nota_debito.fld_ref_personales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_ref_comerciales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_clienteNull()
            Me(Me.tableview_cxc_nota_debito.fld_ref_comerciales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_nombre_garColumn)
        End Function
        
        Public Sub Setfld_nombre_garNull()
            Me(Me.tableview_cxc_nota_debito.fld_nombre_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_apodo_garColumn)
        End Function
        
        Public Sub Setfld_apodo_garNull()
            Me(Me.tableview_cxc_nota_debito.fld_apodo_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_cedula_garColumn)
        End Function
        
        Public Sub Setfld_cedula_garNull()
            Me(Me.tableview_cxc_nota_debito.fld_cedula_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_telefono_garColumn)
        End Function
        
        Public Sub Setfld_telefono_garNull()
            Me(Me.tableview_cxc_nota_debito.fld_telefono_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_celular_garColumn)
        End Function
        
        Public Sub Setfld_celular_garNull()
            Me(Me.tableview_cxc_nota_debito.fld_celular_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_direccion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_direccion_garColumn)
        End Function
        
        Public Sub Setfld_direccion_garNull()
            Me(Me.tableview_cxc_nota_debito.fld_direccion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ciudad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_ciudad_garColumn)
        End Function
        
        Public Sub Setfld_ciudad_garNull()
            Me(Me.tableview_cxc_nota_debito.fld_ciudad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_ref_personales_garColumn)
        End Function
        
        Public Sub Setfld_ref_personales_garNull()
            Me(Me.tableview_cxc_nota_debito.fld_ref_personales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_ref_comerciales_garColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_garNull()
            Me(Me.tableview_cxc_nota_debito.fld_ref_comerciales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ingresos_mesualesNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_ingresos_mesualesColumn)
        End Function
        
        Public Sub Setfld_ingresos_mesualesNull()
            Me(Me.tableview_cxc_nota_debito.fld_ingresos_mesualesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_nombre_banco1Column)
        End Function
        
        Public Sub Setfld_nombre_banco1Null()
            Me(Me.tableview_cxc_nota_debito.fld_nombre_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_cuenta_banco1Column)
        End Function
        
        Public Sub Setfld_cuenta_banco1Null()
            Me(Me.tableview_cxc_nota_debito.fld_cuenta_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_nombre_banco2Column)
        End Function
        
        Public Sub Setfld_nombre_banco2Null()
            Me(Me.tableview_cxc_nota_debito.fld_nombre_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_cuenta_banco2Column)
        End Function
        
        Public Sub Setfld_cuenta_banco2Null()
            Me(Me.tableview_cxc_nota_debito.fld_cuenta_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_otra_informacionNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_otra_informacionColumn)
        End Function
        
        Public Sub Setfld_otra_informacionNull()
            Me(Me.tableview_cxc_nota_debito.fld_otra_informacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_nombre_con_garColumn)
        End Function
        
        Public Sub Setfld_nombre_con_garNull()
            Me(Me.tableview_cxc_nota_debito.fld_nombre_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_apodo_con_garColumn)
        End Function
        
        Public Sub Setfld_apodo_con_garNull()
            Me(Me.tableview_cxc_nota_debito.fld_apodo_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_cedula_con_garColumn)
        End Function
        
        Public Sub Setfld_cedula_con_garNull()
            Me(Me.tableview_cxc_nota_debito.fld_cedula_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_telefono_con_garColumn)
        End Function
        
        Public Sub Setfld_telefono_con_garNull()
            Me(Me.tableview_cxc_nota_debito.fld_telefono_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_celular_con_garColumn)
        End Function
        
        Public Sub Setfld_celular_con_garNull()
            Me(Me.tableview_cxc_nota_debito.fld_celular_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edadNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_edadColumn)
        End Function
        
        Public Sub Setfld_edadNull()
            Me(Me.tableview_cxc_nota_debito.fld_edadColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civilNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_estado_civilColumn)
        End Function
        
        Public Sub Setfld_estado_civilNull()
            Me(Me.tableview_cxc_nota_debito.fld_estado_civilColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_edad_garColumn)
        End Function
        
        Public Sub Setfld_edad_garNull()
            Me(Me.tableview_cxc_nota_debito.fld_edad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civil_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_estado_civil_garColumn)
        End Function
        
        Public Sub Setfld_estado_civil_garNull()
            Me(Me.tableview_cxc_nota_debito.fld_estado_civil_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_nd_cxcNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_id_nd_cxcColumn)
        End Function
        
        Public Sub Setfld_id_nd_cxcNull()
            Me(Me.tableview_cxc_nota_debito.fld_id_nd_cxcColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cliente_id_ndNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_cliente_id_ndColumn)
        End Function
        
        Public Sub Setfld_cliente_id_ndNull()
            Me(Me.tableview_cxc_nota_debito.fld_cliente_id_ndColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fechaNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_fechaColumn)
        End Function
        
        Public Sub Setfld_fechaNull()
            Me(Me.tableview_cxc_nota_debito.fld_fechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_conceptoNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_conceptoColumn)
        End Function
        
        Public Sub Setfld_conceptoNull()
            Me(Me.tableview_cxc_nota_debito.fld_conceptoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_montoNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_montoColumn)
        End Function
        
        Public Sub Setfld_montoNull()
            Me(Me.tableview_cxc_nota_debito.fld_montoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_abonoNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_abonoColumn)
        End Function
        
        Public Sub Setfld_abonoNull()
            Me(Me.tableview_cxc_nota_debito.fld_abonoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_balanceNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_balanceColumn)
        End Function
        
        Public Sub Setfld_balanceNull()
            Me(Me.tableview_cxc_nota_debito.fld_balanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_userNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_userColumn)
        End Function
        
        Public Sub Setfld_userNull()
            Me(Me.tableview_cxc_nota_debito.fld_userColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_status_ndNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_status_ndColumn)
        End Function
        
        Public Sub Setfld_status_ndNull()
            Me(Me.tableview_cxc_nota_debito.fld_status_ndColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ultimo_abonoNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_debito.fld_ultimo_abonoColumn)
        End Function
        
        Public Sub Setfld_ultimo_abonoNull()
            Me(Me.tableview_cxc_nota_debito.fld_ultimo_abonoColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_cxc_nota_debitoRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As view_cxc_nota_debitoRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As view_cxc_nota_debitoRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As view_cxc_nota_debitoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_estado_clientesDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id As DataColumn
        
        Private columnfld_FullName As DataColumn
        
        Private columnfld_apodo As DataColumn
        
        Private columnfld_Identity As DataColumn
        
        Private columnfld_Phone As DataColumn
        
        Private columnfld_Phone2 As DataColumn
        
        Private columnfld_Address As DataColumn
        
        Private columnfld_City As DataColumn
        
        Private columnfld_Status As DataColumn
        
        Private columnfld_bce As DataColumn
        
        Private columnfld_cod_zona As DataColumn
        
        Private columnfld_zona As DataColumn
        
        Private columnfld_nombre_con As DataColumn
        
        Private columnfld_apodo_con As DataColumn
        
        Private columnfld_cedula_con As DataColumn
        
        Private columnfld_telefono_con As DataColumn
        
        Private columnfld_celular_con As DataColumn
        
        Private columnfld_ref_personales_cliente As DataColumn
        
        Private columnfld_ref_comerciales_cliente As DataColumn
        
        Private columnfld_nombre_gar As DataColumn
        
        Private columnfld_apodo_gar As DataColumn
        
        Private columnfld_cedula_gar As DataColumn
        
        Private columnfld_telefono_gar As DataColumn
        
        Private columnfld_celular_gar As DataColumn
        
        Private columnfld_direccion_gar As DataColumn
        
        Private columnfld_ciudad_gar As DataColumn
        
        Private columnfld_ref_personales_gar As DataColumn
        
        Private columnfld_ref_comerciales_gar As DataColumn
        
        Private columnfld_ingresos_mesuales As DataColumn
        
        Private columnfld_nombre_banco1 As DataColumn
        
        Private columnfld_cuenta_banco1 As DataColumn
        
        Private columnfld_nombre_banco2 As DataColumn
        
        Private columnfld_cuenta_banco2 As DataColumn
        
        Private columnfld_otra_informacion As DataColumn
        
        Private columnfld_nombre_con_gar As DataColumn
        
        Private columnfld_apodo_con_gar As DataColumn
        
        Private columnfld_cedula_con_gar As DataColumn
        
        Private columnfld_telefono_con_gar As DataColumn
        
        Private columnfld_celular_con_gar As DataColumn
        
        Private columnfld_edad As DataColumn
        
        Private columnfld_estado_civil As DataColumn
        
        Private columnfld_edad_gar As DataColumn
        
        Private columnfld_estado_civil_gar As DataColumn
        
        Private columnfld_id_ec As DataColumn
        
        Private columnfld_date As DataColumn
        
        Private columnfld_description As DataColumn
        
        Private columnfld_dr As DataColumn
        
        Private columnfld_cr As DataColumn
        
        Private columnfld_bce_cliente As DataColumn
        
        Private columnfld_cliente_id As DataColumn
        
        Private columnfld_tipo_doc As DataColumn
        
        Private columnfld_tipo_doc_id As DataColumn
        
        Private columnfld_usuario As DataColumn
        
        Friend Sub New()
            MyBase.New("view_estado_clientes")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_FullNameColumn As DataColumn
            Get
                Return Me.columnfld_FullName
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodoColumn As DataColumn
            Get
                Return Me.columnfld_apodo
            End Get
        End Property
        
        Friend ReadOnly Property fld_IdentityColumn As DataColumn
            Get
                Return Me.columnfld_Identity
            End Get
        End Property
        
        Friend ReadOnly Property fld_PhoneColumn As DataColumn
            Get
                Return Me.columnfld_Phone
            End Get
        End Property
        
        Friend ReadOnly Property fld_Phone2Column As DataColumn
            Get
                Return Me.columnfld_Phone2
            End Get
        End Property
        
        Friend ReadOnly Property fld_AddressColumn As DataColumn
            Get
                Return Me.columnfld_Address
            End Get
        End Property
        
        Friend ReadOnly Property fld_CityColumn As DataColumn
            Get
                Return Me.columnfld_City
            End Get
        End Property
        
        Friend ReadOnly Property fld_StatusColumn As DataColumn
            Get
                Return Me.columnfld_Status
            End Get
        End Property
        
        Friend ReadOnly Property fld_bceColumn As DataColumn
            Get
                Return Me.columnfld_bce
            End Get
        End Property
        
        Friend ReadOnly Property fld_cod_zonaColumn As DataColumn
            Get
                Return Me.columnfld_cod_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_zonaColumn As DataColumn
            Get
                Return Me.columnfld_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_conColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_conColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_conColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_conColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_conColumn As DataColumn
            Get
                Return Me.columnfld_celular_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_direccion_garColumn As DataColumn
            Get
                Return Me.columnfld_direccion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ciudad_garColumn As DataColumn
            Get
                Return Me.columnfld_ciudad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ingresos_mesualesColumn As DataColumn
            Get
                Return Me.columnfld_ingresos_mesuales
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco1Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco1Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco2Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco2Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_otra_informacionColumn As DataColumn
            Get
                Return Me.columnfld_otra_informacion
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_con_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_con_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_con_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_con_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_con_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_edadColumn As DataColumn
            Get
                Return Me.columnfld_edad
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civilColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil
            End Get
        End Property
        
        Friend ReadOnly Property fld_edad_garColumn As DataColumn
            Get
                Return Me.columnfld_edad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civil_garColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_ecColumn As DataColumn
            Get
                Return Me.columnfld_id_ec
            End Get
        End Property
        
        Friend ReadOnly Property fld_dateColumn As DataColumn
            Get
                Return Me.columnfld_date
            End Get
        End Property
        
        Friend ReadOnly Property fld_descriptionColumn As DataColumn
            Get
                Return Me.columnfld_description
            End Get
        End Property
        
        Friend ReadOnly Property fld_drColumn As DataColumn
            Get
                Return Me.columnfld_dr
            End Get
        End Property
        
        Friend ReadOnly Property fld_crColumn As DataColumn
            Get
                Return Me.columnfld_cr
            End Get
        End Property
        
        Friend ReadOnly Property fld_bce_clienteColumn As DataColumn
            Get
                Return Me.columnfld_bce_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_cliente_idColumn As DataColumn
            Get
                Return Me.columnfld_cliente_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_tipo_docColumn As DataColumn
            Get
                Return Me.columnfld_tipo_doc
            End Get
        End Property
        
        Friend ReadOnly Property fld_tipo_doc_idColumn As DataColumn
            Get
                Return Me.columnfld_tipo_doc_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_usuarioColumn As DataColumn
            Get
                Return Me.columnfld_usuario
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_estado_clientesRow
            Get
                Return CType(Me.Rows(index),view_estado_clientesRow)
            End Get
        End Property
        
        Public Event view_estado_clientesRowChanged As view_estado_clientesRowChangeEventHandler
        
        Public Event view_estado_clientesRowChanging As view_estado_clientesRowChangeEventHandler
        
        Public Event view_estado_clientesRowDeleted As view_estado_clientesRowChangeEventHandler
        
        Public Event view_estado_clientesRowDeleting As view_estado_clientesRowChangeEventHandler
        
        Public Overloads Sub Addview_estado_clientesRow(ByVal row As view_estado_clientesRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addview_estado_clientesRow( _
                    ByVal fld_FullName As String,  _
                    ByVal fld_apodo As String,  _
                    ByVal fld_Identity As String,  _
                    ByVal fld_Phone As String,  _
                    ByVal fld_Phone2 As String,  _
                    ByVal fld_Address As String,  _
                    ByVal fld_City As String,  _
                    ByVal fld_Status As String,  _
                    ByVal fld_bce As Double,  _
                    ByVal fld_cod_zona As Integer,  _
                    ByVal fld_zona As String,  _
                    ByVal fld_nombre_con As String,  _
                    ByVal fld_apodo_con As String,  _
                    ByVal fld_cedula_con As String,  _
                    ByVal fld_telefono_con As String,  _
                    ByVal fld_celular_con As String,  _
                    ByVal fld_ref_personales_cliente As String,  _
                    ByVal fld_ref_comerciales_cliente As String,  _
                    ByVal fld_nombre_gar As String,  _
                    ByVal fld_apodo_gar As String,  _
                    ByVal fld_cedula_gar As String,  _
                    ByVal fld_telefono_gar As String,  _
                    ByVal fld_celular_gar As String,  _
                    ByVal fld_direccion_gar As String,  _
                    ByVal fld_ciudad_gar As String,  _
                    ByVal fld_ref_personales_gar As String,  _
                    ByVal fld_ref_comerciales_gar As String,  _
                    ByVal fld_ingresos_mesuales As Double,  _
                    ByVal fld_nombre_banco1 As String,  _
                    ByVal fld_cuenta_banco1 As String,  _
                    ByVal fld_nombre_banco2 As String,  _
                    ByVal fld_cuenta_banco2 As String,  _
                    ByVal fld_otra_informacion As String,  _
                    ByVal fld_nombre_con_gar As String,  _
                    ByVal fld_apodo_con_gar As String,  _
                    ByVal fld_cedula_con_gar As String,  _
                    ByVal fld_telefono_con_gar As String,  _
                    ByVal fld_celular_con_gar As String,  _
                    ByVal fld_edad As Integer,  _
                    ByVal fld_estado_civil As String,  _
                    ByVal fld_edad_gar As String,  _
                    ByVal fld_estado_civil_gar As String,  _
                    ByVal fld_date As Date,  _
                    ByVal fld_description As String,  _
                    ByVal fld_dr As Double,  _
                    ByVal fld_cr As Double,  _
                    ByVal fld_bce_cliente As Double,  _
                    ByVal fld_cliente_id As Integer,  _
                    ByVal fld_tipo_doc As String,  _
                    ByVal fld_tipo_doc_id As String,  _
                    ByVal fld_usuario As String) As view_estado_clientesRow
            Dim rowview_estado_clientesRow As view_estado_clientesRow = CType(Me.NewRow,view_estado_clientesRow)
            rowview_estado_clientesRow.ItemArray = New Object() {Nothing, fld_FullName, fld_apodo, fld_Identity, fld_Phone, fld_Phone2, fld_Address, fld_City, fld_Status, fld_bce, fld_cod_zona, fld_zona, fld_nombre_con, fld_apodo_con, fld_cedula_con, fld_telefono_con, fld_celular_con, fld_ref_personales_cliente, fld_ref_comerciales_cliente, fld_nombre_gar, fld_apodo_gar, fld_cedula_gar, fld_telefono_gar, fld_celular_gar, fld_direccion_gar, fld_ciudad_gar, fld_ref_personales_gar, fld_ref_comerciales_gar, fld_ingresos_mesuales, fld_nombre_banco1, fld_cuenta_banco1, fld_nombre_banco2, fld_cuenta_banco2, fld_otra_informacion, fld_nombre_con_gar, fld_apodo_con_gar, fld_cedula_con_gar, fld_telefono_con_gar, fld_celular_con_gar, fld_edad, fld_estado_civil, fld_edad_gar, fld_estado_civil_gar, Nothing, fld_date, fld_description, fld_dr, fld_cr, fld_bce_cliente, fld_cliente_id, fld_tipo_doc, fld_tipo_doc_id, fld_usuario}
            Me.Rows.Add(rowview_estado_clientesRow)
            Return rowview_estado_clientesRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As view_estado_clientesDataTable = CType(MyBase.Clone,view_estado_clientesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New view_estado_clientesDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnfld_FullName = Me.Columns("fld_FullName")
            Me.columnfld_apodo = Me.Columns("fld_apodo")
            Me.columnfld_Identity = Me.Columns("fld_Identity")
            Me.columnfld_Phone = Me.Columns("fld_Phone")
            Me.columnfld_Phone2 = Me.Columns("fld_Phone2")
            Me.columnfld_Address = Me.Columns("fld_Address")
            Me.columnfld_City = Me.Columns("fld_City")
            Me.columnfld_Status = Me.Columns("fld_Status")
            Me.columnfld_bce = Me.Columns("fld_bce")
            Me.columnfld_cod_zona = Me.Columns("fld_cod_zona")
            Me.columnfld_zona = Me.Columns("fld_zona")
            Me.columnfld_nombre_con = Me.Columns("fld_nombre_con")
            Me.columnfld_apodo_con = Me.Columns("fld_apodo_con")
            Me.columnfld_cedula_con = Me.Columns("fld_cedula_con")
            Me.columnfld_telefono_con = Me.Columns("fld_telefono_con")
            Me.columnfld_celular_con = Me.Columns("fld_celular_con")
            Me.columnfld_ref_personales_cliente = Me.Columns("fld_ref_personales_cliente")
            Me.columnfld_ref_comerciales_cliente = Me.Columns("fld_ref_comerciales_cliente")
            Me.columnfld_nombre_gar = Me.Columns("fld_nombre_gar")
            Me.columnfld_apodo_gar = Me.Columns("fld_apodo_gar")
            Me.columnfld_cedula_gar = Me.Columns("fld_cedula_gar")
            Me.columnfld_telefono_gar = Me.Columns("fld_telefono_gar")
            Me.columnfld_celular_gar = Me.Columns("fld_celular_gar")
            Me.columnfld_direccion_gar = Me.Columns("fld_direccion_gar")
            Me.columnfld_ciudad_gar = Me.Columns("fld_ciudad_gar")
            Me.columnfld_ref_personales_gar = Me.Columns("fld_ref_personales_gar")
            Me.columnfld_ref_comerciales_gar = Me.Columns("fld_ref_comerciales_gar")
            Me.columnfld_ingresos_mesuales = Me.Columns("fld_ingresos_mesuales")
            Me.columnfld_nombre_banco1 = Me.Columns("fld_nombre_banco1")
            Me.columnfld_cuenta_banco1 = Me.Columns("fld_cuenta_banco1")
            Me.columnfld_nombre_banco2 = Me.Columns("fld_nombre_banco2")
            Me.columnfld_cuenta_banco2 = Me.Columns("fld_cuenta_banco2")
            Me.columnfld_otra_informacion = Me.Columns("fld_otra_informacion")
            Me.columnfld_nombre_con_gar = Me.Columns("fld_nombre_con_gar")
            Me.columnfld_apodo_con_gar = Me.Columns("fld_apodo_con_gar")
            Me.columnfld_cedula_con_gar = Me.Columns("fld_cedula_con_gar")
            Me.columnfld_telefono_con_gar = Me.Columns("fld_telefono_con_gar")
            Me.columnfld_celular_con_gar = Me.Columns("fld_celular_con_gar")
            Me.columnfld_edad = Me.Columns("fld_edad")
            Me.columnfld_estado_civil = Me.Columns("fld_estado_civil")
            Me.columnfld_edad_gar = Me.Columns("fld_edad_gar")
            Me.columnfld_estado_civil_gar = Me.Columns("fld_estado_civil_gar")
            Me.columnfld_id_ec = Me.Columns("fld_id_ec")
            Me.columnfld_date = Me.Columns("fld_date")
            Me.columnfld_description = Me.Columns("fld_description")
            Me.columnfld_dr = Me.Columns("fld_dr")
            Me.columnfld_cr = Me.Columns("fld_cr")
            Me.columnfld_bce_cliente = Me.Columns("fld_bce_cliente")
            Me.columnfld_cliente_id = Me.Columns("fld_cliente_id")
            Me.columnfld_tipo_doc = Me.Columns("fld_tipo_doc")
            Me.columnfld_tipo_doc_id = Me.Columns("fld_tipo_doc_id")
            Me.columnfld_usuario = Me.Columns("fld_usuario")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnfld_FullName = New DataColumn("fld_FullName", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_FullName)
            Me.columnfld_apodo = New DataColumn("fld_apodo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo)
            Me.columnfld_Identity = New DataColumn("fld_Identity", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Identity)
            Me.columnfld_Phone = New DataColumn("fld_Phone", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone)
            Me.columnfld_Phone2 = New DataColumn("fld_Phone2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone2)
            Me.columnfld_Address = New DataColumn("fld_Address", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Address)
            Me.columnfld_City = New DataColumn("fld_City", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_City)
            Me.columnfld_Status = New DataColumn("fld_Status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Status)
            Me.columnfld_bce = New DataColumn("fld_bce", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce)
            Me.columnfld_cod_zona = New DataColumn("fld_cod_zona", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cod_zona)
            Me.columnfld_zona = New DataColumn("fld_zona", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_zona)
            Me.columnfld_nombre_con = New DataColumn("fld_nombre_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con)
            Me.columnfld_apodo_con = New DataColumn("fld_apodo_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con)
            Me.columnfld_cedula_con = New DataColumn("fld_cedula_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con)
            Me.columnfld_telefono_con = New DataColumn("fld_telefono_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con)
            Me.columnfld_celular_con = New DataColumn("fld_celular_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con)
            Me.columnfld_ref_personales_cliente = New DataColumn("fld_ref_personales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_cliente)
            Me.columnfld_ref_comerciales_cliente = New DataColumn("fld_ref_comerciales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_cliente)
            Me.columnfld_nombre_gar = New DataColumn("fld_nombre_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_gar)
            Me.columnfld_apodo_gar = New DataColumn("fld_apodo_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_gar)
            Me.columnfld_cedula_gar = New DataColumn("fld_cedula_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_gar)
            Me.columnfld_telefono_gar = New DataColumn("fld_telefono_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_gar)
            Me.columnfld_celular_gar = New DataColumn("fld_celular_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_gar)
            Me.columnfld_direccion_gar = New DataColumn("fld_direccion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_direccion_gar)
            Me.columnfld_ciudad_gar = New DataColumn("fld_ciudad_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ciudad_gar)
            Me.columnfld_ref_personales_gar = New DataColumn("fld_ref_personales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_gar)
            Me.columnfld_ref_comerciales_gar = New DataColumn("fld_ref_comerciales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_gar)
            Me.columnfld_ingresos_mesuales = New DataColumn("fld_ingresos_mesuales", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ingresos_mesuales)
            Me.columnfld_nombre_banco1 = New DataColumn("fld_nombre_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco1)
            Me.columnfld_cuenta_banco1 = New DataColumn("fld_cuenta_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco1)
            Me.columnfld_nombre_banco2 = New DataColumn("fld_nombre_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco2)
            Me.columnfld_cuenta_banco2 = New DataColumn("fld_cuenta_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco2)
            Me.columnfld_otra_informacion = New DataColumn("fld_otra_informacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_otra_informacion)
            Me.columnfld_nombre_con_gar = New DataColumn("fld_nombre_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con_gar)
            Me.columnfld_apodo_con_gar = New DataColumn("fld_apodo_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con_gar)
            Me.columnfld_cedula_con_gar = New DataColumn("fld_cedula_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con_gar)
            Me.columnfld_telefono_con_gar = New DataColumn("fld_telefono_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con_gar)
            Me.columnfld_celular_con_gar = New DataColumn("fld_celular_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con_gar)
            Me.columnfld_edad = New DataColumn("fld_edad", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad)
            Me.columnfld_estado_civil = New DataColumn("fld_estado_civil", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil)
            Me.columnfld_edad_gar = New DataColumn("fld_edad_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad_gar)
            Me.columnfld_estado_civil_gar = New DataColumn("fld_estado_civil_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil_gar)
            Me.columnfld_id_ec = New DataColumn("fld_id_ec", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_ec)
            Me.columnfld_date = New DataColumn("fld_date", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_date)
            Me.columnfld_description = New DataColumn("fld_description", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_description)
            Me.columnfld_dr = New DataColumn("fld_dr", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_dr)
            Me.columnfld_cr = New DataColumn("fld_cr", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cr)
            Me.columnfld_bce_cliente = New DataColumn("fld_bce_cliente", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce_cliente)
            Me.columnfld_cliente_id = New DataColumn("fld_cliente_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cliente_id)
            Me.columnfld_tipo_doc = New DataColumn("fld_tipo_doc", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_tipo_doc)
            Me.columnfld_tipo_doc_id = New DataColumn("fld_tipo_doc_id", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_tipo_doc_id)
            Me.columnfld_usuario = New DataColumn("fld_usuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_usuario)
            Me.columnfld_id.AutoIncrement = true
            Me.columnfld_id_ec.AutoIncrement = true
        End Sub
        
        Public Function Newview_estado_clientesRow() As view_estado_clientesRow
            Return CType(Me.NewRow,view_estado_clientesRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New view_estado_clientesRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(view_estado_clientesRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_estado_clientesRowChangedEvent) Is Nothing) Then
                RaiseEvent view_estado_clientesRowChanged(Me, New view_estado_clientesRowChangeEvent(CType(e.Row,view_estado_clientesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_estado_clientesRowChangingEvent) Is Nothing) Then
                RaiseEvent view_estado_clientesRowChanging(Me, New view_estado_clientesRowChangeEvent(CType(e.Row,view_estado_clientesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_estado_clientesRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_estado_clientesRowDeleted(Me, New view_estado_clientesRowChangeEvent(CType(e.Row,view_estado_clientesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_estado_clientesRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_estado_clientesRowDeleting(Me, New view_estado_clientesRowChangeEvent(CType(e.Row,view_estado_clientesRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeview_estado_clientesRow(ByVal row As view_estado_clientesRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_estado_clientesRow
        Inherits DataRow
        
        Private tableview_estado_clientes As view_estado_clientesDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_estado_clientes = CType(Me.Table,view_estado_clientesDataTable)
        End Sub
        
        Public Property fld_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_idColumn) = value
            End Set
        End Property
        
        Public Property fld_FullName As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_FullNameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_FullNameColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_apodoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_apodoColumn) = value
            End Set
        End Property
        
        Public Property fld_Identity As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_IdentityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_IdentityColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_PhoneColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_PhoneColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_Phone2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_Phone2Column) = value
            End Set
        End Property
        
        Public Property fld_Address As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_AddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_AddressColumn) = value
            End Set
        End Property
        
        Public Property fld_City As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_CityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_CityColumn) = value
            End Set
        End Property
        
        Public Property fld_Status As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_StatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_StatusColumn) = value
            End Set
        End Property
        
        Public Property fld_bce As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_bceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_bceColumn) = value
            End Set
        End Property
        
        Public Property fld_cod_zona As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_cod_zonaColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_cod_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_zona As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_zonaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_nombre_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_nombre_conColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_apodo_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_apodo_conColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_cedula_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_cedula_conColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_telefono_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_telefono_conColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_celular_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_celular_conColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_ref_personales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_ref_personales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_ref_comerciales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_ref_comerciales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_nombre_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_nombre_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_apodo_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_apodo_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_cedula_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_cedula_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_telefono_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_telefono_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_celular_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_celular_garColumn) = value
            End Set
        End Property
        
        Public Property fld_direccion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_direccion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_direccion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ciudad_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_ciudad_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_ciudad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_ref_personales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_ref_personales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_ref_comerciales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_ref_comerciales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ingresos_mesuales As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_ingresos_mesualesColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_ingresos_mesualesColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_nombre_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_nombre_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_cuenta_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_cuenta_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_nombre_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_nombre_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_cuenta_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_cuenta_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_otra_informacion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_otra_informacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_otra_informacionColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_nombre_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_nombre_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_apodo_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_apodo_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_cedula_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_cedula_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_telefono_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_telefono_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_celular_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_celular_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_edad As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_edadColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_edadColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_estado_civilColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_estado_civilColumn) = value
            End Set
        End Property
        
        Public Property fld_edad_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_edad_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_edad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_estado_civil_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_estado_civil_garColumn) = value
            End Set
        End Property
        
        Public Property fld_id_ec As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_id_ecColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_id_ecColumn) = value
            End Set
        End Property
        
        Public Property fld_date As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_dateColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_dateColumn) = value
            End Set
        End Property
        
        Public Property fld_description As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_descriptionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_descriptionColumn) = value
            End Set
        End Property
        
        Public Property fld_dr As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_drColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_drColumn) = value
            End Set
        End Property
        
        Public Property fld_cr As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_crColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_crColumn) = value
            End Set
        End Property
        
        Public Property fld_bce_cliente As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_bce_clienteColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_bce_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_cliente_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_cliente_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_cliente_idColumn) = value
            End Set
        End Property
        
        Public Property fld_tipo_doc As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_tipo_docColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_tipo_docColumn) = value
            End Set
        End Property
        
        Public Property fld_tipo_doc_id As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_tipo_doc_idColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_tipo_doc_idColumn) = value
            End Set
        End Property
        
        Public Property fld_usuario As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_clientes.fld_usuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_clientes.fld_usuarioColumn) = value
            End Set
        End Property
        
        Public Function Isfld_idNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_idColumn)
        End Function
        
        Public Sub Setfld_idNull()
            Me(Me.tableview_estado_clientes.fld_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_FullNameNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_FullNameColumn)
        End Function
        
        Public Sub Setfld_FullNameNull()
            Me(Me.tableview_estado_clientes.fld_FullNameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodoNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_apodoColumn)
        End Function
        
        Public Sub Setfld_apodoNull()
            Me(Me.tableview_estado_clientes.fld_apodoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_IdentityNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_IdentityColumn)
        End Function
        
        Public Sub Setfld_IdentityNull()
            Me(Me.tableview_estado_clientes.fld_IdentityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_PhoneNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_PhoneColumn)
        End Function
        
        Public Sub Setfld_PhoneNull()
            Me(Me.tableview_estado_clientes.fld_PhoneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_Phone2Null() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_Phone2Column)
        End Function
        
        Public Sub Setfld_Phone2Null()
            Me(Me.tableview_estado_clientes.fld_Phone2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_AddressNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_AddressColumn)
        End Function
        
        Public Sub Setfld_AddressNull()
            Me(Me.tableview_estado_clientes.fld_AddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_CityNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_CityColumn)
        End Function
        
        Public Sub Setfld_CityNull()
            Me(Me.tableview_estado_clientes.fld_CityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_StatusNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_StatusColumn)
        End Function
        
        Public Sub Setfld_StatusNull()
            Me(Me.tableview_estado_clientes.fld_StatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bceNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_bceColumn)
        End Function
        
        Public Sub Setfld_bceNull()
            Me(Me.tableview_estado_clientes.fld_bceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cod_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_cod_zonaColumn)
        End Function
        
        Public Sub Setfld_cod_zonaNull()
            Me(Me.tableview_estado_clientes.fld_cod_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_zonaColumn)
        End Function
        
        Public Sub Setfld_zonaNull()
            Me(Me.tableview_estado_clientes.fld_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_conNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_nombre_conColumn)
        End Function
        
        Public Sub Setfld_nombre_conNull()
            Me(Me.tableview_estado_clientes.fld_nombre_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_conNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_apodo_conColumn)
        End Function
        
        Public Sub Setfld_apodo_conNull()
            Me(Me.tableview_estado_clientes.fld_apodo_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_conNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_cedula_conColumn)
        End Function
        
        Public Sub Setfld_cedula_conNull()
            Me(Me.tableview_estado_clientes.fld_cedula_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_conNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_telefono_conColumn)
        End Function
        
        Public Sub Setfld_telefono_conNull()
            Me(Me.tableview_estado_clientes.fld_telefono_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_conNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_celular_conColumn)
        End Function
        
        Public Sub Setfld_celular_conNull()
            Me(Me.tableview_estado_clientes.fld_celular_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_ref_personales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_personales_clienteNull()
            Me(Me.tableview_estado_clientes.fld_ref_personales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_ref_comerciales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_clienteNull()
            Me(Me.tableview_estado_clientes.fld_ref_comerciales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_garNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_nombre_garColumn)
        End Function
        
        Public Sub Setfld_nombre_garNull()
            Me(Me.tableview_estado_clientes.fld_nombre_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_garNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_apodo_garColumn)
        End Function
        
        Public Sub Setfld_apodo_garNull()
            Me(Me.tableview_estado_clientes.fld_apodo_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_garNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_cedula_garColumn)
        End Function
        
        Public Sub Setfld_cedula_garNull()
            Me(Me.tableview_estado_clientes.fld_cedula_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_garNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_telefono_garColumn)
        End Function
        
        Public Sub Setfld_telefono_garNull()
            Me(Me.tableview_estado_clientes.fld_telefono_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_garNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_celular_garColumn)
        End Function
        
        Public Sub Setfld_celular_garNull()
            Me(Me.tableview_estado_clientes.fld_celular_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_direccion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_direccion_garColumn)
        End Function
        
        Public Sub Setfld_direccion_garNull()
            Me(Me.tableview_estado_clientes.fld_direccion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ciudad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_ciudad_garColumn)
        End Function
        
        Public Sub Setfld_ciudad_garNull()
            Me(Me.tableview_estado_clientes.fld_ciudad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_ref_personales_garColumn)
        End Function
        
        Public Sub Setfld_ref_personales_garNull()
            Me(Me.tableview_estado_clientes.fld_ref_personales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_ref_comerciales_garColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_garNull()
            Me(Me.tableview_estado_clientes.fld_ref_comerciales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ingresos_mesualesNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_ingresos_mesualesColumn)
        End Function
        
        Public Sub Setfld_ingresos_mesualesNull()
            Me(Me.tableview_estado_clientes.fld_ingresos_mesualesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_nombre_banco1Column)
        End Function
        
        Public Sub Setfld_nombre_banco1Null()
            Me(Me.tableview_estado_clientes.fld_nombre_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_cuenta_banco1Column)
        End Function
        
        Public Sub Setfld_cuenta_banco1Null()
            Me(Me.tableview_estado_clientes.fld_cuenta_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_nombre_banco2Column)
        End Function
        
        Public Sub Setfld_nombre_banco2Null()
            Me(Me.tableview_estado_clientes.fld_nombre_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_cuenta_banco2Column)
        End Function
        
        Public Sub Setfld_cuenta_banco2Null()
            Me(Me.tableview_estado_clientes.fld_cuenta_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_otra_informacionNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_otra_informacionColumn)
        End Function
        
        Public Sub Setfld_otra_informacionNull()
            Me(Me.tableview_estado_clientes.fld_otra_informacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_nombre_con_garColumn)
        End Function
        
        Public Sub Setfld_nombre_con_garNull()
            Me(Me.tableview_estado_clientes.fld_nombre_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_apodo_con_garColumn)
        End Function
        
        Public Sub Setfld_apodo_con_garNull()
            Me(Me.tableview_estado_clientes.fld_apodo_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_cedula_con_garColumn)
        End Function
        
        Public Sub Setfld_cedula_con_garNull()
            Me(Me.tableview_estado_clientes.fld_cedula_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_telefono_con_garColumn)
        End Function
        
        Public Sub Setfld_telefono_con_garNull()
            Me(Me.tableview_estado_clientes.fld_telefono_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_celular_con_garColumn)
        End Function
        
        Public Sub Setfld_celular_con_garNull()
            Me(Me.tableview_estado_clientes.fld_celular_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edadNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_edadColumn)
        End Function
        
        Public Sub Setfld_edadNull()
            Me(Me.tableview_estado_clientes.fld_edadColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civilNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_estado_civilColumn)
        End Function
        
        Public Sub Setfld_estado_civilNull()
            Me(Me.tableview_estado_clientes.fld_estado_civilColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_edad_garColumn)
        End Function
        
        Public Sub Setfld_edad_garNull()
            Me(Me.tableview_estado_clientes.fld_edad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civil_garNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_estado_civil_garColumn)
        End Function
        
        Public Sub Setfld_estado_civil_garNull()
            Me(Me.tableview_estado_clientes.fld_estado_civil_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_ecNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_id_ecColumn)
        End Function
        
        Public Sub Setfld_id_ecNull()
            Me(Me.tableview_estado_clientes.fld_id_ecColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_dateNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_dateColumn)
        End Function
        
        Public Sub Setfld_dateNull()
            Me(Me.tableview_estado_clientes.fld_dateColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_descriptionNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_descriptionColumn)
        End Function
        
        Public Sub Setfld_descriptionNull()
            Me(Me.tableview_estado_clientes.fld_descriptionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_drNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_drColumn)
        End Function
        
        Public Sub Setfld_drNull()
            Me(Me.tableview_estado_clientes.fld_drColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_crNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_crColumn)
        End Function
        
        Public Sub Setfld_crNull()
            Me(Me.tableview_estado_clientes.fld_crColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bce_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_bce_clienteColumn)
        End Function
        
        Public Sub Setfld_bce_clienteNull()
            Me(Me.tableview_estado_clientes.fld_bce_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cliente_idNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_cliente_idColumn)
        End Function
        
        Public Sub Setfld_cliente_idNull()
            Me(Me.tableview_estado_clientes.fld_cliente_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_tipo_docNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_tipo_docColumn)
        End Function
        
        Public Sub Setfld_tipo_docNull()
            Me(Me.tableview_estado_clientes.fld_tipo_docColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_tipo_doc_idNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_tipo_doc_idColumn)
        End Function
        
        Public Sub Setfld_tipo_doc_idNull()
            Me(Me.tableview_estado_clientes.fld_tipo_doc_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_usuarioNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_clientes.fld_usuarioColumn)
        End Function
        
        Public Sub Setfld_usuarioNull()
            Me(Me.tableview_estado_clientes.fld_usuarioColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_estado_clientesRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As view_estado_clientesRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As view_estado_clientesRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As view_estado_clientesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_prestamos_todosDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id As DataColumn
        
        Private columnfld_FullName As DataColumn
        
        Private columnfld_apodo As DataColumn
        
        Private columnfld_Identity As DataColumn
        
        Private columnfld_Phone As DataColumn
        
        Private columnfld_Phone2 As DataColumn
        
        Private columnfld_Address As DataColumn
        
        Private columnfld_City As DataColumn
        
        Private columnfld_Status As DataColumn
        
        Private columnfld_bce As DataColumn
        
        Private columnfld_cod_zona As DataColumn
        
        Private columnfld_zona As DataColumn
        
        Private columnfld_nombre_con As DataColumn
        
        Private columnfld_apodo_con As DataColumn
        
        Private columnfld_cedula_con As DataColumn
        
        Private columnfld_telefono_con As DataColumn
        
        Private columnfld_celular_con As DataColumn
        
        Private columnfld_ref_personales_cliente As DataColumn
        
        Private columnfld_ref_comerciales_cliente As DataColumn
        
        Private columnfld_nombre_gar As DataColumn
        
        Private columnfld_apodo_gar As DataColumn
        
        Private columnfld_cedula_gar As DataColumn
        
        Private columnfld_telefono_gar As DataColumn
        
        Private columnfld_celular_gar As DataColumn
        
        Private columnfld_direccion_gar As DataColumn
        
        Private columnfld_ciudad_gar As DataColumn
        
        Private columnfld_ref_personales_gar As DataColumn
        
        Private columnfld_ref_comerciales_gar As DataColumn
        
        Private columnfld_ingresos_mesuales As DataColumn
        
        Private columnfld_nombre_banco1 As DataColumn
        
        Private columnfld_cuenta_banco1 As DataColumn
        
        Private columnfld_nombre_banco2 As DataColumn
        
        Private columnfld_cuenta_banco2 As DataColumn
        
        Private columnfld_otra_informacion As DataColumn
        
        Private columnfld_nombre_con_gar As DataColumn
        
        Private columnfld_apodo_con_gar As DataColumn
        
        Private columnfld_cedula_con_gar As DataColumn
        
        Private columnfld_telefono_con_gar As DataColumn
        
        Private columnfld_celular_con_gar As DataColumn
        
        Private columnfld_edad As DataColumn
        
        Private columnfld_estado_civil As DataColumn
        
        Private columnfld_edad_gar As DataColumn
        
        Private columnfld_estado_civil_gar As DataColumn
        
        Private columnfld_id_prestamos As DataColumn
        
        Private columnfld_id_del_cliente As DataColumn
        
        Private columnfld_fecha_entrega As DataColumn
        
        Private columnfld_fecha_termina As DataColumn
        
        Private columnfld_cantidad_cuotas As DataColumn
        
        Private columnfld_monto_cuotas_a As DataColumn
        
        Private columnfld_capital_prestamo As DataColumn
        
        Private columnfld_monto As DataColumn
        
        Private columnfld_abono As DataColumn
        
        Private columnfld_balance As DataColumn
        
        Private columnfld_usuario As DataColumn
        
        Private columnfld_fecha_ultimo_abono As DataColumn
        
        Private columnfld_status_prestamos As DataColumn
        
        Private columnfld_anos As DataColumn
        
        Private columnfld_interes_p As DataColumn
        
        Private columnfld_ck_no As DataColumn
        
        Friend Sub New()
            MyBase.New("view_prestamos_todos")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_FullNameColumn As DataColumn
            Get
                Return Me.columnfld_FullName
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodoColumn As DataColumn
            Get
                Return Me.columnfld_apodo
            End Get
        End Property
        
        Friend ReadOnly Property fld_IdentityColumn As DataColumn
            Get
                Return Me.columnfld_Identity
            End Get
        End Property
        
        Friend ReadOnly Property fld_PhoneColumn As DataColumn
            Get
                Return Me.columnfld_Phone
            End Get
        End Property
        
        Friend ReadOnly Property fld_Phone2Column As DataColumn
            Get
                Return Me.columnfld_Phone2
            End Get
        End Property
        
        Friend ReadOnly Property fld_AddressColumn As DataColumn
            Get
                Return Me.columnfld_Address
            End Get
        End Property
        
        Friend ReadOnly Property fld_CityColumn As DataColumn
            Get
                Return Me.columnfld_City
            End Get
        End Property
        
        Friend ReadOnly Property fld_StatusColumn As DataColumn
            Get
                Return Me.columnfld_Status
            End Get
        End Property
        
        Friend ReadOnly Property fld_bceColumn As DataColumn
            Get
                Return Me.columnfld_bce
            End Get
        End Property
        
        Friend ReadOnly Property fld_cod_zonaColumn As DataColumn
            Get
                Return Me.columnfld_cod_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_zonaColumn As DataColumn
            Get
                Return Me.columnfld_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_conColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_conColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_conColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_conColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_conColumn As DataColumn
            Get
                Return Me.columnfld_celular_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_direccion_garColumn As DataColumn
            Get
                Return Me.columnfld_direccion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ciudad_garColumn As DataColumn
            Get
                Return Me.columnfld_ciudad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ingresos_mesualesColumn As DataColumn
            Get
                Return Me.columnfld_ingresos_mesuales
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco1Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco1Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco2Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco2Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_otra_informacionColumn As DataColumn
            Get
                Return Me.columnfld_otra_informacion
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_con_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_con_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_con_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_con_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_con_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_edadColumn As DataColumn
            Get
                Return Me.columnfld_edad
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civilColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil
            End Get
        End Property
        
        Friend ReadOnly Property fld_edad_garColumn As DataColumn
            Get
                Return Me.columnfld_edad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civil_garColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_prestamosColumn As DataColumn
            Get
                Return Me.columnfld_id_prestamos
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_del_clienteColumn As DataColumn
            Get
                Return Me.columnfld_id_del_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_fecha_entregaColumn As DataColumn
            Get
                Return Me.columnfld_fecha_entrega
            End Get
        End Property
        
        Friend ReadOnly Property fld_fecha_terminaColumn As DataColumn
            Get
                Return Me.columnfld_fecha_termina
            End Get
        End Property
        
        Friend ReadOnly Property fld_cantidad_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_cantidad_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_monto_cuotas_aColumn As DataColumn
            Get
                Return Me.columnfld_monto_cuotas_a
            End Get
        End Property
        
        Friend ReadOnly Property fld_capital_prestamoColumn As DataColumn
            Get
                Return Me.columnfld_capital_prestamo
            End Get
        End Property
        
        Friend ReadOnly Property fld_montoColumn As DataColumn
            Get
                Return Me.columnfld_monto
            End Get
        End Property
        
        Friend ReadOnly Property fld_abonoColumn As DataColumn
            Get
                Return Me.columnfld_abono
            End Get
        End Property
        
        Friend ReadOnly Property fld_balanceColumn As DataColumn
            Get
                Return Me.columnfld_balance
            End Get
        End Property
        
        Friend ReadOnly Property fld_usuarioColumn As DataColumn
            Get
                Return Me.columnfld_usuario
            End Get
        End Property
        
        Friend ReadOnly Property fld_fecha_ultimo_abonoColumn As DataColumn
            Get
                Return Me.columnfld_fecha_ultimo_abono
            End Get
        End Property
        
        Friend ReadOnly Property fld_status_prestamosColumn As DataColumn
            Get
                Return Me.columnfld_status_prestamos
            End Get
        End Property
        
        Friend ReadOnly Property fld_anosColumn As DataColumn
            Get
                Return Me.columnfld_anos
            End Get
        End Property
        
        Friend ReadOnly Property fld_interes_pColumn As DataColumn
            Get
                Return Me.columnfld_interes_p
            End Get
        End Property
        
        Friend ReadOnly Property fld_ck_noColumn As DataColumn
            Get
                Return Me.columnfld_ck_no
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_prestamos_todosRow
            Get
                Return CType(Me.Rows(index),view_prestamos_todosRow)
            End Get
        End Property
        
        Public Event view_prestamos_todosRowChanged As view_prestamos_todosRowChangeEventHandler
        
        Public Event view_prestamos_todosRowChanging As view_prestamos_todosRowChangeEventHandler
        
        Public Event view_prestamos_todosRowDeleted As view_prestamos_todosRowChangeEventHandler
        
        Public Event view_prestamos_todosRowDeleting As view_prestamos_todosRowChangeEventHandler
        
        Public Overloads Sub Addview_prestamos_todosRow(ByVal row As view_prestamos_todosRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addview_prestamos_todosRow( _
                    ByVal fld_FullName As String,  _
                    ByVal fld_apodo As String,  _
                    ByVal fld_Identity As String,  _
                    ByVal fld_Phone As String,  _
                    ByVal fld_Phone2 As String,  _
                    ByVal fld_Address As String,  _
                    ByVal fld_City As String,  _
                    ByVal fld_Status As String,  _
                    ByVal fld_bce As Double,  _
                    ByVal fld_cod_zona As Integer,  _
                    ByVal fld_zona As String,  _
                    ByVal fld_nombre_con As String,  _
                    ByVal fld_apodo_con As String,  _
                    ByVal fld_cedula_con As String,  _
                    ByVal fld_telefono_con As String,  _
                    ByVal fld_celular_con As String,  _
                    ByVal fld_ref_personales_cliente As String,  _
                    ByVal fld_ref_comerciales_cliente As String,  _
                    ByVal fld_nombre_gar As String,  _
                    ByVal fld_apodo_gar As String,  _
                    ByVal fld_cedula_gar As String,  _
                    ByVal fld_telefono_gar As String,  _
                    ByVal fld_celular_gar As String,  _
                    ByVal fld_direccion_gar As String,  _
                    ByVal fld_ciudad_gar As String,  _
                    ByVal fld_ref_personales_gar As String,  _
                    ByVal fld_ref_comerciales_gar As String,  _
                    ByVal fld_ingresos_mesuales As Double,  _
                    ByVal fld_nombre_banco1 As String,  _
                    ByVal fld_cuenta_banco1 As String,  _
                    ByVal fld_nombre_banco2 As String,  _
                    ByVal fld_cuenta_banco2 As String,  _
                    ByVal fld_otra_informacion As String,  _
                    ByVal fld_nombre_con_gar As String,  _
                    ByVal fld_apodo_con_gar As String,  _
                    ByVal fld_cedula_con_gar As String,  _
                    ByVal fld_telefono_con_gar As String,  _
                    ByVal fld_celular_con_gar As String,  _
                    ByVal fld_edad As Integer,  _
                    ByVal fld_estado_civil As String,  _
                    ByVal fld_edad_gar As String,  _
                    ByVal fld_estado_civil_gar As String,  _
                    ByVal fld_id_del_cliente As Integer,  _
                    ByVal fld_fecha_entrega As Date,  _
                    ByVal fld_fecha_termina As Date,  _
                    ByVal fld_cantidad_cuotas As Integer,  _
                    ByVal fld_monto_cuotas_a As Double,  _
                    ByVal fld_capital_prestamo As Double,  _
                    ByVal fld_monto As Double,  _
                    ByVal fld_abono As Double,  _
                    ByVal fld_balance As Double,  _
                    ByVal fld_usuario As String,  _
                    ByVal fld_fecha_ultimo_abono As Date,  _
                    ByVal fld_status_prestamos As String,  _
                    ByVal fld_anos As Double,  _
                    ByVal fld_interes_p As Double,  _
                    ByVal fld_ck_no As String) As view_prestamos_todosRow
            Dim rowview_prestamos_todosRow As view_prestamos_todosRow = CType(Me.NewRow,view_prestamos_todosRow)
            rowview_prestamos_todosRow.ItemArray = New Object() {Nothing, fld_FullName, fld_apodo, fld_Identity, fld_Phone, fld_Phone2, fld_Address, fld_City, fld_Status, fld_bce, fld_cod_zona, fld_zona, fld_nombre_con, fld_apodo_con, fld_cedula_con, fld_telefono_con, fld_celular_con, fld_ref_personales_cliente, fld_ref_comerciales_cliente, fld_nombre_gar, fld_apodo_gar, fld_cedula_gar, fld_telefono_gar, fld_celular_gar, fld_direccion_gar, fld_ciudad_gar, fld_ref_personales_gar, fld_ref_comerciales_gar, fld_ingresos_mesuales, fld_nombre_banco1, fld_cuenta_banco1, fld_nombre_banco2, fld_cuenta_banco2, fld_otra_informacion, fld_nombre_con_gar, fld_apodo_con_gar, fld_cedula_con_gar, fld_telefono_con_gar, fld_celular_con_gar, fld_edad, fld_estado_civil, fld_edad_gar, fld_estado_civil_gar, Nothing, fld_id_del_cliente, fld_fecha_entrega, fld_fecha_termina, fld_cantidad_cuotas, fld_monto_cuotas_a, fld_capital_prestamo, fld_monto, fld_abono, fld_balance, fld_usuario, fld_fecha_ultimo_abono, fld_status_prestamos, fld_anos, fld_interes_p, fld_ck_no}
            Me.Rows.Add(rowview_prestamos_todosRow)
            Return rowview_prestamos_todosRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As view_prestamos_todosDataTable = CType(MyBase.Clone,view_prestamos_todosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New view_prestamos_todosDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnfld_FullName = Me.Columns("fld_FullName")
            Me.columnfld_apodo = Me.Columns("fld_apodo")
            Me.columnfld_Identity = Me.Columns("fld_Identity")
            Me.columnfld_Phone = Me.Columns("fld_Phone")
            Me.columnfld_Phone2 = Me.Columns("fld_Phone2")
            Me.columnfld_Address = Me.Columns("fld_Address")
            Me.columnfld_City = Me.Columns("fld_City")
            Me.columnfld_Status = Me.Columns("fld_Status")
            Me.columnfld_bce = Me.Columns("fld_bce")
            Me.columnfld_cod_zona = Me.Columns("fld_cod_zona")
            Me.columnfld_zona = Me.Columns("fld_zona")
            Me.columnfld_nombre_con = Me.Columns("fld_nombre_con")
            Me.columnfld_apodo_con = Me.Columns("fld_apodo_con")
            Me.columnfld_cedula_con = Me.Columns("fld_cedula_con")
            Me.columnfld_telefono_con = Me.Columns("fld_telefono_con")
            Me.columnfld_celular_con = Me.Columns("fld_celular_con")
            Me.columnfld_ref_personales_cliente = Me.Columns("fld_ref_personales_cliente")
            Me.columnfld_ref_comerciales_cliente = Me.Columns("fld_ref_comerciales_cliente")
            Me.columnfld_nombre_gar = Me.Columns("fld_nombre_gar")
            Me.columnfld_apodo_gar = Me.Columns("fld_apodo_gar")
            Me.columnfld_cedula_gar = Me.Columns("fld_cedula_gar")
            Me.columnfld_telefono_gar = Me.Columns("fld_telefono_gar")
            Me.columnfld_celular_gar = Me.Columns("fld_celular_gar")
            Me.columnfld_direccion_gar = Me.Columns("fld_direccion_gar")
            Me.columnfld_ciudad_gar = Me.Columns("fld_ciudad_gar")
            Me.columnfld_ref_personales_gar = Me.Columns("fld_ref_personales_gar")
            Me.columnfld_ref_comerciales_gar = Me.Columns("fld_ref_comerciales_gar")
            Me.columnfld_ingresos_mesuales = Me.Columns("fld_ingresos_mesuales")
            Me.columnfld_nombre_banco1 = Me.Columns("fld_nombre_banco1")
            Me.columnfld_cuenta_banco1 = Me.Columns("fld_cuenta_banco1")
            Me.columnfld_nombre_banco2 = Me.Columns("fld_nombre_banco2")
            Me.columnfld_cuenta_banco2 = Me.Columns("fld_cuenta_banco2")
            Me.columnfld_otra_informacion = Me.Columns("fld_otra_informacion")
            Me.columnfld_nombre_con_gar = Me.Columns("fld_nombre_con_gar")
            Me.columnfld_apodo_con_gar = Me.Columns("fld_apodo_con_gar")
            Me.columnfld_cedula_con_gar = Me.Columns("fld_cedula_con_gar")
            Me.columnfld_telefono_con_gar = Me.Columns("fld_telefono_con_gar")
            Me.columnfld_celular_con_gar = Me.Columns("fld_celular_con_gar")
            Me.columnfld_edad = Me.Columns("fld_edad")
            Me.columnfld_estado_civil = Me.Columns("fld_estado_civil")
            Me.columnfld_edad_gar = Me.Columns("fld_edad_gar")
            Me.columnfld_estado_civil_gar = Me.Columns("fld_estado_civil_gar")
            Me.columnfld_id_prestamos = Me.Columns("fld_id_prestamos")
            Me.columnfld_id_del_cliente = Me.Columns("fld_id_del_cliente")
            Me.columnfld_fecha_entrega = Me.Columns("fld_fecha_entrega")
            Me.columnfld_fecha_termina = Me.Columns("fld_fecha_termina")
            Me.columnfld_cantidad_cuotas = Me.Columns("fld_cantidad_cuotas")
            Me.columnfld_monto_cuotas_a = Me.Columns("fld_monto_cuotas_a")
            Me.columnfld_capital_prestamo = Me.Columns("fld_capital_prestamo")
            Me.columnfld_monto = Me.Columns("fld_monto")
            Me.columnfld_abono = Me.Columns("fld_abono")
            Me.columnfld_balance = Me.Columns("fld_balance")
            Me.columnfld_usuario = Me.Columns("fld_usuario")
            Me.columnfld_fecha_ultimo_abono = Me.Columns("fld_fecha_ultimo_abono")
            Me.columnfld_status_prestamos = Me.Columns("fld_status_prestamos")
            Me.columnfld_anos = Me.Columns("fld_anos")
            Me.columnfld_interes_p = Me.Columns("fld_interes_p")
            Me.columnfld_ck_no = Me.Columns("fld_ck_no")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnfld_FullName = New DataColumn("fld_FullName", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_FullName)
            Me.columnfld_apodo = New DataColumn("fld_apodo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo)
            Me.columnfld_Identity = New DataColumn("fld_Identity", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Identity)
            Me.columnfld_Phone = New DataColumn("fld_Phone", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone)
            Me.columnfld_Phone2 = New DataColumn("fld_Phone2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone2)
            Me.columnfld_Address = New DataColumn("fld_Address", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Address)
            Me.columnfld_City = New DataColumn("fld_City", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_City)
            Me.columnfld_Status = New DataColumn("fld_Status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Status)
            Me.columnfld_bce = New DataColumn("fld_bce", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce)
            Me.columnfld_cod_zona = New DataColumn("fld_cod_zona", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cod_zona)
            Me.columnfld_zona = New DataColumn("fld_zona", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_zona)
            Me.columnfld_nombre_con = New DataColumn("fld_nombre_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con)
            Me.columnfld_apodo_con = New DataColumn("fld_apodo_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con)
            Me.columnfld_cedula_con = New DataColumn("fld_cedula_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con)
            Me.columnfld_telefono_con = New DataColumn("fld_telefono_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con)
            Me.columnfld_celular_con = New DataColumn("fld_celular_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con)
            Me.columnfld_ref_personales_cliente = New DataColumn("fld_ref_personales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_cliente)
            Me.columnfld_ref_comerciales_cliente = New DataColumn("fld_ref_comerciales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_cliente)
            Me.columnfld_nombre_gar = New DataColumn("fld_nombre_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_gar)
            Me.columnfld_apodo_gar = New DataColumn("fld_apodo_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_gar)
            Me.columnfld_cedula_gar = New DataColumn("fld_cedula_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_gar)
            Me.columnfld_telefono_gar = New DataColumn("fld_telefono_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_gar)
            Me.columnfld_celular_gar = New DataColumn("fld_celular_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_gar)
            Me.columnfld_direccion_gar = New DataColumn("fld_direccion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_direccion_gar)
            Me.columnfld_ciudad_gar = New DataColumn("fld_ciudad_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ciudad_gar)
            Me.columnfld_ref_personales_gar = New DataColumn("fld_ref_personales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_gar)
            Me.columnfld_ref_comerciales_gar = New DataColumn("fld_ref_comerciales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_gar)
            Me.columnfld_ingresos_mesuales = New DataColumn("fld_ingresos_mesuales", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ingresos_mesuales)
            Me.columnfld_nombre_banco1 = New DataColumn("fld_nombre_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco1)
            Me.columnfld_cuenta_banco1 = New DataColumn("fld_cuenta_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco1)
            Me.columnfld_nombre_banco2 = New DataColumn("fld_nombre_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco2)
            Me.columnfld_cuenta_banco2 = New DataColumn("fld_cuenta_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco2)
            Me.columnfld_otra_informacion = New DataColumn("fld_otra_informacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_otra_informacion)
            Me.columnfld_nombre_con_gar = New DataColumn("fld_nombre_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con_gar)
            Me.columnfld_apodo_con_gar = New DataColumn("fld_apodo_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con_gar)
            Me.columnfld_cedula_con_gar = New DataColumn("fld_cedula_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con_gar)
            Me.columnfld_telefono_con_gar = New DataColumn("fld_telefono_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con_gar)
            Me.columnfld_celular_con_gar = New DataColumn("fld_celular_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con_gar)
            Me.columnfld_edad = New DataColumn("fld_edad", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad)
            Me.columnfld_estado_civil = New DataColumn("fld_estado_civil", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil)
            Me.columnfld_edad_gar = New DataColumn("fld_edad_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad_gar)
            Me.columnfld_estado_civil_gar = New DataColumn("fld_estado_civil_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil_gar)
            Me.columnfld_id_prestamos = New DataColumn("fld_id_prestamos", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_prestamos)
            Me.columnfld_id_del_cliente = New DataColumn("fld_id_del_cliente", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_del_cliente)
            Me.columnfld_fecha_entrega = New DataColumn("fld_fecha_entrega", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha_entrega)
            Me.columnfld_fecha_termina = New DataColumn("fld_fecha_termina", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha_termina)
            Me.columnfld_cantidad_cuotas = New DataColumn("fld_cantidad_cuotas", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cantidad_cuotas)
            Me.columnfld_monto_cuotas_a = New DataColumn("fld_monto_cuotas_a", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto_cuotas_a)
            Me.columnfld_capital_prestamo = New DataColumn("fld_capital_prestamo", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_capital_prestamo)
            Me.columnfld_monto = New DataColumn("fld_monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto)
            Me.columnfld_abono = New DataColumn("fld_abono", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_abono)
            Me.columnfld_balance = New DataColumn("fld_balance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_balance)
            Me.columnfld_usuario = New DataColumn("fld_usuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_usuario)
            Me.columnfld_fecha_ultimo_abono = New DataColumn("fld_fecha_ultimo_abono", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha_ultimo_abono)
            Me.columnfld_status_prestamos = New DataColumn("fld_status_prestamos", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_status_prestamos)
            Me.columnfld_anos = New DataColumn("fld_anos", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_anos)
            Me.columnfld_interes_p = New DataColumn("fld_interes_p", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_interes_p)
            Me.columnfld_ck_no = New DataColumn("fld_ck_no", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ck_no)
            Me.columnfld_id.AutoIncrement = true
            Me.columnfld_id_prestamos.AutoIncrement = true
        End Sub
        
        Public Function Newview_prestamos_todosRow() As view_prestamos_todosRow
            Return CType(Me.NewRow,view_prestamos_todosRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New view_prestamos_todosRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(view_prestamos_todosRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_prestamos_todosRowChangedEvent) Is Nothing) Then
                RaiseEvent view_prestamos_todosRowChanged(Me, New view_prestamos_todosRowChangeEvent(CType(e.Row,view_prestamos_todosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_prestamos_todosRowChangingEvent) Is Nothing) Then
                RaiseEvent view_prestamos_todosRowChanging(Me, New view_prestamos_todosRowChangeEvent(CType(e.Row,view_prestamos_todosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_prestamos_todosRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_prestamos_todosRowDeleted(Me, New view_prestamos_todosRowChangeEvent(CType(e.Row,view_prestamos_todosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_prestamos_todosRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_prestamos_todosRowDeleting(Me, New view_prestamos_todosRowChangeEvent(CType(e.Row,view_prestamos_todosRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeview_prestamos_todosRow(ByVal row As view_prestamos_todosRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_prestamos_todosRow
        Inherits DataRow
        
        Private tableview_prestamos_todos As view_prestamos_todosDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_prestamos_todos = CType(Me.Table,view_prestamos_todosDataTable)
        End Sub
        
        Public Property fld_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_idColumn) = value
            End Set
        End Property
        
        Public Property fld_FullName As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_FullNameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_FullNameColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_apodoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_apodoColumn) = value
            End Set
        End Property
        
        Public Property fld_Identity As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_IdentityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_IdentityColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_PhoneColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_PhoneColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_Phone2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_Phone2Column) = value
            End Set
        End Property
        
        Public Property fld_Address As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_AddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_AddressColumn) = value
            End Set
        End Property
        
        Public Property fld_City As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_CityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_CityColumn) = value
            End Set
        End Property
        
        Public Property fld_Status As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_StatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_StatusColumn) = value
            End Set
        End Property
        
        Public Property fld_bce As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_bceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_bceColumn) = value
            End Set
        End Property
        
        Public Property fld_cod_zona As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_cod_zonaColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_cod_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_zona As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_zonaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_nombre_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_nombre_conColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_apodo_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_apodo_conColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_cedula_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_cedula_conColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_telefono_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_telefono_conColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_celular_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_celular_conColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_ref_personales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_ref_personales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_ref_comerciales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_ref_comerciales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_nombre_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_nombre_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_apodo_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_apodo_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_cedula_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_cedula_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_telefono_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_telefono_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_celular_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_celular_garColumn) = value
            End Set
        End Property
        
        Public Property fld_direccion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_direccion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_direccion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ciudad_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_ciudad_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_ciudad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_ref_personales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_ref_personales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_ref_comerciales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_ref_comerciales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ingresos_mesuales As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_ingresos_mesualesColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_ingresos_mesualesColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_nombre_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_nombre_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_cuenta_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_cuenta_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_nombre_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_nombre_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_cuenta_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_cuenta_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_otra_informacion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_otra_informacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_otra_informacionColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_nombre_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_nombre_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_apodo_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_apodo_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_cedula_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_cedula_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_telefono_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_telefono_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_celular_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_celular_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_edad As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_edadColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_edadColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_estado_civilColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_estado_civilColumn) = value
            End Set
        End Property
        
        Public Property fld_edad_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_edad_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_edad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_estado_civil_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_estado_civil_garColumn) = value
            End Set
        End Property
        
        Public Property fld_id_prestamos As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_id_prestamosColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_id_prestamosColumn) = value
            End Set
        End Property
        
        Public Property fld_id_del_cliente As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_id_del_clienteColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_id_del_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha_entrega As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_fecha_entregaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_fecha_entregaColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha_termina As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_fecha_terminaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_fecha_terminaColumn) = value
            End Set
        End Property
        
        Public Property fld_cantidad_cuotas As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_cantidad_cuotasColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_cantidad_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_monto_cuotas_a As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_monto_cuotas_aColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_monto_cuotas_aColumn) = value
            End Set
        End Property
        
        Public Property fld_capital_prestamo As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_capital_prestamoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_capital_prestamoColumn) = value
            End Set
        End Property
        
        Public Property fld_monto As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_montoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_montoColumn) = value
            End Set
        End Property
        
        Public Property fld_abono As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_abonoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_abonoColumn) = value
            End Set
        End Property
        
        Public Property fld_balance As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_balanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_balanceColumn) = value
            End Set
        End Property
        
        Public Property fld_usuario As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_usuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_usuarioColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha_ultimo_abono As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_fecha_ultimo_abonoColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_fecha_ultimo_abonoColumn) = value
            End Set
        End Property
        
        Public Property fld_status_prestamos As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_status_prestamosColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_status_prestamosColumn) = value
            End Set
        End Property
        
        Public Property fld_anos As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_anosColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_anosColumn) = value
            End Set
        End Property
        
        Public Property fld_interes_p As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_interes_pColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_interes_pColumn) = value
            End Set
        End Property
        
        Public Property fld_ck_no As String
            Get
                Try 
                    Return CType(Me(Me.tableview_prestamos_todos.fld_ck_noColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_prestamos_todos.fld_ck_noColumn) = value
            End Set
        End Property
        
        Public Function Isfld_idNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_idColumn)
        End Function
        
        Public Sub Setfld_idNull()
            Me(Me.tableview_prestamos_todos.fld_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_FullNameNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_FullNameColumn)
        End Function
        
        Public Sub Setfld_FullNameNull()
            Me(Me.tableview_prestamos_todos.fld_FullNameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodoNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_apodoColumn)
        End Function
        
        Public Sub Setfld_apodoNull()
            Me(Me.tableview_prestamos_todos.fld_apodoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_IdentityNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_IdentityColumn)
        End Function
        
        Public Sub Setfld_IdentityNull()
            Me(Me.tableview_prestamos_todos.fld_IdentityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_PhoneNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_PhoneColumn)
        End Function
        
        Public Sub Setfld_PhoneNull()
            Me(Me.tableview_prestamos_todos.fld_PhoneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_Phone2Null() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_Phone2Column)
        End Function
        
        Public Sub Setfld_Phone2Null()
            Me(Me.tableview_prestamos_todos.fld_Phone2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_AddressNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_AddressColumn)
        End Function
        
        Public Sub Setfld_AddressNull()
            Me(Me.tableview_prestamos_todos.fld_AddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_CityNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_CityColumn)
        End Function
        
        Public Sub Setfld_CityNull()
            Me(Me.tableview_prestamos_todos.fld_CityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_StatusNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_StatusColumn)
        End Function
        
        Public Sub Setfld_StatusNull()
            Me(Me.tableview_prestamos_todos.fld_StatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bceNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_bceColumn)
        End Function
        
        Public Sub Setfld_bceNull()
            Me(Me.tableview_prestamos_todos.fld_bceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cod_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_cod_zonaColumn)
        End Function
        
        Public Sub Setfld_cod_zonaNull()
            Me(Me.tableview_prestamos_todos.fld_cod_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_zonaColumn)
        End Function
        
        Public Sub Setfld_zonaNull()
            Me(Me.tableview_prestamos_todos.fld_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_conNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_nombre_conColumn)
        End Function
        
        Public Sub Setfld_nombre_conNull()
            Me(Me.tableview_prestamos_todos.fld_nombre_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_conNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_apodo_conColumn)
        End Function
        
        Public Sub Setfld_apodo_conNull()
            Me(Me.tableview_prestamos_todos.fld_apodo_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_conNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_cedula_conColumn)
        End Function
        
        Public Sub Setfld_cedula_conNull()
            Me(Me.tableview_prestamos_todos.fld_cedula_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_conNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_telefono_conColumn)
        End Function
        
        Public Sub Setfld_telefono_conNull()
            Me(Me.tableview_prestamos_todos.fld_telefono_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_conNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_celular_conColumn)
        End Function
        
        Public Sub Setfld_celular_conNull()
            Me(Me.tableview_prestamos_todos.fld_celular_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_ref_personales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_personales_clienteNull()
            Me(Me.tableview_prestamos_todos.fld_ref_personales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_ref_comerciales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_clienteNull()
            Me(Me.tableview_prestamos_todos.fld_ref_comerciales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_garNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_nombre_garColumn)
        End Function
        
        Public Sub Setfld_nombre_garNull()
            Me(Me.tableview_prestamos_todos.fld_nombre_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_garNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_apodo_garColumn)
        End Function
        
        Public Sub Setfld_apodo_garNull()
            Me(Me.tableview_prestamos_todos.fld_apodo_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_garNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_cedula_garColumn)
        End Function
        
        Public Sub Setfld_cedula_garNull()
            Me(Me.tableview_prestamos_todos.fld_cedula_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_garNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_telefono_garColumn)
        End Function
        
        Public Sub Setfld_telefono_garNull()
            Me(Me.tableview_prestamos_todos.fld_telefono_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_garNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_celular_garColumn)
        End Function
        
        Public Sub Setfld_celular_garNull()
            Me(Me.tableview_prestamos_todos.fld_celular_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_direccion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_direccion_garColumn)
        End Function
        
        Public Sub Setfld_direccion_garNull()
            Me(Me.tableview_prestamos_todos.fld_direccion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ciudad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_ciudad_garColumn)
        End Function
        
        Public Sub Setfld_ciudad_garNull()
            Me(Me.tableview_prestamos_todos.fld_ciudad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_ref_personales_garColumn)
        End Function
        
        Public Sub Setfld_ref_personales_garNull()
            Me(Me.tableview_prestamos_todos.fld_ref_personales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_ref_comerciales_garColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_garNull()
            Me(Me.tableview_prestamos_todos.fld_ref_comerciales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ingresos_mesualesNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_ingresos_mesualesColumn)
        End Function
        
        Public Sub Setfld_ingresos_mesualesNull()
            Me(Me.tableview_prestamos_todos.fld_ingresos_mesualesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_nombre_banco1Column)
        End Function
        
        Public Sub Setfld_nombre_banco1Null()
            Me(Me.tableview_prestamos_todos.fld_nombre_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_cuenta_banco1Column)
        End Function
        
        Public Sub Setfld_cuenta_banco1Null()
            Me(Me.tableview_prestamos_todos.fld_cuenta_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_nombre_banco2Column)
        End Function
        
        Public Sub Setfld_nombre_banco2Null()
            Me(Me.tableview_prestamos_todos.fld_nombre_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_cuenta_banco2Column)
        End Function
        
        Public Sub Setfld_cuenta_banco2Null()
            Me(Me.tableview_prestamos_todos.fld_cuenta_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_otra_informacionNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_otra_informacionColumn)
        End Function
        
        Public Sub Setfld_otra_informacionNull()
            Me(Me.tableview_prestamos_todos.fld_otra_informacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_nombre_con_garColumn)
        End Function
        
        Public Sub Setfld_nombre_con_garNull()
            Me(Me.tableview_prestamos_todos.fld_nombre_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_apodo_con_garColumn)
        End Function
        
        Public Sub Setfld_apodo_con_garNull()
            Me(Me.tableview_prestamos_todos.fld_apodo_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_cedula_con_garColumn)
        End Function
        
        Public Sub Setfld_cedula_con_garNull()
            Me(Me.tableview_prestamos_todos.fld_cedula_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_telefono_con_garColumn)
        End Function
        
        Public Sub Setfld_telefono_con_garNull()
            Me(Me.tableview_prestamos_todos.fld_telefono_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_celular_con_garColumn)
        End Function
        
        Public Sub Setfld_celular_con_garNull()
            Me(Me.tableview_prestamos_todos.fld_celular_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edadNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_edadColumn)
        End Function
        
        Public Sub Setfld_edadNull()
            Me(Me.tableview_prestamos_todos.fld_edadColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civilNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_estado_civilColumn)
        End Function
        
        Public Sub Setfld_estado_civilNull()
            Me(Me.tableview_prestamos_todos.fld_estado_civilColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_edad_garColumn)
        End Function
        
        Public Sub Setfld_edad_garNull()
            Me(Me.tableview_prestamos_todos.fld_edad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civil_garNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_estado_civil_garColumn)
        End Function
        
        Public Sub Setfld_estado_civil_garNull()
            Me(Me.tableview_prestamos_todos.fld_estado_civil_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_prestamosNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_id_prestamosColumn)
        End Function
        
        Public Sub Setfld_id_prestamosNull()
            Me(Me.tableview_prestamos_todos.fld_id_prestamosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_del_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_id_del_clienteColumn)
        End Function
        
        Public Sub Setfld_id_del_clienteNull()
            Me(Me.tableview_prestamos_todos.fld_id_del_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fecha_entregaNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_fecha_entregaColumn)
        End Function
        
        Public Sub Setfld_fecha_entregaNull()
            Me(Me.tableview_prestamos_todos.fld_fecha_entregaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fecha_terminaNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_fecha_terminaColumn)
        End Function
        
        Public Sub Setfld_fecha_terminaNull()
            Me(Me.tableview_prestamos_todos.fld_fecha_terminaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cantidad_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_cantidad_cuotasColumn)
        End Function
        
        Public Sub Setfld_cantidad_cuotasNull()
            Me(Me.tableview_prestamos_todos.fld_cantidad_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_monto_cuotas_aNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_monto_cuotas_aColumn)
        End Function
        
        Public Sub Setfld_monto_cuotas_aNull()
            Me(Me.tableview_prestamos_todos.fld_monto_cuotas_aColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_capital_prestamoNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_capital_prestamoColumn)
        End Function
        
        Public Sub Setfld_capital_prestamoNull()
            Me(Me.tableview_prestamos_todos.fld_capital_prestamoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_montoNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_montoColumn)
        End Function
        
        Public Sub Setfld_montoNull()
            Me(Me.tableview_prestamos_todos.fld_montoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_abonoNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_abonoColumn)
        End Function
        
        Public Sub Setfld_abonoNull()
            Me(Me.tableview_prestamos_todos.fld_abonoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_balanceNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_balanceColumn)
        End Function
        
        Public Sub Setfld_balanceNull()
            Me(Me.tableview_prestamos_todos.fld_balanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_usuarioNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_usuarioColumn)
        End Function
        
        Public Sub Setfld_usuarioNull()
            Me(Me.tableview_prestamos_todos.fld_usuarioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fecha_ultimo_abonoNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_fecha_ultimo_abonoColumn)
        End Function
        
        Public Sub Setfld_fecha_ultimo_abonoNull()
            Me(Me.tableview_prestamos_todos.fld_fecha_ultimo_abonoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_status_prestamosNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_status_prestamosColumn)
        End Function
        
        Public Sub Setfld_status_prestamosNull()
            Me(Me.tableview_prestamos_todos.fld_status_prestamosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_anosNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_anosColumn)
        End Function
        
        Public Sub Setfld_anosNull()
            Me(Me.tableview_prestamos_todos.fld_anosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_interes_pNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_interes_pColumn)
        End Function
        
        Public Sub Setfld_interes_pNull()
            Me(Me.tableview_prestamos_todos.fld_interes_pColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ck_noNull() As Boolean
            Return Me.IsNull(Me.tableview_prestamos_todos.fld_ck_noColumn)
        End Function
        
        Public Sub Setfld_ck_noNull()
            Me(Me.tableview_prestamos_todos.fld_ck_noColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_prestamos_todosRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As view_prestamos_todosRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As view_prestamos_todosRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As view_prestamos_todosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_catalogo_ctaDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnFLD_ID As DataColumn
        
        Private columnFLD_CUENTA_NO As DataColumn
        
        Private columnFLD_DESCRIPCION_CTA As DataColumn
        
        Private columnFLD_ORIGEN As DataColumn
        
        Private columnFLD_GRUPO As DataColumn
        
        Private columnFLD_TIPO As DataColumn
        
        Private columnFLD_CTA_CONTROL As DataColumn
        
        Private columnFLD_DEBITO As DataColumn
        
        Private columnFLD_CREDITO As DataColumn
        
        Private columnFLD_BALANCE As DataColumn
        
        Private columnFLD_CREADA As DataColumn
        
        Private columnFLD_FECHA_CREADA As DataColumn
        
        Private columnFLD_STATUS_CTA As DataColumn
        
        Private columnFLD_BCE_ANTERIOR As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_catalogo_cta")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property FLD_IDColumn As DataColumn
            Get
                Return Me.columnFLD_ID
            End Get
        End Property
        
        Friend ReadOnly Property FLD_CUENTA_NOColumn As DataColumn
            Get
                Return Me.columnFLD_CUENTA_NO
            End Get
        End Property
        
        Friend ReadOnly Property FLD_DESCRIPCION_CTAColumn As DataColumn
            Get
                Return Me.columnFLD_DESCRIPCION_CTA
            End Get
        End Property
        
        Friend ReadOnly Property FLD_ORIGENColumn As DataColumn
            Get
                Return Me.columnFLD_ORIGEN
            End Get
        End Property
        
        Friend ReadOnly Property FLD_GRUPOColumn As DataColumn
            Get
                Return Me.columnFLD_GRUPO
            End Get
        End Property
        
        Friend ReadOnly Property FLD_TIPOColumn As DataColumn
            Get
                Return Me.columnFLD_TIPO
            End Get
        End Property
        
        Friend ReadOnly Property FLD_CTA_CONTROLColumn As DataColumn
            Get
                Return Me.columnFLD_CTA_CONTROL
            End Get
        End Property
        
        Friend ReadOnly Property FLD_DEBITOColumn As DataColumn
            Get
                Return Me.columnFLD_DEBITO
            End Get
        End Property
        
        Friend ReadOnly Property FLD_CREDITOColumn As DataColumn
            Get
                Return Me.columnFLD_CREDITO
            End Get
        End Property
        
        Friend ReadOnly Property FLD_BALANCEColumn As DataColumn
            Get
                Return Me.columnFLD_BALANCE
            End Get
        End Property
        
        Friend ReadOnly Property FLD_CREADAColumn As DataColumn
            Get
                Return Me.columnFLD_CREADA
            End Get
        End Property
        
        Friend ReadOnly Property FLD_FECHA_CREADAColumn As DataColumn
            Get
                Return Me.columnFLD_FECHA_CREADA
            End Get
        End Property
        
        Friend ReadOnly Property FLD_STATUS_CTAColumn As DataColumn
            Get
                Return Me.columnFLD_STATUS_CTA
            End Get
        End Property
        
        Friend ReadOnly Property FLD_BCE_ANTERIORColumn As DataColumn
            Get
                Return Me.columnFLD_BCE_ANTERIOR
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_catalogo_ctaRow
            Get
                Return CType(Me.Rows(index),tbl_catalogo_ctaRow)
            End Get
        End Property
        
        Public Event tbl_catalogo_ctaRowChanged As tbl_catalogo_ctaRowChangeEventHandler
        
        Public Event tbl_catalogo_ctaRowChanging As tbl_catalogo_ctaRowChangeEventHandler
        
        Public Event tbl_catalogo_ctaRowDeleted As tbl_catalogo_ctaRowChangeEventHandler
        
        Public Event tbl_catalogo_ctaRowDeleting As tbl_catalogo_ctaRowChangeEventHandler
        
        Public Overloads Sub Addtbl_catalogo_ctaRow(ByVal row As tbl_catalogo_ctaRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_catalogo_ctaRow(ByVal FLD_CUENTA_NO As String, ByVal FLD_DESCRIPCION_CTA As String, ByVal FLD_ORIGEN As String, ByVal FLD_GRUPO As String, ByVal FLD_TIPO As String, ByVal FLD_CTA_CONTROL As String, ByVal FLD_DEBITO As Double, ByVal FLD_CREDITO As Double, ByVal FLD_BALANCE As Double, ByVal FLD_CREADA As String, ByVal FLD_FECHA_CREADA As Date, ByVal FLD_STATUS_CTA As String, ByVal FLD_BCE_ANTERIOR As Double) As tbl_catalogo_ctaRow
            Dim rowtbl_catalogo_ctaRow As tbl_catalogo_ctaRow = CType(Me.NewRow,tbl_catalogo_ctaRow)
            rowtbl_catalogo_ctaRow.ItemArray = New Object() {Nothing, FLD_CUENTA_NO, FLD_DESCRIPCION_CTA, FLD_ORIGEN, FLD_GRUPO, FLD_TIPO, FLD_CTA_CONTROL, FLD_DEBITO, FLD_CREDITO, FLD_BALANCE, FLD_CREADA, FLD_FECHA_CREADA, FLD_STATUS_CTA, FLD_BCE_ANTERIOR}
            Me.Rows.Add(rowtbl_catalogo_ctaRow)
            Return rowtbl_catalogo_ctaRow
        End Function
        
        Public Function FindByFLD_ID(ByVal FLD_ID As Integer) As tbl_catalogo_ctaRow
            Return CType(Me.Rows.Find(New Object() {FLD_ID}),tbl_catalogo_ctaRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_catalogo_ctaDataTable = CType(MyBase.Clone,tbl_catalogo_ctaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_catalogo_ctaDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnFLD_ID = Me.Columns("FLD_ID")
            Me.columnFLD_CUENTA_NO = Me.Columns("FLD_CUENTA_NO")
            Me.columnFLD_DESCRIPCION_CTA = Me.Columns("FLD_DESCRIPCION_CTA")
            Me.columnFLD_ORIGEN = Me.Columns("FLD_ORIGEN")
            Me.columnFLD_GRUPO = Me.Columns("FLD_GRUPO")
            Me.columnFLD_TIPO = Me.Columns("FLD_TIPO")
            Me.columnFLD_CTA_CONTROL = Me.Columns("FLD_CTA_CONTROL")
            Me.columnFLD_DEBITO = Me.Columns("FLD_DEBITO")
            Me.columnFLD_CREDITO = Me.Columns("FLD_CREDITO")
            Me.columnFLD_BALANCE = Me.Columns("FLD_BALANCE")
            Me.columnFLD_CREADA = Me.Columns("FLD_CREADA")
            Me.columnFLD_FECHA_CREADA = Me.Columns("FLD_FECHA_CREADA")
            Me.columnFLD_STATUS_CTA = Me.Columns("FLD_STATUS_CTA")
            Me.columnFLD_BCE_ANTERIOR = Me.Columns("FLD_BCE_ANTERIOR")
        End Sub
        
        Private Sub InitClass()
            Me.columnFLD_ID = New DataColumn("FLD_ID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFLD_ID)
            Me.columnFLD_CUENTA_NO = New DataColumn("FLD_CUENTA_NO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFLD_CUENTA_NO)
            Me.columnFLD_DESCRIPCION_CTA = New DataColumn("FLD_DESCRIPCION_CTA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFLD_DESCRIPCION_CTA)
            Me.columnFLD_ORIGEN = New DataColumn("FLD_ORIGEN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFLD_ORIGEN)
            Me.columnFLD_GRUPO = New DataColumn("FLD_GRUPO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFLD_GRUPO)
            Me.columnFLD_TIPO = New DataColumn("FLD_TIPO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFLD_TIPO)
            Me.columnFLD_CTA_CONTROL = New DataColumn("FLD_CTA_CONTROL", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFLD_CTA_CONTROL)
            Me.columnFLD_DEBITO = New DataColumn("FLD_DEBITO", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFLD_DEBITO)
            Me.columnFLD_CREDITO = New DataColumn("FLD_CREDITO", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFLD_CREDITO)
            Me.columnFLD_BALANCE = New DataColumn("FLD_BALANCE", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFLD_BALANCE)
            Me.columnFLD_CREADA = New DataColumn("FLD_CREADA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFLD_CREADA)
            Me.columnFLD_FECHA_CREADA = New DataColumn("FLD_FECHA_CREADA", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFLD_FECHA_CREADA)
            Me.columnFLD_STATUS_CTA = New DataColumn("FLD_STATUS_CTA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFLD_STATUS_CTA)
            Me.columnFLD_BCE_ANTERIOR = New DataColumn("FLD_BCE_ANTERIOR", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFLD_BCE_ANTERIOR)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey1", New DataColumn() {Me.columnFLD_ID}, true))
            Me.columnFLD_ID.AutoIncrement = true
            Me.columnFLD_ID.AllowDBNull = false
            Me.columnFLD_ID.Unique = true
        End Sub
        
        Public Function Newtbl_catalogo_ctaRow() As tbl_catalogo_ctaRow
            Return CType(Me.NewRow,tbl_catalogo_ctaRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_catalogo_ctaRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_catalogo_ctaRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_catalogo_ctaRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_catalogo_ctaRowChanged(Me, New tbl_catalogo_ctaRowChangeEvent(CType(e.Row,tbl_catalogo_ctaRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_catalogo_ctaRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_catalogo_ctaRowChanging(Me, New tbl_catalogo_ctaRowChangeEvent(CType(e.Row,tbl_catalogo_ctaRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_catalogo_ctaRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_catalogo_ctaRowDeleted(Me, New tbl_catalogo_ctaRowChangeEvent(CType(e.Row,tbl_catalogo_ctaRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_catalogo_ctaRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_catalogo_ctaRowDeleting(Me, New tbl_catalogo_ctaRowChangeEvent(CType(e.Row,tbl_catalogo_ctaRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_catalogo_ctaRow(ByVal row As tbl_catalogo_ctaRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_catalogo_ctaRow
        Inherits DataRow
        
        Private tabletbl_catalogo_cta As tbl_catalogo_ctaDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_catalogo_cta = CType(Me.Table,tbl_catalogo_ctaDataTable)
        End Sub
        
        Public Property FLD_ID As Integer
            Get
                Return CType(Me(Me.tabletbl_catalogo_cta.FLD_IDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_catalogo_cta.FLD_IDColumn) = value
            End Set
        End Property
        
        Public Property FLD_CUENTA_NO As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo_cta.FLD_CUENTA_NOColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo_cta.FLD_CUENTA_NOColumn) = value
            End Set
        End Property
        
        Public Property FLD_DESCRIPCION_CTA As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo_cta.FLD_DESCRIPCION_CTAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo_cta.FLD_DESCRIPCION_CTAColumn) = value
            End Set
        End Property
        
        Public Property FLD_ORIGEN As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo_cta.FLD_ORIGENColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo_cta.FLD_ORIGENColumn) = value
            End Set
        End Property
        
        Public Property FLD_GRUPO As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo_cta.FLD_GRUPOColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo_cta.FLD_GRUPOColumn) = value
            End Set
        End Property
        
        Public Property FLD_TIPO As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo_cta.FLD_TIPOColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo_cta.FLD_TIPOColumn) = value
            End Set
        End Property
        
        Public Property FLD_CTA_CONTROL As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo_cta.FLD_CTA_CONTROLColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo_cta.FLD_CTA_CONTROLColumn) = value
            End Set
        End Property
        
        Public Property FLD_DEBITO As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo_cta.FLD_DEBITOColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo_cta.FLD_DEBITOColumn) = value
            End Set
        End Property
        
        Public Property FLD_CREDITO As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo_cta.FLD_CREDITOColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo_cta.FLD_CREDITOColumn) = value
            End Set
        End Property
        
        Public Property FLD_BALANCE As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo_cta.FLD_BALANCEColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo_cta.FLD_BALANCEColumn) = value
            End Set
        End Property
        
        Public Property FLD_CREADA As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo_cta.FLD_CREADAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo_cta.FLD_CREADAColumn) = value
            End Set
        End Property
        
        Public Property FLD_FECHA_CREADA As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo_cta.FLD_FECHA_CREADAColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo_cta.FLD_FECHA_CREADAColumn) = value
            End Set
        End Property
        
        Public Property FLD_STATUS_CTA As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo_cta.FLD_STATUS_CTAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo_cta.FLD_STATUS_CTAColumn) = value
            End Set
        End Property
        
        Public Property FLD_BCE_ANTERIOR As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo_cta.FLD_BCE_ANTERIORColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo_cta.FLD_BCE_ANTERIORColumn) = value
            End Set
        End Property
        
        Public Function IsFLD_CUENTA_NONull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo_cta.FLD_CUENTA_NOColumn)
        End Function
        
        Public Sub SetFLD_CUENTA_NONull()
            Me(Me.tabletbl_catalogo_cta.FLD_CUENTA_NOColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFLD_DESCRIPCION_CTANull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo_cta.FLD_DESCRIPCION_CTAColumn)
        End Function
        
        Public Sub SetFLD_DESCRIPCION_CTANull()
            Me(Me.tabletbl_catalogo_cta.FLD_DESCRIPCION_CTAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFLD_ORIGENNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo_cta.FLD_ORIGENColumn)
        End Function
        
        Public Sub SetFLD_ORIGENNull()
            Me(Me.tabletbl_catalogo_cta.FLD_ORIGENColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFLD_GRUPONull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo_cta.FLD_GRUPOColumn)
        End Function
        
        Public Sub SetFLD_GRUPONull()
            Me(Me.tabletbl_catalogo_cta.FLD_GRUPOColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFLD_TIPONull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo_cta.FLD_TIPOColumn)
        End Function
        
        Public Sub SetFLD_TIPONull()
            Me(Me.tabletbl_catalogo_cta.FLD_TIPOColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFLD_CTA_CONTROLNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo_cta.FLD_CTA_CONTROLColumn)
        End Function
        
        Public Sub SetFLD_CTA_CONTROLNull()
            Me(Me.tabletbl_catalogo_cta.FLD_CTA_CONTROLColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFLD_DEBITONull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo_cta.FLD_DEBITOColumn)
        End Function
        
        Public Sub SetFLD_DEBITONull()
            Me(Me.tabletbl_catalogo_cta.FLD_DEBITOColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFLD_CREDITONull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo_cta.FLD_CREDITOColumn)
        End Function
        
        Public Sub SetFLD_CREDITONull()
            Me(Me.tabletbl_catalogo_cta.FLD_CREDITOColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFLD_BALANCENull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo_cta.FLD_BALANCEColumn)
        End Function
        
        Public Sub SetFLD_BALANCENull()
            Me(Me.tabletbl_catalogo_cta.FLD_BALANCEColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFLD_CREADANull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo_cta.FLD_CREADAColumn)
        End Function
        
        Public Sub SetFLD_CREADANull()
            Me(Me.tabletbl_catalogo_cta.FLD_CREADAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFLD_FECHA_CREADANull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo_cta.FLD_FECHA_CREADAColumn)
        End Function
        
        Public Sub SetFLD_FECHA_CREADANull()
            Me(Me.tabletbl_catalogo_cta.FLD_FECHA_CREADAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFLD_STATUS_CTANull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo_cta.FLD_STATUS_CTAColumn)
        End Function
        
        Public Sub SetFLD_STATUS_CTANull()
            Me(Me.tabletbl_catalogo_cta.FLD_STATUS_CTAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFLD_BCE_ANTERIORNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo_cta.FLD_BCE_ANTERIORColumn)
        End Function
        
        Public Sub SetFLD_BCE_ANTERIORNull()
            Me(Me.tabletbl_catalogo_cta.FLD_BCE_ANTERIORColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_catalogo_ctaRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_catalogo_ctaRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_catalogo_ctaRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_catalogo_ctaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_chequesDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id_doc As DataColumn
        
        Private columnfld_ck_no As DataColumn
        
        Private columnfld_id_banco As DataColumn
        
        Private columnfld_fecha As DataColumn
        
        Private columnfld_concepto As DataColumn
        
        Private columnfld_monto As DataColumn
        
        Private columnfld_estado As DataColumn
        
        Private columnfld_cta_axu_id As DataColumn
        
        Private columnfld_beneficiario As DataColumn
        
        Private columnfld_monto_letras As DataColumn
        
        Private columnfld_monto_aux As DataColumn
        
        Private columnfld_id_entrada As DataColumn
        
        Private columnfld_transito As DataColumn
        
        Private columnfld_detalle_colecturia As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_cheques")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_docColumn As DataColumn
            Get
                Return Me.columnfld_id_doc
            End Get
        End Property
        
        Friend ReadOnly Property fld_ck_noColumn As DataColumn
            Get
                Return Me.columnfld_ck_no
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_bancoColumn As DataColumn
            Get
                Return Me.columnfld_id_banco
            End Get
        End Property
        
        Friend ReadOnly Property fld_fechaColumn As DataColumn
            Get
                Return Me.columnfld_fecha
            End Get
        End Property
        
        Friend ReadOnly Property fld_conceptoColumn As DataColumn
            Get
                Return Me.columnfld_concepto
            End Get
        End Property
        
        Friend ReadOnly Property fld_montoColumn As DataColumn
            Get
                Return Me.columnfld_monto
            End Get
        End Property
        
        Friend ReadOnly Property fld_estadoColumn As DataColumn
            Get
                Return Me.columnfld_estado
            End Get
        End Property
        
        Friend ReadOnly Property fld_cta_axu_idColumn As DataColumn
            Get
                Return Me.columnfld_cta_axu_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_beneficiarioColumn As DataColumn
            Get
                Return Me.columnfld_beneficiario
            End Get
        End Property
        
        Friend ReadOnly Property fld_monto_letrasColumn As DataColumn
            Get
                Return Me.columnfld_monto_letras
            End Get
        End Property
        
        Friend ReadOnly Property fld_monto_auxColumn As DataColumn
            Get
                Return Me.columnfld_monto_aux
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_entradaColumn As DataColumn
            Get
                Return Me.columnfld_id_entrada
            End Get
        End Property
        
        Friend ReadOnly Property fld_transitoColumn As DataColumn
            Get
                Return Me.columnfld_transito
            End Get
        End Property
        
        Friend ReadOnly Property fld_detalle_colecturiaColumn As DataColumn
            Get
                Return Me.columnfld_detalle_colecturia
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_chequesRow
            Get
                Return CType(Me.Rows(index),tbl_chequesRow)
            End Get
        End Property
        
        Public Event tbl_chequesRowChanged As tbl_chequesRowChangeEventHandler
        
        Public Event tbl_chequesRowChanging As tbl_chequesRowChangeEventHandler
        
        Public Event tbl_chequesRowDeleted As tbl_chequesRowChangeEventHandler
        
        Public Event tbl_chequesRowDeleting As tbl_chequesRowChangeEventHandler
        
        Public Overloads Sub Addtbl_chequesRow(ByVal row As tbl_chequesRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_chequesRow(ByVal fld_ck_no As Integer, ByVal fld_id_banco As String, ByVal fld_fecha As Date, ByVal fld_concepto As String, ByVal fld_monto As Double, ByVal fld_estado As String, ByVal fld_cta_axu_id As Integer, ByVal fld_beneficiario As String, ByVal fld_monto_letras As String, ByVal fld_monto_aux As Double, ByVal fld_id_entrada As Integer, ByVal fld_transito As String, ByVal fld_detalle_colecturia As String) As tbl_chequesRow
            Dim rowtbl_chequesRow As tbl_chequesRow = CType(Me.NewRow,tbl_chequesRow)
            rowtbl_chequesRow.ItemArray = New Object() {Nothing, fld_ck_no, fld_id_banco, fld_fecha, fld_concepto, fld_monto, fld_estado, fld_cta_axu_id, fld_beneficiario, fld_monto_letras, fld_monto_aux, fld_id_entrada, fld_transito, fld_detalle_colecturia}
            Me.Rows.Add(rowtbl_chequesRow)
            Return rowtbl_chequesRow
        End Function
        
        Public Function FindByfld_id_doc(ByVal fld_id_doc As Integer) As tbl_chequesRow
            Return CType(Me.Rows.Find(New Object() {fld_id_doc}),tbl_chequesRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_chequesDataTable = CType(MyBase.Clone,tbl_chequesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_chequesDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id_doc = Me.Columns("fld_id_doc")
            Me.columnfld_ck_no = Me.Columns("fld_ck_no")
            Me.columnfld_id_banco = Me.Columns("fld_id_banco")
            Me.columnfld_fecha = Me.Columns("fld_fecha")
            Me.columnfld_concepto = Me.Columns("fld_concepto")
            Me.columnfld_monto = Me.Columns("fld_monto")
            Me.columnfld_estado = Me.Columns("fld_estado")
            Me.columnfld_cta_axu_id = Me.Columns("fld_cta_axu_id")
            Me.columnfld_beneficiario = Me.Columns("fld_beneficiario")
            Me.columnfld_monto_letras = Me.Columns("fld_monto_letras")
            Me.columnfld_monto_aux = Me.Columns("fld_monto_aux")
            Me.columnfld_id_entrada = Me.Columns("fld_id_entrada")
            Me.columnfld_transito = Me.Columns("fld_transito")
            Me.columnfld_detalle_colecturia = Me.Columns("fld_detalle_colecturia")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id_doc = New DataColumn("fld_id_doc", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_doc)
            Me.columnfld_ck_no = New DataColumn("fld_ck_no", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ck_no)
            Me.columnfld_id_banco = New DataColumn("fld_id_banco", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_banco)
            Me.columnfld_fecha = New DataColumn("fld_fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha)
            Me.columnfld_concepto = New DataColumn("fld_concepto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_concepto)
            Me.columnfld_monto = New DataColumn("fld_monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto)
            Me.columnfld_estado = New DataColumn("fld_estado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado)
            Me.columnfld_cta_axu_id = New DataColumn("fld_cta_axu_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cta_axu_id)
            Me.columnfld_beneficiario = New DataColumn("fld_beneficiario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_beneficiario)
            Me.columnfld_monto_letras = New DataColumn("fld_monto_letras", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto_letras)
            Me.columnfld_monto_aux = New DataColumn("fld_monto_aux", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto_aux)
            Me.columnfld_id_entrada = New DataColumn("fld_id_entrada", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_entrada)
            Me.columnfld_transito = New DataColumn("fld_transito", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_transito)
            Me.columnfld_detalle_colecturia = New DataColumn("fld_detalle_colecturia", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_detalle_colecturia)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey4", New DataColumn() {Me.columnfld_id_doc}, true))
            Me.columnfld_id_doc.AutoIncrement = true
            Me.columnfld_id_doc.AllowDBNull = false
            Me.columnfld_id_doc.Unique = true
        End Sub
        
        Public Function Newtbl_chequesRow() As tbl_chequesRow
            Return CType(Me.NewRow,tbl_chequesRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_chequesRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_chequesRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_chequesRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_chequesRowChanged(Me, New tbl_chequesRowChangeEvent(CType(e.Row,tbl_chequesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_chequesRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_chequesRowChanging(Me, New tbl_chequesRowChangeEvent(CType(e.Row,tbl_chequesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_chequesRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_chequesRowDeleted(Me, New tbl_chequesRowChangeEvent(CType(e.Row,tbl_chequesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_chequesRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_chequesRowDeleting(Me, New tbl_chequesRowChangeEvent(CType(e.Row,tbl_chequesRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_chequesRow(ByVal row As tbl_chequesRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_chequesRow
        Inherits DataRow
        
        Private tabletbl_cheques As tbl_chequesDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_cheques = CType(Me.Table,tbl_chequesDataTable)
        End Sub
        
        Public Property fld_id_doc As Integer
            Get
                Return CType(Me(Me.tabletbl_cheques.fld_id_docColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_cheques.fld_id_docColumn) = value
            End Set
        End Property
        
        Public Property fld_ck_no As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cheques.fld_ck_noColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cheques.fld_ck_noColumn) = value
            End Set
        End Property
        
        Public Property fld_id_banco As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cheques.fld_id_bancoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cheques.fld_id_bancoColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cheques.fld_fechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cheques.fld_fechaColumn) = value
            End Set
        End Property
        
        Public Property fld_concepto As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cheques.fld_conceptoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cheques.fld_conceptoColumn) = value
            End Set
        End Property
        
        Public Property fld_monto As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cheques.fld_montoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cheques.fld_montoColumn) = value
            End Set
        End Property
        
        Public Property fld_estado As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cheques.fld_estadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cheques.fld_estadoColumn) = value
            End Set
        End Property
        
        Public Property fld_cta_axu_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cheques.fld_cta_axu_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cheques.fld_cta_axu_idColumn) = value
            End Set
        End Property
        
        Public Property fld_beneficiario As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cheques.fld_beneficiarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cheques.fld_beneficiarioColumn) = value
            End Set
        End Property
        
        Public Property fld_monto_letras As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cheques.fld_monto_letrasColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cheques.fld_monto_letrasColumn) = value
            End Set
        End Property
        
        Public Property fld_monto_aux As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cheques.fld_monto_auxColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cheques.fld_monto_auxColumn) = value
            End Set
        End Property
        
        Public Property fld_id_entrada As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cheques.fld_id_entradaColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cheques.fld_id_entradaColumn) = value
            End Set
        End Property
        
        Public Property fld_transito As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cheques.fld_transitoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cheques.fld_transitoColumn) = value
            End Set
        End Property
        
        Public Property fld_detalle_colecturia As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cheques.fld_detalle_colecturiaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cheques.fld_detalle_colecturiaColumn) = value
            End Set
        End Property
        
        Public Function Isfld_ck_noNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cheques.fld_ck_noColumn)
        End Function
        
        Public Sub Setfld_ck_noNull()
            Me(Me.tabletbl_cheques.fld_ck_noColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_bancoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cheques.fld_id_bancoColumn)
        End Function
        
        Public Sub Setfld_id_bancoNull()
            Me(Me.tabletbl_cheques.fld_id_bancoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fechaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cheques.fld_fechaColumn)
        End Function
        
        Public Sub Setfld_fechaNull()
            Me(Me.tabletbl_cheques.fld_fechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_conceptoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cheques.fld_conceptoColumn)
        End Function
        
        Public Sub Setfld_conceptoNull()
            Me(Me.tabletbl_cheques.fld_conceptoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_montoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cheques.fld_montoColumn)
        End Function
        
        Public Sub Setfld_montoNull()
            Me(Me.tabletbl_cheques.fld_montoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cheques.fld_estadoColumn)
        End Function
        
        Public Sub Setfld_estadoNull()
            Me(Me.tabletbl_cheques.fld_estadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cta_axu_idNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cheques.fld_cta_axu_idColumn)
        End Function
        
        Public Sub Setfld_cta_axu_idNull()
            Me(Me.tabletbl_cheques.fld_cta_axu_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_beneficiarioNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cheques.fld_beneficiarioColumn)
        End Function
        
        Public Sub Setfld_beneficiarioNull()
            Me(Me.tabletbl_cheques.fld_beneficiarioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_monto_letrasNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cheques.fld_monto_letrasColumn)
        End Function
        
        Public Sub Setfld_monto_letrasNull()
            Me(Me.tabletbl_cheques.fld_monto_letrasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_monto_auxNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cheques.fld_monto_auxColumn)
        End Function
        
        Public Sub Setfld_monto_auxNull()
            Me(Me.tabletbl_cheques.fld_monto_auxColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_entradaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cheques.fld_id_entradaColumn)
        End Function
        
        Public Sub Setfld_id_entradaNull()
            Me(Me.tabletbl_cheques.fld_id_entradaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_transitoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cheques.fld_transitoColumn)
        End Function
        
        Public Sub Setfld_transitoNull()
            Me(Me.tabletbl_cheques.fld_transitoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_detalle_colecturiaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cheques.fld_detalle_colecturiaColumn)
        End Function
        
        Public Sub Setfld_detalle_colecturiaNull()
            Me(Me.tabletbl_cheques.fld_detalle_colecturiaColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_chequesRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_chequesRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_chequesRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_chequesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_depositoDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id_doc As DataColumn
        
        Private columnfld_id_banco As DataColumn
        
        Private columnfld_fecha As DataColumn
        
        Private columnfld_descripcion As DataColumn
        
        Private columnfld_monto As DataColumn
        
        Private columnfld_estado As DataColumn
        
        Private columnfld_transito As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_deposito")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_docColumn As DataColumn
            Get
                Return Me.columnfld_id_doc
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_bancoColumn As DataColumn
            Get
                Return Me.columnfld_id_banco
            End Get
        End Property
        
        Friend ReadOnly Property fld_fechaColumn As DataColumn
            Get
                Return Me.columnfld_fecha
            End Get
        End Property
        
        Friend ReadOnly Property fld_descripcionColumn As DataColumn
            Get
                Return Me.columnfld_descripcion
            End Get
        End Property
        
        Friend ReadOnly Property fld_montoColumn As DataColumn
            Get
                Return Me.columnfld_monto
            End Get
        End Property
        
        Friend ReadOnly Property fld_estadoColumn As DataColumn
            Get
                Return Me.columnfld_estado
            End Get
        End Property
        
        Friend ReadOnly Property fld_transitoColumn As DataColumn
            Get
                Return Me.columnfld_transito
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_depositoRow
            Get
                Return CType(Me.Rows(index),tbl_depositoRow)
            End Get
        End Property
        
        Public Event tbl_depositoRowChanged As tbl_depositoRowChangeEventHandler
        
        Public Event tbl_depositoRowChanging As tbl_depositoRowChangeEventHandler
        
        Public Event tbl_depositoRowDeleted As tbl_depositoRowChangeEventHandler
        
        Public Event tbl_depositoRowDeleting As tbl_depositoRowChangeEventHandler
        
        Public Overloads Sub Addtbl_depositoRow(ByVal row As tbl_depositoRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_depositoRow(ByVal fld_id_banco As String, ByVal fld_fecha As Date, ByVal fld_descripcion As String, ByVal fld_monto As Double, ByVal fld_estado As String, ByVal fld_transito As String) As tbl_depositoRow
            Dim rowtbl_depositoRow As tbl_depositoRow = CType(Me.NewRow,tbl_depositoRow)
            rowtbl_depositoRow.ItemArray = New Object() {Nothing, fld_id_banco, fld_fecha, fld_descripcion, fld_monto, fld_estado, fld_transito}
            Me.Rows.Add(rowtbl_depositoRow)
            Return rowtbl_depositoRow
        End Function
        
        Public Function FindByfld_id_doc(ByVal fld_id_doc As Integer) As tbl_depositoRow
            Return CType(Me.Rows.Find(New Object() {fld_id_doc}),tbl_depositoRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_depositoDataTable = CType(MyBase.Clone,tbl_depositoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_depositoDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id_doc = Me.Columns("fld_id_doc")
            Me.columnfld_id_banco = Me.Columns("fld_id_banco")
            Me.columnfld_fecha = Me.Columns("fld_fecha")
            Me.columnfld_descripcion = Me.Columns("fld_descripcion")
            Me.columnfld_monto = Me.Columns("fld_monto")
            Me.columnfld_estado = Me.Columns("fld_estado")
            Me.columnfld_transito = Me.Columns("fld_transito")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id_doc = New DataColumn("fld_id_doc", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_doc)
            Me.columnfld_id_banco = New DataColumn("fld_id_banco", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_banco)
            Me.columnfld_fecha = New DataColumn("fld_fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha)
            Me.columnfld_descripcion = New DataColumn("fld_descripcion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_descripcion)
            Me.columnfld_monto = New DataColumn("fld_monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto)
            Me.columnfld_estado = New DataColumn("fld_estado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado)
            Me.columnfld_transito = New DataColumn("fld_transito", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_transito)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey6", New DataColumn() {Me.columnfld_id_doc}, true))
            Me.columnfld_id_doc.AutoIncrement = true
            Me.columnfld_id_doc.AllowDBNull = false
            Me.columnfld_id_doc.Unique = true
        End Sub
        
        Public Function Newtbl_depositoRow() As tbl_depositoRow
            Return CType(Me.NewRow,tbl_depositoRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_depositoRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_depositoRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_depositoRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_depositoRowChanged(Me, New tbl_depositoRowChangeEvent(CType(e.Row,tbl_depositoRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_depositoRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_depositoRowChanging(Me, New tbl_depositoRowChangeEvent(CType(e.Row,tbl_depositoRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_depositoRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_depositoRowDeleted(Me, New tbl_depositoRowChangeEvent(CType(e.Row,tbl_depositoRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_depositoRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_depositoRowDeleting(Me, New tbl_depositoRowChangeEvent(CType(e.Row,tbl_depositoRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_depositoRow(ByVal row As tbl_depositoRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_depositoRow
        Inherits DataRow
        
        Private tabletbl_deposito As tbl_depositoDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_deposito = CType(Me.Table,tbl_depositoDataTable)
        End Sub
        
        Public Property fld_id_doc As Integer
            Get
                Return CType(Me(Me.tabletbl_deposito.fld_id_docColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_deposito.fld_id_docColumn) = value
            End Set
        End Property
        
        Public Property fld_id_banco As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_deposito.fld_id_bancoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_deposito.fld_id_bancoColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_deposito.fld_fechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_deposito.fld_fechaColumn) = value
            End Set
        End Property
        
        Public Property fld_descripcion As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_deposito.fld_descripcionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_deposito.fld_descripcionColumn) = value
            End Set
        End Property
        
        Public Property fld_monto As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_deposito.fld_montoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_deposito.fld_montoColumn) = value
            End Set
        End Property
        
        Public Property fld_estado As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_deposito.fld_estadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_deposito.fld_estadoColumn) = value
            End Set
        End Property
        
        Public Property fld_transito As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_deposito.fld_transitoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_deposito.fld_transitoColumn) = value
            End Set
        End Property
        
        Public Function Isfld_id_bancoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_deposito.fld_id_bancoColumn)
        End Function
        
        Public Sub Setfld_id_bancoNull()
            Me(Me.tabletbl_deposito.fld_id_bancoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fechaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_deposito.fld_fechaColumn)
        End Function
        
        Public Sub Setfld_fechaNull()
            Me(Me.tabletbl_deposito.fld_fechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_descripcionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_deposito.fld_descripcionColumn)
        End Function
        
        Public Sub Setfld_descripcionNull()
            Me(Me.tabletbl_deposito.fld_descripcionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_montoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_deposito.fld_montoColumn)
        End Function
        
        Public Sub Setfld_montoNull()
            Me(Me.tabletbl_deposito.fld_montoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_deposito.fld_estadoColumn)
        End Function
        
        Public Sub Setfld_estadoNull()
            Me(Me.tabletbl_deposito.fld_estadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_transitoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_deposito.fld_transitoColumn)
        End Function
        
        Public Sub Setfld_transitoNull()
            Me(Me.tabletbl_deposito.fld_transitoColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_depositoRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_depositoRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_depositoRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_depositoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_profiledocumentDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfldCompanyID As DataColumn
        
        Private columnfldCompany As DataColumn
        
        Private columnfldAddress As DataColumn
        
        Private columnfldPhone As DataColumn
        
        Private columnfldRnc As DataColumn
        
        Private columnfldPassDescuento As DataColumn
        
        Private columnfldPassConfig As DataColumn
        
        Private columnfldPassAdmin As DataColumn
        
        Private columnfldNotaRecepcion As DataColumn
        
        Private columnfldDiasVenceFC As DataColumn
        
        Private columnfldColorForm As DataColumn
        
        Private columnfoto As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_profiledocument")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fldCompanyIDColumn As DataColumn
            Get
                Return Me.columnfldCompanyID
            End Get
        End Property
        
        Friend ReadOnly Property fldCompanyColumn As DataColumn
            Get
                Return Me.columnfldCompany
            End Get
        End Property
        
        Friend ReadOnly Property fldAddressColumn As DataColumn
            Get
                Return Me.columnfldAddress
            End Get
        End Property
        
        Friend ReadOnly Property fldPhoneColumn As DataColumn
            Get
                Return Me.columnfldPhone
            End Get
        End Property
        
        Friend ReadOnly Property fldRncColumn As DataColumn
            Get
                Return Me.columnfldRnc
            End Get
        End Property
        
        Friend ReadOnly Property fldPassDescuentoColumn As DataColumn
            Get
                Return Me.columnfldPassDescuento
            End Get
        End Property
        
        Friend ReadOnly Property fldPassConfigColumn As DataColumn
            Get
                Return Me.columnfldPassConfig
            End Get
        End Property
        
        Friend ReadOnly Property fldPassAdminColumn As DataColumn
            Get
                Return Me.columnfldPassAdmin
            End Get
        End Property
        
        Friend ReadOnly Property fldNotaRecepcionColumn As DataColumn
            Get
                Return Me.columnfldNotaRecepcion
            End Get
        End Property
        
        Friend ReadOnly Property fldDiasVenceFCColumn As DataColumn
            Get
                Return Me.columnfldDiasVenceFC
            End Get
        End Property
        
        Friend ReadOnly Property fldColorFormColumn As DataColumn
            Get
                Return Me.columnfldColorForm
            End Get
        End Property
        
        Friend ReadOnly Property fotoColumn As DataColumn
            Get
                Return Me.columnfoto
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_profiledocumentRow
            Get
                Return CType(Me.Rows(index),tbl_profiledocumentRow)
            End Get
        End Property
        
        Public Event tbl_profiledocumentRowChanged As tbl_profiledocumentRowChangeEventHandler
        
        Public Event tbl_profiledocumentRowChanging As tbl_profiledocumentRowChangeEventHandler
        
        Public Event tbl_profiledocumentRowDeleted As tbl_profiledocumentRowChangeEventHandler
        
        Public Event tbl_profiledocumentRowDeleting As tbl_profiledocumentRowChangeEventHandler
        
        Public Overloads Sub Addtbl_profiledocumentRow(ByVal row As tbl_profiledocumentRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_profiledocumentRow(ByVal fldCompany As String, ByVal fldAddress As String, ByVal fldPhone As String, ByVal fldRnc As String, ByVal fldPassDescuento As String, ByVal fldPassConfig As String, ByVal fldPassAdmin As String, ByVal fldNotaRecepcion As String, ByVal fldDiasVenceFC As String, ByVal fldColorForm As String, ByVal foto() As Byte) As tbl_profiledocumentRow
            Dim rowtbl_profiledocumentRow As tbl_profiledocumentRow = CType(Me.NewRow,tbl_profiledocumentRow)
            rowtbl_profiledocumentRow.ItemArray = New Object() {Nothing, fldCompany, fldAddress, fldPhone, fldRnc, fldPassDescuento, fldPassConfig, fldPassAdmin, fldNotaRecepcion, fldDiasVenceFC, fldColorForm, foto}
            Me.Rows.Add(rowtbl_profiledocumentRow)
            Return rowtbl_profiledocumentRow
        End Function
        
        Public Function FindByfldCompanyID(ByVal fldCompanyID As Integer) As tbl_profiledocumentRow
            Return CType(Me.Rows.Find(New Object() {fldCompanyID}),tbl_profiledocumentRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_profiledocumentDataTable = CType(MyBase.Clone,tbl_profiledocumentDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_profiledocumentDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfldCompanyID = Me.Columns("fldCompanyID")
            Me.columnfldCompany = Me.Columns("fldCompany")
            Me.columnfldAddress = Me.Columns("fldAddress")
            Me.columnfldPhone = Me.Columns("fldPhone")
            Me.columnfldRnc = Me.Columns("fldRnc")
            Me.columnfldPassDescuento = Me.Columns("fldPassDescuento")
            Me.columnfldPassConfig = Me.Columns("fldPassConfig")
            Me.columnfldPassAdmin = Me.Columns("fldPassAdmin")
            Me.columnfldNotaRecepcion = Me.Columns("fldNotaRecepcion")
            Me.columnfldDiasVenceFC = Me.Columns("fldDiasVenceFC")
            Me.columnfldColorForm = Me.Columns("fldColorForm")
            Me.columnfoto = Me.Columns("foto")
        End Sub
        
        Private Sub InitClass()
            Me.columnfldCompanyID = New DataColumn("fldCompanyID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldCompanyID)
            Me.columnfldCompany = New DataColumn("fldCompany", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldCompany)
            Me.columnfldAddress = New DataColumn("fldAddress", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldAddress)
            Me.columnfldPhone = New DataColumn("fldPhone", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldPhone)
            Me.columnfldRnc = New DataColumn("fldRnc", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldRnc)
            Me.columnfldPassDescuento = New DataColumn("fldPassDescuento", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldPassDescuento)
            Me.columnfldPassConfig = New DataColumn("fldPassConfig", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldPassConfig)
            Me.columnfldPassAdmin = New DataColumn("fldPassAdmin", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldPassAdmin)
            Me.columnfldNotaRecepcion = New DataColumn("fldNotaRecepcion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldNotaRecepcion)
            Me.columnfldDiasVenceFC = New DataColumn("fldDiasVenceFC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldDiasVenceFC)
            Me.columnfldColorForm = New DataColumn("fldColorForm", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldColorForm)
            Me.columnfoto = New DataColumn("foto", GetType(System.Byte()), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfoto)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey2", New DataColumn() {Me.columnfldCompanyID}, true))
            Me.columnfldCompanyID.AutoIncrement = true
            Me.columnfldCompanyID.AllowDBNull = false
            Me.columnfldCompanyID.Unique = true
        End Sub
        
        Public Function Newtbl_profiledocumentRow() As tbl_profiledocumentRow
            Return CType(Me.NewRow,tbl_profiledocumentRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_profiledocumentRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_profiledocumentRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_profiledocumentRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_profiledocumentRowChanged(Me, New tbl_profiledocumentRowChangeEvent(CType(e.Row,tbl_profiledocumentRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_profiledocumentRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_profiledocumentRowChanging(Me, New tbl_profiledocumentRowChangeEvent(CType(e.Row,tbl_profiledocumentRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_profiledocumentRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_profiledocumentRowDeleted(Me, New tbl_profiledocumentRowChangeEvent(CType(e.Row,tbl_profiledocumentRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_profiledocumentRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_profiledocumentRowDeleting(Me, New tbl_profiledocumentRowChangeEvent(CType(e.Row,tbl_profiledocumentRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_profiledocumentRow(ByVal row As tbl_profiledocumentRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_profiledocumentRow
        Inherits DataRow
        
        Private tabletbl_profiledocument As tbl_profiledocumentDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_profiledocument = CType(Me.Table,tbl_profiledocumentDataTable)
        End Sub
        
        Public Property fldCompanyID As Integer
            Get
                Return CType(Me(Me.tabletbl_profiledocument.fldCompanyIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldCompanyIDColumn) = value
            End Set
        End Property
        
        Public Property fldCompany As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fldCompanyColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldCompanyColumn) = value
            End Set
        End Property
        
        Public Property fldAddress As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fldAddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldAddressColumn) = value
            End Set
        End Property
        
        Public Property fldPhone As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fldPhoneColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldPhoneColumn) = value
            End Set
        End Property
        
        Public Property fldRnc As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fldRncColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldRncColumn) = value
            End Set
        End Property
        
        Public Property fldPassDescuento As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fldPassDescuentoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldPassDescuentoColumn) = value
            End Set
        End Property
        
        Public Property fldPassConfig As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fldPassConfigColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldPassConfigColumn) = value
            End Set
        End Property
        
        Public Property fldPassAdmin As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fldPassAdminColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldPassAdminColumn) = value
            End Set
        End Property
        
        Public Property fldNotaRecepcion As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fldNotaRecepcionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldNotaRecepcionColumn) = value
            End Set
        End Property
        
        Public Property fldDiasVenceFC As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fldDiasVenceFCColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldDiasVenceFCColumn) = value
            End Set
        End Property
        
        Public Property fldColorForm As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fldColorFormColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldColorFormColumn) = value
            End Set
        End Property
        
        Public Property foto As Byte()
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fotoColumn),Byte())
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fotoColumn) = value
            End Set
        End Property
        
        Public Function IsfldCompanyNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fldCompanyColumn)
        End Function
        
        Public Sub SetfldCompanyNull()
            Me(Me.tabletbl_profiledocument.fldCompanyColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldAddressNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fldAddressColumn)
        End Function
        
        Public Sub SetfldAddressNull()
            Me(Me.tabletbl_profiledocument.fldAddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldPhoneNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fldPhoneColumn)
        End Function
        
        Public Sub SetfldPhoneNull()
            Me(Me.tabletbl_profiledocument.fldPhoneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldRncNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fldRncColumn)
        End Function
        
        Public Sub SetfldRncNull()
            Me(Me.tabletbl_profiledocument.fldRncColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldPassDescuentoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fldPassDescuentoColumn)
        End Function
        
        Public Sub SetfldPassDescuentoNull()
            Me(Me.tabletbl_profiledocument.fldPassDescuentoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldPassConfigNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fldPassConfigColumn)
        End Function
        
        Public Sub SetfldPassConfigNull()
            Me(Me.tabletbl_profiledocument.fldPassConfigColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldPassAdminNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fldPassAdminColumn)
        End Function
        
        Public Sub SetfldPassAdminNull()
            Me(Me.tabletbl_profiledocument.fldPassAdminColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldNotaRecepcionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fldNotaRecepcionColumn)
        End Function
        
        Public Sub SetfldNotaRecepcionNull()
            Me(Me.tabletbl_profiledocument.fldNotaRecepcionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldDiasVenceFCNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fldDiasVenceFCColumn)
        End Function
        
        Public Sub SetfldDiasVenceFCNull()
            Me(Me.tabletbl_profiledocument.fldDiasVenceFCColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldColorFormNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fldColorFormColumn)
        End Function
        
        Public Sub SetfldColorFormNull()
            Me(Me.tabletbl_profiledocument.fldColorFormColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfotoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fotoColumn)
        End Function
        
        Public Sub SetfotoNull()
            Me(Me.tabletbl_profiledocument.fotoColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_profiledocumentRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_profiledocumentRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_profiledocumentRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_profiledocumentRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_ri_cxcDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id As DataColumn
        
        Private columnfld_FullName As DataColumn
        
        Private columnfld_apodo As DataColumn
        
        Private columnfld_Identity As DataColumn
        
        Private columnfld_Phone As DataColumn
        
        Private columnfld_Phone2 As DataColumn
        
        Private columnfld_Address As DataColumn
        
        Private columnfld_City As DataColumn
        
        Private columnfld_Status As DataColumn
        
        Private columnfld_bce As DataColumn
        
        Private columnfld_cod_zona As DataColumn
        
        Private columnfld_zona As DataColumn
        
        Private columnfld_nombre_con As DataColumn
        
        Private columnfld_apodo_con As DataColumn
        
        Private columnfld_cedula_con As DataColumn
        
        Private columnfld_telefono_con As DataColumn
        
        Private columnfld_celular_con As DataColumn
        
        Private columnfld_ref_personales_cliente As DataColumn
        
        Private columnfld_ref_comerciales_cliente As DataColumn
        
        Private columnfld_nombre_gar As DataColumn
        
        Private columnfld_apodo_gar As DataColumn
        
        Private columnfld_cedula_gar As DataColumn
        
        Private columnfld_telefono_gar As DataColumn
        
        Private columnfld_celular_gar As DataColumn
        
        Private columnfld_direccion_gar As DataColumn
        
        Private columnfld_ciudad_gar As DataColumn
        
        Private columnfld_ref_personales_gar As DataColumn
        
        Private columnfld_ref_comerciales_gar As DataColumn
        
        Private columnfld_ingresos_mesuales As DataColumn
        
        Private columnfld_nombre_banco1 As DataColumn
        
        Private columnfld_cuenta_banco1 As DataColumn
        
        Private columnfld_nombre_banco2 As DataColumn
        
        Private columnfld_cuenta_banco2 As DataColumn
        
        Private columnfld_otra_informacion As DataColumn
        
        Private columnfld_nombre_con_gar As DataColumn
        
        Private columnfld_apodo_con_gar As DataColumn
        
        Private columnfld_cedula_con_gar As DataColumn
        
        Private columnfld_telefono_con_gar As DataColumn
        
        Private columnfld_celular_con_gar As DataColumn
        
        Private columnfld_edad As DataColumn
        
        Private columnfld_estado_civil As DataColumn
        
        Private columnfld_edad_gar As DataColumn
        
        Private columnfld_estado_civil_gar As DataColumn
        
        Private columnfld_ocupacion_cliente As DataColumn
        
        Private columnfld_ocupacion_gar As DataColumn
        
        Private columnfld_Id_RI As DataColumn
        
        Private columnfld_forma_pago As DataColumn
        
        Private columnfld_detalle_forma_pago As DataColumn
        
        Private columnfld_id_cliente_ri As DataColumn
        
        Private columnfld_date As DataColumn
        
        Private columnfld_Description As DataColumn
        
        Private columnfld_monto As DataColumn
        
        Private columnfld_fact_afectado As DataColumn
        
        Private columnfdl_nd_afectado As DataColumn
        
        Private columnfld_User As DataColumn
        
        Private columnfld_Estado As DataColumn
        
        Private columnfld_id_prestamo As DataColumn
        
        Private columnfld_interes_cobrado As DataColumn
        
        Private columnfld_capital_cobrado As DataColumn
        
        Private columnfld_mora_cobrada As DataColumn
        
        Private columnfld_concepto As DataColumn
        
        Private columnfld_socio As DataColumn
        
        Private columnfld_bce_actual As DataColumn
        
        Private columnfld_bce_anterior As DataColumn
        
        Private columnfld_adelanto As DataColumn
        
        Private columnfld_adelanto_aplicado As DataColumn
        
        Private columnview_ri_cxc_Id As DataColumn
        
        Friend Sub New()
            MyBase.New("view_ri_cxc")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_FullNameColumn As DataColumn
            Get
                Return Me.columnfld_FullName
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodoColumn As DataColumn
            Get
                Return Me.columnfld_apodo
            End Get
        End Property
        
        Friend ReadOnly Property fld_IdentityColumn As DataColumn
            Get
                Return Me.columnfld_Identity
            End Get
        End Property
        
        Friend ReadOnly Property fld_PhoneColumn As DataColumn
            Get
                Return Me.columnfld_Phone
            End Get
        End Property
        
        Friend ReadOnly Property fld_Phone2Column As DataColumn
            Get
                Return Me.columnfld_Phone2
            End Get
        End Property
        
        Friend ReadOnly Property fld_AddressColumn As DataColumn
            Get
                Return Me.columnfld_Address
            End Get
        End Property
        
        Friend ReadOnly Property fld_CityColumn As DataColumn
            Get
                Return Me.columnfld_City
            End Get
        End Property
        
        Friend ReadOnly Property fld_StatusColumn As DataColumn
            Get
                Return Me.columnfld_Status
            End Get
        End Property
        
        Friend ReadOnly Property fld_bceColumn As DataColumn
            Get
                Return Me.columnfld_bce
            End Get
        End Property
        
        Friend ReadOnly Property fld_cod_zonaColumn As DataColumn
            Get
                Return Me.columnfld_cod_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_zonaColumn As DataColumn
            Get
                Return Me.columnfld_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_conColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_conColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_conColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_conColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_conColumn As DataColumn
            Get
                Return Me.columnfld_celular_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_direccion_garColumn As DataColumn
            Get
                Return Me.columnfld_direccion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ciudad_garColumn As DataColumn
            Get
                Return Me.columnfld_ciudad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ingresos_mesualesColumn As DataColumn
            Get
                Return Me.columnfld_ingresos_mesuales
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco1Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco1Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco2Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco2Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_otra_informacionColumn As DataColumn
            Get
                Return Me.columnfld_otra_informacion
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_con_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_con_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_con_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_con_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_con_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_edadColumn As DataColumn
            Get
                Return Me.columnfld_edad
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civilColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil
            End Get
        End Property
        
        Friend ReadOnly Property fld_edad_garColumn As DataColumn
            Get
                Return Me.columnfld_edad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civil_garColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ocupacion_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ocupacion_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ocupacion_garColumn As DataColumn
            Get
                Return Me.columnfld_ocupacion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_Id_RIColumn As DataColumn
            Get
                Return Me.columnfld_Id_RI
            End Get
        End Property
        
        Friend ReadOnly Property fld_forma_pagoColumn As DataColumn
            Get
                Return Me.columnfld_forma_pago
            End Get
        End Property
        
        Friend ReadOnly Property fld_detalle_forma_pagoColumn As DataColumn
            Get
                Return Me.columnfld_detalle_forma_pago
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_cliente_riColumn As DataColumn
            Get
                Return Me.columnfld_id_cliente_ri
            End Get
        End Property
        
        Friend ReadOnly Property fld_dateColumn As DataColumn
            Get
                Return Me.columnfld_date
            End Get
        End Property
        
        Friend ReadOnly Property fld_DescriptionColumn As DataColumn
            Get
                Return Me.columnfld_Description
            End Get
        End Property
        
        Friend ReadOnly Property fld_montoColumn As DataColumn
            Get
                Return Me.columnfld_monto
            End Get
        End Property
        
        Friend ReadOnly Property fld_fact_afectadoColumn As DataColumn
            Get
                Return Me.columnfld_fact_afectado
            End Get
        End Property
        
        Friend ReadOnly Property fdl_nd_afectadoColumn As DataColumn
            Get
                Return Me.columnfdl_nd_afectado
            End Get
        End Property
        
        Friend ReadOnly Property fld_UserColumn As DataColumn
            Get
                Return Me.columnfld_User
            End Get
        End Property
        
        Friend ReadOnly Property fld_EstadoColumn As DataColumn
            Get
                Return Me.columnfld_Estado
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_prestamoColumn As DataColumn
            Get
                Return Me.columnfld_id_prestamo
            End Get
        End Property
        
        Friend ReadOnly Property fld_interes_cobradoColumn As DataColumn
            Get
                Return Me.columnfld_interes_cobrado
            End Get
        End Property
        
        Friend ReadOnly Property fld_capital_cobradoColumn As DataColumn
            Get
                Return Me.columnfld_capital_cobrado
            End Get
        End Property
        
        Friend ReadOnly Property fld_mora_cobradaColumn As DataColumn
            Get
                Return Me.columnfld_mora_cobrada
            End Get
        End Property
        
        Friend ReadOnly Property fld_conceptoColumn As DataColumn
            Get
                Return Me.columnfld_concepto
            End Get
        End Property
        
        Friend ReadOnly Property fld_socioColumn As DataColumn
            Get
                Return Me.columnfld_socio
            End Get
        End Property
        
        Friend ReadOnly Property fld_bce_actualColumn As DataColumn
            Get
                Return Me.columnfld_bce_actual
            End Get
        End Property
        
        Friend ReadOnly Property fld_bce_anteriorColumn As DataColumn
            Get
                Return Me.columnfld_bce_anterior
            End Get
        End Property
        
        Friend ReadOnly Property fld_adelantoColumn As DataColumn
            Get
                Return Me.columnfld_adelanto
            End Get
        End Property
        
        Friend ReadOnly Property fld_adelanto_aplicadoColumn As DataColumn
            Get
                Return Me.columnfld_adelanto_aplicado
            End Get
        End Property
        
        Friend ReadOnly Property view_ri_cxc_IdColumn As DataColumn
            Get
                Return Me.columnview_ri_cxc_Id
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_ri_cxcRow
            Get
                Return CType(Me.Rows(index),view_ri_cxcRow)
            End Get
        End Property
        
        Public Event view_ri_cxcRowChanged As view_ri_cxcRowChangeEventHandler
        
        Public Event view_ri_cxcRowChanging As view_ri_cxcRowChangeEventHandler
        
        Public Event view_ri_cxcRowDeleted As view_ri_cxcRowChangeEventHandler
        
        Public Event view_ri_cxcRowDeleting As view_ri_cxcRowChangeEventHandler
        
        Public Overloads Sub Addview_ri_cxcRow(ByVal row As view_ri_cxcRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addview_ri_cxcRow( _
                    ByVal fld_FullName As String,  _
                    ByVal fld_apodo As String,  _
                    ByVal fld_Identity As String,  _
                    ByVal fld_Phone As String,  _
                    ByVal fld_Phone2 As String,  _
                    ByVal fld_Address As String,  _
                    ByVal fld_City As String,  _
                    ByVal fld_Status As String,  _
                    ByVal fld_bce As Double,  _
                    ByVal fld_cod_zona As Integer,  _
                    ByVal fld_zona As String,  _
                    ByVal fld_nombre_con As String,  _
                    ByVal fld_apodo_con As String,  _
                    ByVal fld_cedula_con As String,  _
                    ByVal fld_telefono_con As String,  _
                    ByVal fld_celular_con As String,  _
                    ByVal fld_ref_personales_cliente As String,  _
                    ByVal fld_ref_comerciales_cliente As String,  _
                    ByVal fld_nombre_gar As String,  _
                    ByVal fld_apodo_gar As String,  _
                    ByVal fld_cedula_gar As String,  _
                    ByVal fld_telefono_gar As String,  _
                    ByVal fld_celular_gar As String,  _
                    ByVal fld_direccion_gar As String,  _
                    ByVal fld_ciudad_gar As String,  _
                    ByVal fld_ref_personales_gar As String,  _
                    ByVal fld_ref_comerciales_gar As String,  _
                    ByVal fld_ingresos_mesuales As Double,  _
                    ByVal fld_nombre_banco1 As String,  _
                    ByVal fld_cuenta_banco1 As String,  _
                    ByVal fld_nombre_banco2 As String,  _
                    ByVal fld_cuenta_banco2 As String,  _
                    ByVal fld_otra_informacion As String,  _
                    ByVal fld_nombre_con_gar As String,  _
                    ByVal fld_apodo_con_gar As String,  _
                    ByVal fld_cedula_con_gar As String,  _
                    ByVal fld_telefono_con_gar As String,  _
                    ByVal fld_celular_con_gar As String,  _
                    ByVal fld_edad As Integer,  _
                    ByVal fld_estado_civil As String,  _
                    ByVal fld_edad_gar As Integer,  _
                    ByVal fld_estado_civil_gar As String,  _
                    ByVal fld_ocupacion_cliente As String,  _
                    ByVal fld_ocupacion_gar As String,  _
                    ByVal fld_forma_pago As String,  _
                    ByVal fld_detalle_forma_pago As String,  _
                    ByVal fld_id_cliente_ri As Integer,  _
                    ByVal fld_date As Date,  _
                    ByVal fld_Description As String,  _
                    ByVal fld_monto As Double,  _
                    ByVal fld_fact_afectado As String,  _
                    ByVal fdl_nd_afectado As String,  _
                    ByVal fld_User As String,  _
                    ByVal fld_Estado As String,  _
                    ByVal fld_id_prestamo As Integer,  _
                    ByVal fld_interes_cobrado As Double,  _
                    ByVal fld_capital_cobrado As Double,  _
                    ByVal fld_mora_cobrada As Double,  _
                    ByVal fld_concepto As String,  _
                    ByVal fld_socio As String,  _
                    ByVal fld_bce_actual As Double,  _
                    ByVal fld_bce_anterior As Double,  _
                    ByVal fld_adelanto As String,  _
                    ByVal fld_adelanto_aplicado As String) As view_ri_cxcRow
            Dim rowview_ri_cxcRow As view_ri_cxcRow = CType(Me.NewRow,view_ri_cxcRow)
            rowview_ri_cxcRow.ItemArray = New Object() {Nothing, fld_FullName, fld_apodo, fld_Identity, fld_Phone, fld_Phone2, fld_Address, fld_City, fld_Status, fld_bce, fld_cod_zona, fld_zona, fld_nombre_con, fld_apodo_con, fld_cedula_con, fld_telefono_con, fld_celular_con, fld_ref_personales_cliente, fld_ref_comerciales_cliente, fld_nombre_gar, fld_apodo_gar, fld_cedula_gar, fld_telefono_gar, fld_celular_gar, fld_direccion_gar, fld_ciudad_gar, fld_ref_personales_gar, fld_ref_comerciales_gar, fld_ingresos_mesuales, fld_nombre_banco1, fld_cuenta_banco1, fld_nombre_banco2, fld_cuenta_banco2, fld_otra_informacion, fld_nombre_con_gar, fld_apodo_con_gar, fld_cedula_con_gar, fld_telefono_con_gar, fld_celular_con_gar, fld_edad, fld_estado_civil, fld_edad_gar, fld_estado_civil_gar, fld_ocupacion_cliente, fld_ocupacion_gar, Nothing, fld_forma_pago, fld_detalle_forma_pago, fld_id_cliente_ri, fld_date, fld_Description, fld_monto, fld_fact_afectado, fdl_nd_afectado, fld_User, fld_Estado, fld_id_prestamo, fld_interes_cobrado, fld_capital_cobrado, fld_mora_cobrada, fld_concepto, fld_socio, fld_bce_actual, fld_bce_anterior, fld_adelanto, fld_adelanto_aplicado, Nothing}
            Me.Rows.Add(rowview_ri_cxcRow)
            Return rowview_ri_cxcRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As view_ri_cxcDataTable = CType(MyBase.Clone,view_ri_cxcDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New view_ri_cxcDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnfld_FullName = Me.Columns("fld_FullName")
            Me.columnfld_apodo = Me.Columns("fld_apodo")
            Me.columnfld_Identity = Me.Columns("fld_Identity")
            Me.columnfld_Phone = Me.Columns("fld_Phone")
            Me.columnfld_Phone2 = Me.Columns("fld_Phone2")
            Me.columnfld_Address = Me.Columns("fld_Address")
            Me.columnfld_City = Me.Columns("fld_City")
            Me.columnfld_Status = Me.Columns("fld_Status")
            Me.columnfld_bce = Me.Columns("fld_bce")
            Me.columnfld_cod_zona = Me.Columns("fld_cod_zona")
            Me.columnfld_zona = Me.Columns("fld_zona")
            Me.columnfld_nombre_con = Me.Columns("fld_nombre_con")
            Me.columnfld_apodo_con = Me.Columns("fld_apodo_con")
            Me.columnfld_cedula_con = Me.Columns("fld_cedula_con")
            Me.columnfld_telefono_con = Me.Columns("fld_telefono_con")
            Me.columnfld_celular_con = Me.Columns("fld_celular_con")
            Me.columnfld_ref_personales_cliente = Me.Columns("fld_ref_personales_cliente")
            Me.columnfld_ref_comerciales_cliente = Me.Columns("fld_ref_comerciales_cliente")
            Me.columnfld_nombre_gar = Me.Columns("fld_nombre_gar")
            Me.columnfld_apodo_gar = Me.Columns("fld_apodo_gar")
            Me.columnfld_cedula_gar = Me.Columns("fld_cedula_gar")
            Me.columnfld_telefono_gar = Me.Columns("fld_telefono_gar")
            Me.columnfld_celular_gar = Me.Columns("fld_celular_gar")
            Me.columnfld_direccion_gar = Me.Columns("fld_direccion_gar")
            Me.columnfld_ciudad_gar = Me.Columns("fld_ciudad_gar")
            Me.columnfld_ref_personales_gar = Me.Columns("fld_ref_personales_gar")
            Me.columnfld_ref_comerciales_gar = Me.Columns("fld_ref_comerciales_gar")
            Me.columnfld_ingresos_mesuales = Me.Columns("fld_ingresos_mesuales")
            Me.columnfld_nombre_banco1 = Me.Columns("fld_nombre_banco1")
            Me.columnfld_cuenta_banco1 = Me.Columns("fld_cuenta_banco1")
            Me.columnfld_nombre_banco2 = Me.Columns("fld_nombre_banco2")
            Me.columnfld_cuenta_banco2 = Me.Columns("fld_cuenta_banco2")
            Me.columnfld_otra_informacion = Me.Columns("fld_otra_informacion")
            Me.columnfld_nombre_con_gar = Me.Columns("fld_nombre_con_gar")
            Me.columnfld_apodo_con_gar = Me.Columns("fld_apodo_con_gar")
            Me.columnfld_cedula_con_gar = Me.Columns("fld_cedula_con_gar")
            Me.columnfld_telefono_con_gar = Me.Columns("fld_telefono_con_gar")
            Me.columnfld_celular_con_gar = Me.Columns("fld_celular_con_gar")
            Me.columnfld_edad = Me.Columns("fld_edad")
            Me.columnfld_estado_civil = Me.Columns("fld_estado_civil")
            Me.columnfld_edad_gar = Me.Columns("fld_edad_gar")
            Me.columnfld_estado_civil_gar = Me.Columns("fld_estado_civil_gar")
            Me.columnfld_ocupacion_cliente = Me.Columns("fld_ocupacion_cliente")
            Me.columnfld_ocupacion_gar = Me.Columns("fld_ocupacion_gar")
            Me.columnfld_Id_RI = Me.Columns("fld_Id_RI")
            Me.columnfld_forma_pago = Me.Columns("fld_forma_pago")
            Me.columnfld_detalle_forma_pago = Me.Columns("fld_detalle_forma_pago")
            Me.columnfld_id_cliente_ri = Me.Columns("fld_id_cliente_ri")
            Me.columnfld_date = Me.Columns("fld_date")
            Me.columnfld_Description = Me.Columns("fld_Description")
            Me.columnfld_monto = Me.Columns("fld_monto")
            Me.columnfld_fact_afectado = Me.Columns("fld_fact_afectado")
            Me.columnfdl_nd_afectado = Me.Columns("fdl_nd_afectado")
            Me.columnfld_User = Me.Columns("fld_User")
            Me.columnfld_Estado = Me.Columns("fld_Estado")
            Me.columnfld_id_prestamo = Me.Columns("fld_id_prestamo")
            Me.columnfld_interes_cobrado = Me.Columns("fld_interes_cobrado")
            Me.columnfld_capital_cobrado = Me.Columns("fld_capital_cobrado")
            Me.columnfld_mora_cobrada = Me.Columns("fld_mora_cobrada")
            Me.columnfld_concepto = Me.Columns("fld_concepto")
            Me.columnfld_socio = Me.Columns("fld_socio")
            Me.columnfld_bce_actual = Me.Columns("fld_bce_actual")
            Me.columnfld_bce_anterior = Me.Columns("fld_bce_anterior")
            Me.columnfld_adelanto = Me.Columns("fld_adelanto")
            Me.columnfld_adelanto_aplicado = Me.Columns("fld_adelanto_aplicado")
            Me.columnview_ri_cxc_Id = Me.Columns("view_ri_cxc_Id")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnfld_FullName = New DataColumn("fld_FullName", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_FullName)
            Me.columnfld_apodo = New DataColumn("fld_apodo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo)
            Me.columnfld_Identity = New DataColumn("fld_Identity", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Identity)
            Me.columnfld_Phone = New DataColumn("fld_Phone", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone)
            Me.columnfld_Phone2 = New DataColumn("fld_Phone2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone2)
            Me.columnfld_Address = New DataColumn("fld_Address", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Address)
            Me.columnfld_City = New DataColumn("fld_City", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_City)
            Me.columnfld_Status = New DataColumn("fld_Status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Status)
            Me.columnfld_bce = New DataColumn("fld_bce", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce)
            Me.columnfld_cod_zona = New DataColumn("fld_cod_zona", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cod_zona)
            Me.columnfld_zona = New DataColumn("fld_zona", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_zona)
            Me.columnfld_nombre_con = New DataColumn("fld_nombre_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con)
            Me.columnfld_apodo_con = New DataColumn("fld_apodo_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con)
            Me.columnfld_cedula_con = New DataColumn("fld_cedula_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con)
            Me.columnfld_telefono_con = New DataColumn("fld_telefono_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con)
            Me.columnfld_celular_con = New DataColumn("fld_celular_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con)
            Me.columnfld_ref_personales_cliente = New DataColumn("fld_ref_personales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_cliente)
            Me.columnfld_ref_comerciales_cliente = New DataColumn("fld_ref_comerciales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_cliente)
            Me.columnfld_nombre_gar = New DataColumn("fld_nombre_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_gar)
            Me.columnfld_apodo_gar = New DataColumn("fld_apodo_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_gar)
            Me.columnfld_cedula_gar = New DataColumn("fld_cedula_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_gar)
            Me.columnfld_telefono_gar = New DataColumn("fld_telefono_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_gar)
            Me.columnfld_celular_gar = New DataColumn("fld_celular_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_gar)
            Me.columnfld_direccion_gar = New DataColumn("fld_direccion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_direccion_gar)
            Me.columnfld_ciudad_gar = New DataColumn("fld_ciudad_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ciudad_gar)
            Me.columnfld_ref_personales_gar = New DataColumn("fld_ref_personales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_gar)
            Me.columnfld_ref_comerciales_gar = New DataColumn("fld_ref_comerciales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_gar)
            Me.columnfld_ingresos_mesuales = New DataColumn("fld_ingresos_mesuales", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ingresos_mesuales)
            Me.columnfld_nombre_banco1 = New DataColumn("fld_nombre_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco1)
            Me.columnfld_cuenta_banco1 = New DataColumn("fld_cuenta_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco1)
            Me.columnfld_nombre_banco2 = New DataColumn("fld_nombre_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco2)
            Me.columnfld_cuenta_banco2 = New DataColumn("fld_cuenta_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco2)
            Me.columnfld_otra_informacion = New DataColumn("fld_otra_informacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_otra_informacion)
            Me.columnfld_nombre_con_gar = New DataColumn("fld_nombre_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con_gar)
            Me.columnfld_apodo_con_gar = New DataColumn("fld_apodo_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con_gar)
            Me.columnfld_cedula_con_gar = New DataColumn("fld_cedula_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con_gar)
            Me.columnfld_telefono_con_gar = New DataColumn("fld_telefono_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con_gar)
            Me.columnfld_celular_con_gar = New DataColumn("fld_celular_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con_gar)
            Me.columnfld_edad = New DataColumn("fld_edad", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad)
            Me.columnfld_estado_civil = New DataColumn("fld_estado_civil", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil)
            Me.columnfld_edad_gar = New DataColumn("fld_edad_gar", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad_gar)
            Me.columnfld_estado_civil_gar = New DataColumn("fld_estado_civil_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil_gar)
            Me.columnfld_ocupacion_cliente = New DataColumn("fld_ocupacion_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ocupacion_cliente)
            Me.columnfld_ocupacion_gar = New DataColumn("fld_ocupacion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ocupacion_gar)
            Me.columnfld_Id_RI = New DataColumn("fld_Id_RI", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Id_RI)
            Me.columnfld_forma_pago = New DataColumn("fld_forma_pago", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_forma_pago)
            Me.columnfld_detalle_forma_pago = New DataColumn("fld_detalle_forma_pago", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_detalle_forma_pago)
            Me.columnfld_id_cliente_ri = New DataColumn("fld_id_cliente_ri", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_cliente_ri)
            Me.columnfld_date = New DataColumn("fld_date", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_date)
            Me.columnfld_Description = New DataColumn("fld_Description", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Description)
            Me.columnfld_monto = New DataColumn("fld_monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto)
            Me.columnfld_fact_afectado = New DataColumn("fld_fact_afectado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fact_afectado)
            Me.columnfdl_nd_afectado = New DataColumn("fdl_nd_afectado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfdl_nd_afectado)
            Me.columnfld_User = New DataColumn("fld_User", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_User)
            Me.columnfld_Estado = New DataColumn("fld_Estado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Estado)
            Me.columnfld_id_prestamo = New DataColumn("fld_id_prestamo", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_prestamo)
            Me.columnfld_interes_cobrado = New DataColumn("fld_interes_cobrado", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_interes_cobrado)
            Me.columnfld_capital_cobrado = New DataColumn("fld_capital_cobrado", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_capital_cobrado)
            Me.columnfld_mora_cobrada = New DataColumn("fld_mora_cobrada", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_mora_cobrada)
            Me.columnfld_concepto = New DataColumn("fld_concepto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_concepto)
            Me.columnfld_socio = New DataColumn("fld_socio", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_socio)
            Me.columnfld_bce_actual = New DataColumn("fld_bce_actual", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce_actual)
            Me.columnfld_bce_anterior = New DataColumn("fld_bce_anterior", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce_anterior)
            Me.columnfld_adelanto = New DataColumn("fld_adelanto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_adelanto)
            Me.columnfld_adelanto_aplicado = New DataColumn("fld_adelanto_aplicado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_adelanto_aplicado)
            Me.columnview_ri_cxc_Id = New DataColumn("view_ri_cxc_Id", GetType(System.Int32), Nothing, System.Data.MappingType.Hidden)
            Me.Columns.Add(Me.columnview_ri_cxc_Id)
            Me.Constraints.Add(New UniqueConstraint("Constraint1", New DataColumn() {Me.columnview_ri_cxc_Id}, true))
            Me.columnfld_id.AutoIncrement = true
            Me.columnfld_Id_RI.AutoIncrement = true
            Me.columnview_ri_cxc_Id.AutoIncrement = true
            Me.columnview_ri_cxc_Id.AllowDBNull = false
            Me.columnview_ri_cxc_Id.Unique = true
        End Sub
        
        Public Function Newview_ri_cxcRow() As view_ri_cxcRow
            Return CType(Me.NewRow,view_ri_cxcRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New view_ri_cxcRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(view_ri_cxcRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_ri_cxcRowChangedEvent) Is Nothing) Then
                RaiseEvent view_ri_cxcRowChanged(Me, New view_ri_cxcRowChangeEvent(CType(e.Row,view_ri_cxcRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_ri_cxcRowChangingEvent) Is Nothing) Then
                RaiseEvent view_ri_cxcRowChanging(Me, New view_ri_cxcRowChangeEvent(CType(e.Row,view_ri_cxcRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_ri_cxcRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_ri_cxcRowDeleted(Me, New view_ri_cxcRowChangeEvent(CType(e.Row,view_ri_cxcRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_ri_cxcRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_ri_cxcRowDeleting(Me, New view_ri_cxcRowChangeEvent(CType(e.Row,view_ri_cxcRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeview_ri_cxcRow(ByVal row As view_ri_cxcRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_ri_cxcRow
        Inherits DataRow
        
        Private tableview_ri_cxc As view_ri_cxcDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_ri_cxc = CType(Me.Table,view_ri_cxcDataTable)
        End Sub
        
        Public Property fld_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_idColumn) = value
            End Set
        End Property
        
        Public Property fld_FullName As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_FullNameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_FullNameColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_apodoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_apodoColumn) = value
            End Set
        End Property
        
        Public Property fld_Identity As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_IdentityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_IdentityColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_PhoneColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_PhoneColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_Phone2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_Phone2Column) = value
            End Set
        End Property
        
        Public Property fld_Address As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_AddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_AddressColumn) = value
            End Set
        End Property
        
        Public Property fld_City As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_CityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_CityColumn) = value
            End Set
        End Property
        
        Public Property fld_Status As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_StatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_StatusColumn) = value
            End Set
        End Property
        
        Public Property fld_bce As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_bceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_bceColumn) = value
            End Set
        End Property
        
        Public Property fld_cod_zona As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_cod_zonaColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_cod_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_zona As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_zonaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_nombre_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_nombre_conColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_apodo_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_apodo_conColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_cedula_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_cedula_conColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_telefono_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_telefono_conColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_celular_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_celular_conColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_ref_personales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_ref_personales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_ref_comerciales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_ref_comerciales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_nombre_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_nombre_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_apodo_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_apodo_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_cedula_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_cedula_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_telefono_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_telefono_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_celular_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_celular_garColumn) = value
            End Set
        End Property
        
        Public Property fld_direccion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_direccion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_direccion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ciudad_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_ciudad_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_ciudad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_ref_personales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_ref_personales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_ref_comerciales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_ref_comerciales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ingresos_mesuales As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_ingresos_mesualesColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_ingresos_mesualesColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_nombre_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_nombre_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_cuenta_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_cuenta_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_nombre_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_nombre_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_cuenta_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_cuenta_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_otra_informacion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_otra_informacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_otra_informacionColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_nombre_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_nombre_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_apodo_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_apodo_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_cedula_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_cedula_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_telefono_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_telefono_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_celular_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_celular_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_edad As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_edadColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_edadColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_estado_civilColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_estado_civilColumn) = value
            End Set
        End Property
        
        Public Property fld_edad_gar As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_edad_garColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_edad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_estado_civil_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_estado_civil_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ocupacion_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_ocupacion_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_ocupacion_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ocupacion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_ocupacion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_ocupacion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_Id_RI As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_Id_RIColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_Id_RIColumn) = value
            End Set
        End Property
        
        Public Property fld_forma_pago As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_forma_pagoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_forma_pagoColumn) = value
            End Set
        End Property
        
        Public Property fld_detalle_forma_pago As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_detalle_forma_pagoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_detalle_forma_pagoColumn) = value
            End Set
        End Property
        
        Public Property fld_id_cliente_ri As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_id_cliente_riColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_id_cliente_riColumn) = value
            End Set
        End Property
        
        Public Property fld_date As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_dateColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_dateColumn) = value
            End Set
        End Property
        
        Public Property fld_Description As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_DescriptionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_DescriptionColumn) = value
            End Set
        End Property
        
        Public Property fld_monto As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_montoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_montoColumn) = value
            End Set
        End Property
        
        Public Property fld_fact_afectado As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_fact_afectadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_fact_afectadoColumn) = value
            End Set
        End Property
        
        Public Property fdl_nd_afectado As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fdl_nd_afectadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fdl_nd_afectadoColumn) = value
            End Set
        End Property
        
        Public Property fld_User As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_UserColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_UserColumn) = value
            End Set
        End Property
        
        Public Property fld_Estado As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_EstadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_EstadoColumn) = value
            End Set
        End Property
        
        Public Property fld_id_prestamo As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_id_prestamoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_id_prestamoColumn) = value
            End Set
        End Property
        
        Public Property fld_interes_cobrado As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_interes_cobradoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_interes_cobradoColumn) = value
            End Set
        End Property
        
        Public Property fld_capital_cobrado As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_capital_cobradoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_capital_cobradoColumn) = value
            End Set
        End Property
        
        Public Property fld_mora_cobrada As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_mora_cobradaColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_mora_cobradaColumn) = value
            End Set
        End Property
        
        Public Property fld_concepto As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_conceptoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_conceptoColumn) = value
            End Set
        End Property
        
        Public Property fld_socio As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_socioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_socioColumn) = value
            End Set
        End Property
        
        Public Property fld_bce_actual As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_bce_actualColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_bce_actualColumn) = value
            End Set
        End Property
        
        Public Property fld_bce_anterior As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_bce_anteriorColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_bce_anteriorColumn) = value
            End Set
        End Property
        
        Public Property fld_adelanto As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_adelantoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_adelantoColumn) = value
            End Set
        End Property
        
        Public Property fld_adelanto_aplicado As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ri_cxc.fld_adelanto_aplicadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ri_cxc.fld_adelanto_aplicadoColumn) = value
            End Set
        End Property
        
        Public Function Isfld_idNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_idColumn)
        End Function
        
        Public Sub Setfld_idNull()
            Me(Me.tableview_ri_cxc.fld_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_FullNameNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_FullNameColumn)
        End Function
        
        Public Sub Setfld_FullNameNull()
            Me(Me.tableview_ri_cxc.fld_FullNameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodoNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_apodoColumn)
        End Function
        
        Public Sub Setfld_apodoNull()
            Me(Me.tableview_ri_cxc.fld_apodoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_IdentityNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_IdentityColumn)
        End Function
        
        Public Sub Setfld_IdentityNull()
            Me(Me.tableview_ri_cxc.fld_IdentityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_PhoneNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_PhoneColumn)
        End Function
        
        Public Sub Setfld_PhoneNull()
            Me(Me.tableview_ri_cxc.fld_PhoneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_Phone2Null() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_Phone2Column)
        End Function
        
        Public Sub Setfld_Phone2Null()
            Me(Me.tableview_ri_cxc.fld_Phone2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_AddressNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_AddressColumn)
        End Function
        
        Public Sub Setfld_AddressNull()
            Me(Me.tableview_ri_cxc.fld_AddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_CityNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_CityColumn)
        End Function
        
        Public Sub Setfld_CityNull()
            Me(Me.tableview_ri_cxc.fld_CityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_StatusNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_StatusColumn)
        End Function
        
        Public Sub Setfld_StatusNull()
            Me(Me.tableview_ri_cxc.fld_StatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bceNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_bceColumn)
        End Function
        
        Public Sub Setfld_bceNull()
            Me(Me.tableview_ri_cxc.fld_bceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cod_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_cod_zonaColumn)
        End Function
        
        Public Sub Setfld_cod_zonaNull()
            Me(Me.tableview_ri_cxc.fld_cod_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_zonaColumn)
        End Function
        
        Public Sub Setfld_zonaNull()
            Me(Me.tableview_ri_cxc.fld_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_nombre_conColumn)
        End Function
        
        Public Sub Setfld_nombre_conNull()
            Me(Me.tableview_ri_cxc.fld_nombre_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_apodo_conColumn)
        End Function
        
        Public Sub Setfld_apodo_conNull()
            Me(Me.tableview_ri_cxc.fld_apodo_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_cedula_conColumn)
        End Function
        
        Public Sub Setfld_cedula_conNull()
            Me(Me.tableview_ri_cxc.fld_cedula_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_telefono_conColumn)
        End Function
        
        Public Sub Setfld_telefono_conNull()
            Me(Me.tableview_ri_cxc.fld_telefono_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_celular_conColumn)
        End Function
        
        Public Sub Setfld_celular_conNull()
            Me(Me.tableview_ri_cxc.fld_celular_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_ref_personales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_personales_clienteNull()
            Me(Me.tableview_ri_cxc.fld_ref_personales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_ref_comerciales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_clienteNull()
            Me(Me.tableview_ri_cxc.fld_ref_comerciales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_nombre_garColumn)
        End Function
        
        Public Sub Setfld_nombre_garNull()
            Me(Me.tableview_ri_cxc.fld_nombre_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_apodo_garColumn)
        End Function
        
        Public Sub Setfld_apodo_garNull()
            Me(Me.tableview_ri_cxc.fld_apodo_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_cedula_garColumn)
        End Function
        
        Public Sub Setfld_cedula_garNull()
            Me(Me.tableview_ri_cxc.fld_cedula_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_telefono_garColumn)
        End Function
        
        Public Sub Setfld_telefono_garNull()
            Me(Me.tableview_ri_cxc.fld_telefono_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_celular_garColumn)
        End Function
        
        Public Sub Setfld_celular_garNull()
            Me(Me.tableview_ri_cxc.fld_celular_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_direccion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_direccion_garColumn)
        End Function
        
        Public Sub Setfld_direccion_garNull()
            Me(Me.tableview_ri_cxc.fld_direccion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ciudad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_ciudad_garColumn)
        End Function
        
        Public Sub Setfld_ciudad_garNull()
            Me(Me.tableview_ri_cxc.fld_ciudad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_ref_personales_garColumn)
        End Function
        
        Public Sub Setfld_ref_personales_garNull()
            Me(Me.tableview_ri_cxc.fld_ref_personales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_ref_comerciales_garColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_garNull()
            Me(Me.tableview_ri_cxc.fld_ref_comerciales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ingresos_mesualesNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_ingresos_mesualesColumn)
        End Function
        
        Public Sub Setfld_ingresos_mesualesNull()
            Me(Me.tableview_ri_cxc.fld_ingresos_mesualesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_nombre_banco1Column)
        End Function
        
        Public Sub Setfld_nombre_banco1Null()
            Me(Me.tableview_ri_cxc.fld_nombre_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_cuenta_banco1Column)
        End Function
        
        Public Sub Setfld_cuenta_banco1Null()
            Me(Me.tableview_ri_cxc.fld_cuenta_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_nombre_banco2Column)
        End Function
        
        Public Sub Setfld_nombre_banco2Null()
            Me(Me.tableview_ri_cxc.fld_nombre_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_cuenta_banco2Column)
        End Function
        
        Public Sub Setfld_cuenta_banco2Null()
            Me(Me.tableview_ri_cxc.fld_cuenta_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_otra_informacionNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_otra_informacionColumn)
        End Function
        
        Public Sub Setfld_otra_informacionNull()
            Me(Me.tableview_ri_cxc.fld_otra_informacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_nombre_con_garColumn)
        End Function
        
        Public Sub Setfld_nombre_con_garNull()
            Me(Me.tableview_ri_cxc.fld_nombre_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_apodo_con_garColumn)
        End Function
        
        Public Sub Setfld_apodo_con_garNull()
            Me(Me.tableview_ri_cxc.fld_apodo_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_cedula_con_garColumn)
        End Function
        
        Public Sub Setfld_cedula_con_garNull()
            Me(Me.tableview_ri_cxc.fld_cedula_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_telefono_con_garColumn)
        End Function
        
        Public Sub Setfld_telefono_con_garNull()
            Me(Me.tableview_ri_cxc.fld_telefono_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_celular_con_garColumn)
        End Function
        
        Public Sub Setfld_celular_con_garNull()
            Me(Me.tableview_ri_cxc.fld_celular_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edadNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_edadColumn)
        End Function
        
        Public Sub Setfld_edadNull()
            Me(Me.tableview_ri_cxc.fld_edadColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civilNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_estado_civilColumn)
        End Function
        
        Public Sub Setfld_estado_civilNull()
            Me(Me.tableview_ri_cxc.fld_estado_civilColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_edad_garColumn)
        End Function
        
        Public Sub Setfld_edad_garNull()
            Me(Me.tableview_ri_cxc.fld_edad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civil_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_estado_civil_garColumn)
        End Function
        
        Public Sub Setfld_estado_civil_garNull()
            Me(Me.tableview_ri_cxc.fld_estado_civil_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ocupacion_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_ocupacion_clienteColumn)
        End Function
        
        Public Sub Setfld_ocupacion_clienteNull()
            Me(Me.tableview_ri_cxc.fld_ocupacion_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ocupacion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_ocupacion_garColumn)
        End Function
        
        Public Sub Setfld_ocupacion_garNull()
            Me(Me.tableview_ri_cxc.fld_ocupacion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_Id_RINull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_Id_RIColumn)
        End Function
        
        Public Sub Setfld_Id_RINull()
            Me(Me.tableview_ri_cxc.fld_Id_RIColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_forma_pagoNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_forma_pagoColumn)
        End Function
        
        Public Sub Setfld_forma_pagoNull()
            Me(Me.tableview_ri_cxc.fld_forma_pagoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_detalle_forma_pagoNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_detalle_forma_pagoColumn)
        End Function
        
        Public Sub Setfld_detalle_forma_pagoNull()
            Me(Me.tableview_ri_cxc.fld_detalle_forma_pagoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_cliente_riNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_id_cliente_riColumn)
        End Function
        
        Public Sub Setfld_id_cliente_riNull()
            Me(Me.tableview_ri_cxc.fld_id_cliente_riColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_dateNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_dateColumn)
        End Function
        
        Public Sub Setfld_dateNull()
            Me(Me.tableview_ri_cxc.fld_dateColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_DescriptionColumn)
        End Function
        
        Public Sub Setfld_DescriptionNull()
            Me(Me.tableview_ri_cxc.fld_DescriptionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_montoNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_montoColumn)
        End Function
        
        Public Sub Setfld_montoNull()
            Me(Me.tableview_ri_cxc.fld_montoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fact_afectadoNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_fact_afectadoColumn)
        End Function
        
        Public Sub Setfld_fact_afectadoNull()
            Me(Me.tableview_ri_cxc.fld_fact_afectadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfdl_nd_afectadoNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fdl_nd_afectadoColumn)
        End Function
        
        Public Sub Setfdl_nd_afectadoNull()
            Me(Me.tableview_ri_cxc.fdl_nd_afectadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_UserNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_UserColumn)
        End Function
        
        Public Sub Setfld_UserNull()
            Me(Me.tableview_ri_cxc.fld_UserColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_EstadoNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_EstadoColumn)
        End Function
        
        Public Sub Setfld_EstadoNull()
            Me(Me.tableview_ri_cxc.fld_EstadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_prestamoNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_id_prestamoColumn)
        End Function
        
        Public Sub Setfld_id_prestamoNull()
            Me(Me.tableview_ri_cxc.fld_id_prestamoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_interes_cobradoNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_interes_cobradoColumn)
        End Function
        
        Public Sub Setfld_interes_cobradoNull()
            Me(Me.tableview_ri_cxc.fld_interes_cobradoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_capital_cobradoNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_capital_cobradoColumn)
        End Function
        
        Public Sub Setfld_capital_cobradoNull()
            Me(Me.tableview_ri_cxc.fld_capital_cobradoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_mora_cobradaNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_mora_cobradaColumn)
        End Function
        
        Public Sub Setfld_mora_cobradaNull()
            Me(Me.tableview_ri_cxc.fld_mora_cobradaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_conceptoNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_conceptoColumn)
        End Function
        
        Public Sub Setfld_conceptoNull()
            Me(Me.tableview_ri_cxc.fld_conceptoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_socioNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_socioColumn)
        End Function
        
        Public Sub Setfld_socioNull()
            Me(Me.tableview_ri_cxc.fld_socioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bce_actualNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_bce_actualColumn)
        End Function
        
        Public Sub Setfld_bce_actualNull()
            Me(Me.tableview_ri_cxc.fld_bce_actualColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bce_anteriorNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_bce_anteriorColumn)
        End Function
        
        Public Sub Setfld_bce_anteriorNull()
            Me(Me.tableview_ri_cxc.fld_bce_anteriorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_adelantoNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_adelantoColumn)
        End Function
        
        Public Sub Setfld_adelantoNull()
            Me(Me.tableview_ri_cxc.fld_adelantoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_adelanto_aplicadoNull() As Boolean
            Return Me.IsNull(Me.tableview_ri_cxc.fld_adelanto_aplicadoColumn)
        End Function
        
        Public Sub Setfld_adelanto_aplicadoNull()
            Me(Me.tableview_ri_cxc.fld_adelanto_aplicadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Gettbl_recibo_ingresos_imprimirRows() As tbl_recibo_ingresos_imprimirRow()
            Return CType(Me.GetChildRows(Me.Table.ChildRelations("view_ri_cxc_tbl_recibo_ingresos_imprimir")),tbl_recibo_ingresos_imprimirRow())
        End Function
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_ri_cxcRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As view_ri_cxcRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As view_ri_cxcRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As view_ri_cxcRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_recibo_ingresos_imprimirDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnReciboNo As DataColumn
        
        Private columnFechaRecibo As DataColumn
        
        Private columnCliente As DataColumn
        
        Private columnPrestamoNo As DataColumn
        
        Private columnMontoPrestamo As DataColumn
        
        Private columnFechaVencePrestamo As DataColumn
        
        Private columnMontoCuota As DataColumn
        
        Private columnCapitalPagado As DataColumn
        
        Private columnInterePagado As DataColumn
        
        Private columnMoraPagada As DataColumn
        
        Private columnMontoRecibido As DataColumn
        
        Private columnCapitalAdeudado As DataColumn
        
        Private columnAtraso As DataColumn
        
        Private columnConcepto As DataColumn
        
        Private columnUsuario As DataColumn
        
        Private columnOtroMontoPagado As DataColumn
        
        Private columnview_ri_cxc_Id As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_recibo_ingresos_imprimir")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property ReciboNoColumn As DataColumn
            Get
                Return Me.columnReciboNo
            End Get
        End Property
        
        Friend ReadOnly Property FechaReciboColumn As DataColumn
            Get
                Return Me.columnFechaRecibo
            End Get
        End Property
        
        Friend ReadOnly Property ClienteColumn As DataColumn
            Get
                Return Me.columnCliente
            End Get
        End Property
        
        Friend ReadOnly Property PrestamoNoColumn As DataColumn
            Get
                Return Me.columnPrestamoNo
            End Get
        End Property
        
        Friend ReadOnly Property MontoPrestamoColumn As DataColumn
            Get
                Return Me.columnMontoPrestamo
            End Get
        End Property
        
        Friend ReadOnly Property FechaVencePrestamoColumn As DataColumn
            Get
                Return Me.columnFechaVencePrestamo
            End Get
        End Property
        
        Friend ReadOnly Property MontoCuotaColumn As DataColumn
            Get
                Return Me.columnMontoCuota
            End Get
        End Property
        
        Friend ReadOnly Property CapitalPagadoColumn As DataColumn
            Get
                Return Me.columnCapitalPagado
            End Get
        End Property
        
        Friend ReadOnly Property InterePagadoColumn As DataColumn
            Get
                Return Me.columnInterePagado
            End Get
        End Property
        
        Friend ReadOnly Property MoraPagadaColumn As DataColumn
            Get
                Return Me.columnMoraPagada
            End Get
        End Property
        
        Friend ReadOnly Property MontoRecibidoColumn As DataColumn
            Get
                Return Me.columnMontoRecibido
            End Get
        End Property
        
        Friend ReadOnly Property CapitalAdeudadoColumn As DataColumn
            Get
                Return Me.columnCapitalAdeudado
            End Get
        End Property
        
        Friend ReadOnly Property AtrasoColumn As DataColumn
            Get
                Return Me.columnAtraso
            End Get
        End Property
        
        Friend ReadOnly Property ConceptoColumn As DataColumn
            Get
                Return Me.columnConcepto
            End Get
        End Property
        
        Friend ReadOnly Property UsuarioColumn As DataColumn
            Get
                Return Me.columnUsuario
            End Get
        End Property
        
        Friend ReadOnly Property OtroMontoPagadoColumn As DataColumn
            Get
                Return Me.columnOtroMontoPagado
            End Get
        End Property
        
        Friend ReadOnly Property view_ri_cxc_IdColumn As DataColumn
            Get
                Return Me.columnview_ri_cxc_Id
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_recibo_ingresos_imprimirRow
            Get
                Return CType(Me.Rows(index),tbl_recibo_ingresos_imprimirRow)
            End Get
        End Property
        
        Public Event tbl_recibo_ingresos_imprimirRowChanged As tbl_recibo_ingresos_imprimirRowChangeEventHandler
        
        Public Event tbl_recibo_ingresos_imprimirRowChanging As tbl_recibo_ingresos_imprimirRowChangeEventHandler
        
        Public Event tbl_recibo_ingresos_imprimirRowDeleted As tbl_recibo_ingresos_imprimirRowChangeEventHandler
        
        Public Event tbl_recibo_ingresos_imprimirRowDeleting As tbl_recibo_ingresos_imprimirRowChangeEventHandler
        
        Public Overloads Sub Addtbl_recibo_ingresos_imprimirRow(ByVal row As tbl_recibo_ingresos_imprimirRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_recibo_ingresos_imprimirRow( _
                    ByVal ReciboNo As Integer,  _
                    ByVal FechaRecibo As Date,  _
                    ByVal Cliente As String,  _
                    ByVal PrestamoNo As Integer,  _
                    ByVal MontoPrestamo As Double,  _
                    ByVal FechaVencePrestamo As Date,  _
                    ByVal MontoCuota As Double,  _
                    ByVal CapitalPagado As Double,  _
                    ByVal InterePagado As Double,  _
                    ByVal MoraPagada As Double,  _
                    ByVal MontoRecibido As Double,  _
                    ByVal CapitalAdeudado As Double,  _
                    ByVal Atraso As Double,  _
                    ByVal Concepto As String,  _
                    ByVal Usuario As String,  _
                    ByVal OtroMontoPagado As Double,  _
                    ByVal parentview_ri_cxcRowByview_ri_cxc_tbl_recibo_ingresos_imprimir As view_ri_cxcRow) As tbl_recibo_ingresos_imprimirRow
            Dim rowtbl_recibo_ingresos_imprimirRow As tbl_recibo_ingresos_imprimirRow = CType(Me.NewRow,tbl_recibo_ingresos_imprimirRow)
            rowtbl_recibo_ingresos_imprimirRow.ItemArray = New Object() {ReciboNo, FechaRecibo, Cliente, PrestamoNo, MontoPrestamo, FechaVencePrestamo, MontoCuota, CapitalPagado, InterePagado, MoraPagada, MontoRecibido, CapitalAdeudado, Atraso, Concepto, Usuario, OtroMontoPagado, parentview_ri_cxcRowByview_ri_cxc_tbl_recibo_ingresos_imprimir(66)}
            Me.Rows.Add(rowtbl_recibo_ingresos_imprimirRow)
            Return rowtbl_recibo_ingresos_imprimirRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_recibo_ingresos_imprimirDataTable = CType(MyBase.Clone,tbl_recibo_ingresos_imprimirDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_recibo_ingresos_imprimirDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnReciboNo = Me.Columns("ReciboNo")
            Me.columnFechaRecibo = Me.Columns("FechaRecibo")
            Me.columnCliente = Me.Columns("Cliente")
            Me.columnPrestamoNo = Me.Columns("PrestamoNo")
            Me.columnMontoPrestamo = Me.Columns("MontoPrestamo")
            Me.columnFechaVencePrestamo = Me.Columns("FechaVencePrestamo")
            Me.columnMontoCuota = Me.Columns("MontoCuota")
            Me.columnCapitalPagado = Me.Columns("CapitalPagado")
            Me.columnInterePagado = Me.Columns("InterePagado")
            Me.columnMoraPagada = Me.Columns("MoraPagada")
            Me.columnMontoRecibido = Me.Columns("MontoRecibido")
            Me.columnCapitalAdeudado = Me.Columns("CapitalAdeudado")
            Me.columnAtraso = Me.Columns("Atraso")
            Me.columnConcepto = Me.Columns("Concepto")
            Me.columnUsuario = Me.Columns("Usuario")
            Me.columnOtroMontoPagado = Me.Columns("OtroMontoPagado")
            Me.columnview_ri_cxc_Id = Me.Columns("view_ri_cxc_Id")
        End Sub
        
        Private Sub InitClass()
            Me.columnReciboNo = New DataColumn("ReciboNo", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnReciboNo)
            Me.columnFechaRecibo = New DataColumn("FechaRecibo", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaRecibo)
            Me.columnCliente = New DataColumn("Cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCliente)
            Me.columnPrestamoNo = New DataColumn("PrestamoNo", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPrestamoNo)
            Me.columnMontoPrestamo = New DataColumn("MontoPrestamo", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMontoPrestamo)
            Me.columnFechaVencePrestamo = New DataColumn("FechaVencePrestamo", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaVencePrestamo)
            Me.columnMontoCuota = New DataColumn("MontoCuota", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMontoCuota)
            Me.columnCapitalPagado = New DataColumn("CapitalPagado", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCapitalPagado)
            Me.columnInterePagado = New DataColumn("InterePagado", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnInterePagado)
            Me.columnMoraPagada = New DataColumn("MoraPagada", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMoraPagada)
            Me.columnMontoRecibido = New DataColumn("MontoRecibido", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMontoRecibido)
            Me.columnCapitalAdeudado = New DataColumn("CapitalAdeudado", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCapitalAdeudado)
            Me.columnAtraso = New DataColumn("Atraso", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnAtraso)
            Me.columnConcepto = New DataColumn("Concepto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnConcepto)
            Me.columnUsuario = New DataColumn("Usuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnUsuario)
            Me.columnOtroMontoPagado = New DataColumn("OtroMontoPagado", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnOtroMontoPagado)
            Me.columnview_ri_cxc_Id = New DataColumn("view_ri_cxc_Id", GetType(System.Int32), Nothing, System.Data.MappingType.Hidden)
            Me.Columns.Add(Me.columnview_ri_cxc_Id)
            Me.columnOtroMontoPagado.AllowDBNull = false
        End Sub
        
        Public Function Newtbl_recibo_ingresos_imprimirRow() As tbl_recibo_ingresos_imprimirRow
            Return CType(Me.NewRow,tbl_recibo_ingresos_imprimirRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_recibo_ingresos_imprimirRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_recibo_ingresos_imprimirRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_recibo_ingresos_imprimirRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_recibo_ingresos_imprimirRowChanged(Me, New tbl_recibo_ingresos_imprimirRowChangeEvent(CType(e.Row,tbl_recibo_ingresos_imprimirRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_recibo_ingresos_imprimirRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_recibo_ingresos_imprimirRowChanging(Me, New tbl_recibo_ingresos_imprimirRowChangeEvent(CType(e.Row,tbl_recibo_ingresos_imprimirRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_recibo_ingresos_imprimirRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_recibo_ingresos_imprimirRowDeleted(Me, New tbl_recibo_ingresos_imprimirRowChangeEvent(CType(e.Row,tbl_recibo_ingresos_imprimirRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_recibo_ingresos_imprimirRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_recibo_ingresos_imprimirRowDeleting(Me, New tbl_recibo_ingresos_imprimirRowChangeEvent(CType(e.Row,tbl_recibo_ingresos_imprimirRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_recibo_ingresos_imprimirRow(ByVal row As tbl_recibo_ingresos_imprimirRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_recibo_ingresos_imprimirRow
        Inherits DataRow
        
        Private tabletbl_recibo_ingresos_imprimir As tbl_recibo_ingresos_imprimirDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_recibo_ingresos_imprimir = CType(Me.Table,tbl_recibo_ingresos_imprimirDataTable)
        End Sub
        
        Public Property ReciboNo As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_imprimir.ReciboNoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_imprimir.ReciboNoColumn) = value
            End Set
        End Property
        
        Public Property FechaRecibo As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_imprimir.FechaReciboColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_imprimir.FechaReciboColumn) = value
            End Set
        End Property
        
        Public Property Cliente As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_imprimir.ClienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_imprimir.ClienteColumn) = value
            End Set
        End Property
        
        Public Property PrestamoNo As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_imprimir.PrestamoNoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_imprimir.PrestamoNoColumn) = value
            End Set
        End Property
        
        Public Property MontoPrestamo As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_imprimir.MontoPrestamoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_imprimir.MontoPrestamoColumn) = value
            End Set
        End Property
        
        Public Property FechaVencePrestamo As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_imprimir.FechaVencePrestamoColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_imprimir.FechaVencePrestamoColumn) = value
            End Set
        End Property
        
        Public Property MontoCuota As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_imprimir.MontoCuotaColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_imprimir.MontoCuotaColumn) = value
            End Set
        End Property
        
        Public Property CapitalPagado As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_imprimir.CapitalPagadoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_imprimir.CapitalPagadoColumn) = value
            End Set
        End Property
        
        Public Property InterePagado As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_imprimir.InterePagadoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_imprimir.InterePagadoColumn) = value
            End Set
        End Property
        
        Public Property MoraPagada As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_imprimir.MoraPagadaColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_imprimir.MoraPagadaColumn) = value
            End Set
        End Property
        
        Public Property MontoRecibido As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_imprimir.MontoRecibidoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_imprimir.MontoRecibidoColumn) = value
            End Set
        End Property
        
        Public Property CapitalAdeudado As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_imprimir.CapitalAdeudadoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_imprimir.CapitalAdeudadoColumn) = value
            End Set
        End Property
        
        Public Property Atraso As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_imprimir.AtrasoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_imprimir.AtrasoColumn) = value
            End Set
        End Property
        
        Public Property Concepto As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_imprimir.ConceptoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_imprimir.ConceptoColumn) = value
            End Set
        End Property
        
        Public Property Usuario As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_imprimir.UsuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_imprimir.UsuarioColumn) = value
            End Set
        End Property
        
        Public Property OtroMontoPagado As Double
            Get
                Return CType(Me(Me.tabletbl_recibo_ingresos_imprimir.OtroMontoPagadoColumn),Double)
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_imprimir.OtroMontoPagadoColumn) = value
            End Set
        End Property
        
        Public Property view_ri_cxcRow As view_ri_cxcRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("view_ri_cxc_tbl_recibo_ingresos_imprimir")),view_ri_cxcRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("view_ri_cxc_tbl_recibo_ingresos_imprimir"))
            End Set
        End Property
        
        Public Function IsReciboNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_imprimir.ReciboNoColumn)
        End Function
        
        Public Sub SetReciboNoNull()
            Me(Me.tabletbl_recibo_ingresos_imprimir.ReciboNoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaReciboNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_imprimir.FechaReciboColumn)
        End Function
        
        Public Sub SetFechaReciboNull()
            Me(Me.tabletbl_recibo_ingresos_imprimir.FechaReciboColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsClienteNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_imprimir.ClienteColumn)
        End Function
        
        Public Sub SetClienteNull()
            Me(Me.tabletbl_recibo_ingresos_imprimir.ClienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsPrestamoNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_imprimir.PrestamoNoColumn)
        End Function
        
        Public Sub SetPrestamoNoNull()
            Me(Me.tabletbl_recibo_ingresos_imprimir.PrestamoNoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMontoPrestamoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_imprimir.MontoPrestamoColumn)
        End Function
        
        Public Sub SetMontoPrestamoNull()
            Me(Me.tabletbl_recibo_ingresos_imprimir.MontoPrestamoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaVencePrestamoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_imprimir.FechaVencePrestamoColumn)
        End Function
        
        Public Sub SetFechaVencePrestamoNull()
            Me(Me.tabletbl_recibo_ingresos_imprimir.FechaVencePrestamoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMontoCuotaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_imprimir.MontoCuotaColumn)
        End Function
        
        Public Sub SetMontoCuotaNull()
            Me(Me.tabletbl_recibo_ingresos_imprimir.MontoCuotaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCapitalPagadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_imprimir.CapitalPagadoColumn)
        End Function
        
        Public Sub SetCapitalPagadoNull()
            Me(Me.tabletbl_recibo_ingresos_imprimir.CapitalPagadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsInterePagadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_imprimir.InterePagadoColumn)
        End Function
        
        Public Sub SetInterePagadoNull()
            Me(Me.tabletbl_recibo_ingresos_imprimir.InterePagadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMoraPagadaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_imprimir.MoraPagadaColumn)
        End Function
        
        Public Sub SetMoraPagadaNull()
            Me(Me.tabletbl_recibo_ingresos_imprimir.MoraPagadaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMontoRecibidoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_imprimir.MontoRecibidoColumn)
        End Function
        
        Public Sub SetMontoRecibidoNull()
            Me(Me.tabletbl_recibo_ingresos_imprimir.MontoRecibidoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCapitalAdeudadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_imprimir.CapitalAdeudadoColumn)
        End Function
        
        Public Sub SetCapitalAdeudadoNull()
            Me(Me.tabletbl_recibo_ingresos_imprimir.CapitalAdeudadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsAtrasoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_imprimir.AtrasoColumn)
        End Function
        
        Public Sub SetAtrasoNull()
            Me(Me.tabletbl_recibo_ingresos_imprimir.AtrasoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsConceptoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_imprimir.ConceptoColumn)
        End Function
        
        Public Sub SetConceptoNull()
            Me(Me.tabletbl_recibo_ingresos_imprimir.ConceptoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsUsuarioNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_imprimir.UsuarioColumn)
        End Function
        
        Public Sub SetUsuarioNull()
            Me(Me.tabletbl_recibo_ingresos_imprimir.UsuarioColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_recibo_ingresos_imprimirRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_recibo_ingresos_imprimirRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_recibo_ingresos_imprimirRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_recibo_ingresos_imprimirRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_cuotas_todasDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id As DataColumn
        
        Private columnfld_FullName As DataColumn
        
        Private columnfld_apodo As DataColumn
        
        Private columnfld_Identity As DataColumn
        
        Private columnfld_Phone As DataColumn
        
        Private columnfld_Phone2 As DataColumn
        
        Private columnfld_Address As DataColumn
        
        Private columnfld_City As DataColumn
        
        Private columnfld_Status As DataColumn
        
        Private columnfld_bce As DataColumn
        
        Private columnfld_cod_zona As DataColumn
        
        Private columnfld_zona As DataColumn
        
        Private columnfld_nombre_con As DataColumn
        
        Private columnfld_apodo_con As DataColumn
        
        Private columnfld_cedula_con As DataColumn
        
        Private columnfld_telefono_con As DataColumn
        
        Private columnfld_celular_con As DataColumn
        
        Private columnfld_ref_personales_cliente As DataColumn
        
        Private columnfld_ref_comerciales_cliente As DataColumn
        
        Private columnfld_nombre_gar As DataColumn
        
        Private columnfld_apodo_gar As DataColumn
        
        Private columnfld_cedula_gar As DataColumn
        
        Private columnfld_telefono_gar As DataColumn
        
        Private columnfld_celular_gar As DataColumn
        
        Private columnfld_direccion_gar As DataColumn
        
        Private columnfld_ciudad_gar As DataColumn
        
        Private columnfld_ref_personales_gar As DataColumn
        
        Private columnfld_ref_comerciales_gar As DataColumn
        
        Private columnfld_ingresos_mesuales As DataColumn
        
        Private columnfld_nombre_banco1 As DataColumn
        
        Private columnfld_cuenta_banco1 As DataColumn
        
        Private columnfld_nombre_banco2 As DataColumn
        
        Private columnfld_cuenta_banco2 As DataColumn
        
        Private columnfld_otra_informacion As DataColumn
        
        Private columnfld_nombre_con_gar As DataColumn
        
        Private columnfld_apodo_con_gar As DataColumn
        
        Private columnfld_cedula_con_gar As DataColumn
        
        Private columnfld_telefono_con_gar As DataColumn
        
        Private columnfld_celular_con_gar As DataColumn
        
        Private columnfld_edad As DataColumn
        
        Private columnfld_estado_civil As DataColumn
        
        Private columnfld_edad_gar As DataColumn
        
        Private columnfld_estado_civil_gar As DataColumn
        
        Private columnfld_ocupacion_cliente As DataColumn
        
        Private columnfld_ocupacion_gar As DataColumn
        
        Private columnfld_id_cuotas As DataColumn
        
        Private columnfld_no_cuotas As DataColumn
        
        Private columnfld_id_del_cliente_cuotas As DataColumn
        
        Private columnfld_id_del_prestamo As DataColumn
        
        Private columnfld_fecha_entrega_cuotas As DataColumn
        
        Private columnfld_fecha_termina_cuotas As DataColumn
        
        Private columnfld_capital_cuota As DataColumn
        
        Private columnfld_interes_cuota As DataColumn
        
        Private columnfld_monto_cuotas As DataColumn
        
        Private columnfld_abono_cuotas As DataColumn
        
        Private columnfld_balance_cuotas As DataColumn
        
        Private columnfld_usuario_cuotas As DataColumn
        
        Private columnfld_fecha_ultimo_abono_cuotas As DataColumn
        
        Private columnfld_status_cuotas As DataColumn
        
        Private columnfld_pendiente_amortizar As DataColumn
        
        Private columnfld_total_amortizado As DataColumn
        
        Private columnfld_capital_cuota_abono As DataColumn
        
        Private columnfld_capital_cuota_balance As DataColumn
        
        Private columnfld_interes_cuota_abono As DataColumn
        
        Private columnfld_interes_cuota_balance As DataColumn
        
        Private columnfld_ultimo_abono_interes As DataColumn
        
        Private columnfld_ultimo_abono_capital As DataColumn
        
        Private columnfld_socio As DataColumn
        
        Friend Sub New()
            MyBase.New("view_cuotas_todas")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_FullNameColumn As DataColumn
            Get
                Return Me.columnfld_FullName
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodoColumn As DataColumn
            Get
                Return Me.columnfld_apodo
            End Get
        End Property
        
        Friend ReadOnly Property fld_IdentityColumn As DataColumn
            Get
                Return Me.columnfld_Identity
            End Get
        End Property
        
        Friend ReadOnly Property fld_PhoneColumn As DataColumn
            Get
                Return Me.columnfld_Phone
            End Get
        End Property
        
        Friend ReadOnly Property fld_Phone2Column As DataColumn
            Get
                Return Me.columnfld_Phone2
            End Get
        End Property
        
        Friend ReadOnly Property fld_AddressColumn As DataColumn
            Get
                Return Me.columnfld_Address
            End Get
        End Property
        
        Friend ReadOnly Property fld_CityColumn As DataColumn
            Get
                Return Me.columnfld_City
            End Get
        End Property
        
        Friend ReadOnly Property fld_StatusColumn As DataColumn
            Get
                Return Me.columnfld_Status
            End Get
        End Property
        
        Friend ReadOnly Property fld_bceColumn As DataColumn
            Get
                Return Me.columnfld_bce
            End Get
        End Property
        
        Friend ReadOnly Property fld_cod_zonaColumn As DataColumn
            Get
                Return Me.columnfld_cod_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_zonaColumn As DataColumn
            Get
                Return Me.columnfld_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_conColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_conColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_conColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_conColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_conColumn As DataColumn
            Get
                Return Me.columnfld_celular_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_direccion_garColumn As DataColumn
            Get
                Return Me.columnfld_direccion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ciudad_garColumn As DataColumn
            Get
                Return Me.columnfld_ciudad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ingresos_mesualesColumn As DataColumn
            Get
                Return Me.columnfld_ingresos_mesuales
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco1Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco1Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco2Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco2Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_otra_informacionColumn As DataColumn
            Get
                Return Me.columnfld_otra_informacion
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_con_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_con_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_con_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_con_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_con_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_edadColumn As DataColumn
            Get
                Return Me.columnfld_edad
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civilColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil
            End Get
        End Property
        
        Friend ReadOnly Property fld_edad_garColumn As DataColumn
            Get
                Return Me.columnfld_edad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civil_garColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ocupacion_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ocupacion_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ocupacion_garColumn As DataColumn
            Get
                Return Me.columnfld_ocupacion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_id_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_no_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_no_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_del_cliente_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_id_del_cliente_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_del_prestamoColumn As DataColumn
            Get
                Return Me.columnfld_id_del_prestamo
            End Get
        End Property
        
        Friend ReadOnly Property fld_fecha_entrega_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_fecha_entrega_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_fecha_termina_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_fecha_termina_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_capital_cuotaColumn As DataColumn
            Get
                Return Me.columnfld_capital_cuota
            End Get
        End Property
        
        Friend ReadOnly Property fld_interes_cuotaColumn As DataColumn
            Get
                Return Me.columnfld_interes_cuota
            End Get
        End Property
        
        Friend ReadOnly Property fld_monto_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_monto_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_abono_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_abono_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_balance_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_balance_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_usuario_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_usuario_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_fecha_ultimo_abono_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_fecha_ultimo_abono_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_status_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_status_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_pendiente_amortizarColumn As DataColumn
            Get
                Return Me.columnfld_pendiente_amortizar
            End Get
        End Property
        
        Friend ReadOnly Property fld_total_amortizadoColumn As DataColumn
            Get
                Return Me.columnfld_total_amortizado
            End Get
        End Property
        
        Friend ReadOnly Property fld_capital_cuota_abonoColumn As DataColumn
            Get
                Return Me.columnfld_capital_cuota_abono
            End Get
        End Property
        
        Friend ReadOnly Property fld_capital_cuota_balanceColumn As DataColumn
            Get
                Return Me.columnfld_capital_cuota_balance
            End Get
        End Property
        
        Friend ReadOnly Property fld_interes_cuota_abonoColumn As DataColumn
            Get
                Return Me.columnfld_interes_cuota_abono
            End Get
        End Property
        
        Friend ReadOnly Property fld_interes_cuota_balanceColumn As DataColumn
            Get
                Return Me.columnfld_interes_cuota_balance
            End Get
        End Property
        
        Friend ReadOnly Property fld_ultimo_abono_interesColumn As DataColumn
            Get
                Return Me.columnfld_ultimo_abono_interes
            End Get
        End Property
        
        Friend ReadOnly Property fld_ultimo_abono_capitalColumn As DataColumn
            Get
                Return Me.columnfld_ultimo_abono_capital
            End Get
        End Property
        
        Friend ReadOnly Property fld_socioColumn As DataColumn
            Get
                Return Me.columnfld_socio
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_cuotas_todasRow
            Get
                Return CType(Me.Rows(index),view_cuotas_todasRow)
            End Get
        End Property
        
        Public Event view_cuotas_todasRowChanged As view_cuotas_todasRowChangeEventHandler
        
        Public Event view_cuotas_todasRowChanging As view_cuotas_todasRowChangeEventHandler
        
        Public Event view_cuotas_todasRowDeleted As view_cuotas_todasRowChangeEventHandler
        
        Public Event view_cuotas_todasRowDeleting As view_cuotas_todasRowChangeEventHandler
        
        Public Overloads Sub Addview_cuotas_todasRow(ByVal row As view_cuotas_todasRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addview_cuotas_todasRow( _
                    ByVal fld_FullName As String,  _
                    ByVal fld_apodo As String,  _
                    ByVal fld_Identity As String,  _
                    ByVal fld_Phone As String,  _
                    ByVal fld_Phone2 As String,  _
                    ByVal fld_Address As String,  _
                    ByVal fld_City As String,  _
                    ByVal fld_Status As String,  _
                    ByVal fld_bce As Double,  _
                    ByVal fld_cod_zona As Integer,  _
                    ByVal fld_zona As String,  _
                    ByVal fld_nombre_con As String,  _
                    ByVal fld_apodo_con As String,  _
                    ByVal fld_cedula_con As String,  _
                    ByVal fld_telefono_con As String,  _
                    ByVal fld_celular_con As String,  _
                    ByVal fld_ref_personales_cliente As String,  _
                    ByVal fld_ref_comerciales_cliente As String,  _
                    ByVal fld_nombre_gar As String,  _
                    ByVal fld_apodo_gar As String,  _
                    ByVal fld_cedula_gar As String,  _
                    ByVal fld_telefono_gar As String,  _
                    ByVal fld_celular_gar As String,  _
                    ByVal fld_direccion_gar As String,  _
                    ByVal fld_ciudad_gar As String,  _
                    ByVal fld_ref_personales_gar As String,  _
                    ByVal fld_ref_comerciales_gar As String,  _
                    ByVal fld_ingresos_mesuales As Double,  _
                    ByVal fld_nombre_banco1 As String,  _
                    ByVal fld_cuenta_banco1 As String,  _
                    ByVal fld_nombre_banco2 As String,  _
                    ByVal fld_cuenta_banco2 As String,  _
                    ByVal fld_otra_informacion As String,  _
                    ByVal fld_nombre_con_gar As String,  _
                    ByVal fld_apodo_con_gar As String,  _
                    ByVal fld_cedula_con_gar As String,  _
                    ByVal fld_telefono_con_gar As String,  _
                    ByVal fld_celular_con_gar As String,  _
                    ByVal fld_edad As Integer,  _
                    ByVal fld_estado_civil As String,  _
                    ByVal fld_edad_gar As Integer,  _
                    ByVal fld_estado_civil_gar As String,  _
                    ByVal fld_ocupacion_cliente As String,  _
                    ByVal fld_ocupacion_gar As String,  _
                    ByVal fld_no_cuotas As String,  _
                    ByVal fld_id_del_cliente_cuotas As Integer,  _
                    ByVal fld_id_del_prestamo As Integer,  _
                    ByVal fld_fecha_entrega_cuotas As Date,  _
                    ByVal fld_fecha_termina_cuotas As Date,  _
                    ByVal fld_capital_cuota As Double,  _
                    ByVal fld_interes_cuota As Double,  _
                    ByVal fld_monto_cuotas As Double,  _
                    ByVal fld_abono_cuotas As Double,  _
                    ByVal fld_balance_cuotas As Double,  _
                    ByVal fld_usuario_cuotas As String,  _
                    ByVal fld_fecha_ultimo_abono_cuotas As Date,  _
                    ByVal fld_status_cuotas As String,  _
                    ByVal fld_pendiente_amortizar As Double,  _
                    ByVal fld_total_amortizado As Double,  _
                    ByVal fld_capital_cuota_abono As Double,  _
                    ByVal fld_capital_cuota_balance As Double,  _
                    ByVal fld_interes_cuota_abono As Double,  _
                    ByVal fld_interes_cuota_balance As Double,  _
                    ByVal fld_ultimo_abono_interes As Double,  _
                    ByVal fld_ultimo_abono_capital As Double,  _
                    ByVal fld_socio As String) As view_cuotas_todasRow
            Dim rowview_cuotas_todasRow As view_cuotas_todasRow = CType(Me.NewRow,view_cuotas_todasRow)
            rowview_cuotas_todasRow.ItemArray = New Object() {Nothing, fld_FullName, fld_apodo, fld_Identity, fld_Phone, fld_Phone2, fld_Address, fld_City, fld_Status, fld_bce, fld_cod_zona, fld_zona, fld_nombre_con, fld_apodo_con, fld_cedula_con, fld_telefono_con, fld_celular_con, fld_ref_personales_cliente, fld_ref_comerciales_cliente, fld_nombre_gar, fld_apodo_gar, fld_cedula_gar, fld_telefono_gar, fld_celular_gar, fld_direccion_gar, fld_ciudad_gar, fld_ref_personales_gar, fld_ref_comerciales_gar, fld_ingresos_mesuales, fld_nombre_banco1, fld_cuenta_banco1, fld_nombre_banco2, fld_cuenta_banco2, fld_otra_informacion, fld_nombre_con_gar, fld_apodo_con_gar, fld_cedula_con_gar, fld_telefono_con_gar, fld_celular_con_gar, fld_edad, fld_estado_civil, fld_edad_gar, fld_estado_civil_gar, fld_ocupacion_cliente, fld_ocupacion_gar, Nothing, fld_no_cuotas, fld_id_del_cliente_cuotas, fld_id_del_prestamo, fld_fecha_entrega_cuotas, fld_fecha_termina_cuotas, fld_capital_cuota, fld_interes_cuota, fld_monto_cuotas, fld_abono_cuotas, fld_balance_cuotas, fld_usuario_cuotas, fld_fecha_ultimo_abono_cuotas, fld_status_cuotas, fld_pendiente_amortizar, fld_total_amortizado, fld_capital_cuota_abono, fld_capital_cuota_balance, fld_interes_cuota_abono, fld_interes_cuota_balance, fld_ultimo_abono_interes, fld_ultimo_abono_capital, fld_socio}
            Me.Rows.Add(rowview_cuotas_todasRow)
            Return rowview_cuotas_todasRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As view_cuotas_todasDataTable = CType(MyBase.Clone,view_cuotas_todasDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New view_cuotas_todasDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnfld_FullName = Me.Columns("fld_FullName")
            Me.columnfld_apodo = Me.Columns("fld_apodo")
            Me.columnfld_Identity = Me.Columns("fld_Identity")
            Me.columnfld_Phone = Me.Columns("fld_Phone")
            Me.columnfld_Phone2 = Me.Columns("fld_Phone2")
            Me.columnfld_Address = Me.Columns("fld_Address")
            Me.columnfld_City = Me.Columns("fld_City")
            Me.columnfld_Status = Me.Columns("fld_Status")
            Me.columnfld_bce = Me.Columns("fld_bce")
            Me.columnfld_cod_zona = Me.Columns("fld_cod_zona")
            Me.columnfld_zona = Me.Columns("fld_zona")
            Me.columnfld_nombre_con = Me.Columns("fld_nombre_con")
            Me.columnfld_apodo_con = Me.Columns("fld_apodo_con")
            Me.columnfld_cedula_con = Me.Columns("fld_cedula_con")
            Me.columnfld_telefono_con = Me.Columns("fld_telefono_con")
            Me.columnfld_celular_con = Me.Columns("fld_celular_con")
            Me.columnfld_ref_personales_cliente = Me.Columns("fld_ref_personales_cliente")
            Me.columnfld_ref_comerciales_cliente = Me.Columns("fld_ref_comerciales_cliente")
            Me.columnfld_nombre_gar = Me.Columns("fld_nombre_gar")
            Me.columnfld_apodo_gar = Me.Columns("fld_apodo_gar")
            Me.columnfld_cedula_gar = Me.Columns("fld_cedula_gar")
            Me.columnfld_telefono_gar = Me.Columns("fld_telefono_gar")
            Me.columnfld_celular_gar = Me.Columns("fld_celular_gar")
            Me.columnfld_direccion_gar = Me.Columns("fld_direccion_gar")
            Me.columnfld_ciudad_gar = Me.Columns("fld_ciudad_gar")
            Me.columnfld_ref_personales_gar = Me.Columns("fld_ref_personales_gar")
            Me.columnfld_ref_comerciales_gar = Me.Columns("fld_ref_comerciales_gar")
            Me.columnfld_ingresos_mesuales = Me.Columns("fld_ingresos_mesuales")
            Me.columnfld_nombre_banco1 = Me.Columns("fld_nombre_banco1")
            Me.columnfld_cuenta_banco1 = Me.Columns("fld_cuenta_banco1")
            Me.columnfld_nombre_banco2 = Me.Columns("fld_nombre_banco2")
            Me.columnfld_cuenta_banco2 = Me.Columns("fld_cuenta_banco2")
            Me.columnfld_otra_informacion = Me.Columns("fld_otra_informacion")
            Me.columnfld_nombre_con_gar = Me.Columns("fld_nombre_con_gar")
            Me.columnfld_apodo_con_gar = Me.Columns("fld_apodo_con_gar")
            Me.columnfld_cedula_con_gar = Me.Columns("fld_cedula_con_gar")
            Me.columnfld_telefono_con_gar = Me.Columns("fld_telefono_con_gar")
            Me.columnfld_celular_con_gar = Me.Columns("fld_celular_con_gar")
            Me.columnfld_edad = Me.Columns("fld_edad")
            Me.columnfld_estado_civil = Me.Columns("fld_estado_civil")
            Me.columnfld_edad_gar = Me.Columns("fld_edad_gar")
            Me.columnfld_estado_civil_gar = Me.Columns("fld_estado_civil_gar")
            Me.columnfld_ocupacion_cliente = Me.Columns("fld_ocupacion_cliente")
            Me.columnfld_ocupacion_gar = Me.Columns("fld_ocupacion_gar")
            Me.columnfld_id_cuotas = Me.Columns("fld_id_cuotas")
            Me.columnfld_no_cuotas = Me.Columns("fld_no_cuotas")
            Me.columnfld_id_del_cliente_cuotas = Me.Columns("fld_id_del_cliente_cuotas")
            Me.columnfld_id_del_prestamo = Me.Columns("fld_id_del_prestamo")
            Me.columnfld_fecha_entrega_cuotas = Me.Columns("fld_fecha_entrega_cuotas")
            Me.columnfld_fecha_termina_cuotas = Me.Columns("fld_fecha_termina_cuotas")
            Me.columnfld_capital_cuota = Me.Columns("fld_capital_cuota")
            Me.columnfld_interes_cuota = Me.Columns("fld_interes_cuota")
            Me.columnfld_monto_cuotas = Me.Columns("fld_monto_cuotas")
            Me.columnfld_abono_cuotas = Me.Columns("fld_abono_cuotas")
            Me.columnfld_balance_cuotas = Me.Columns("fld_balance_cuotas")
            Me.columnfld_usuario_cuotas = Me.Columns("fld_usuario_cuotas")
            Me.columnfld_fecha_ultimo_abono_cuotas = Me.Columns("fld_fecha_ultimo_abono_cuotas")
            Me.columnfld_status_cuotas = Me.Columns("fld_status_cuotas")
            Me.columnfld_pendiente_amortizar = Me.Columns("fld_pendiente_amortizar")
            Me.columnfld_total_amortizado = Me.Columns("fld_total_amortizado")
            Me.columnfld_capital_cuota_abono = Me.Columns("fld_capital_cuota_abono")
            Me.columnfld_capital_cuota_balance = Me.Columns("fld_capital_cuota_balance")
            Me.columnfld_interes_cuota_abono = Me.Columns("fld_interes_cuota_abono")
            Me.columnfld_interes_cuota_balance = Me.Columns("fld_interes_cuota_balance")
            Me.columnfld_ultimo_abono_interes = Me.Columns("fld_ultimo_abono_interes")
            Me.columnfld_ultimo_abono_capital = Me.Columns("fld_ultimo_abono_capital")
            Me.columnfld_socio = Me.Columns("fld_socio")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnfld_FullName = New DataColumn("fld_FullName", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_FullName)
            Me.columnfld_apodo = New DataColumn("fld_apodo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo)
            Me.columnfld_Identity = New DataColumn("fld_Identity", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Identity)
            Me.columnfld_Phone = New DataColumn("fld_Phone", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone)
            Me.columnfld_Phone2 = New DataColumn("fld_Phone2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone2)
            Me.columnfld_Address = New DataColumn("fld_Address", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Address)
            Me.columnfld_City = New DataColumn("fld_City", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_City)
            Me.columnfld_Status = New DataColumn("fld_Status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Status)
            Me.columnfld_bce = New DataColumn("fld_bce", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce)
            Me.columnfld_cod_zona = New DataColumn("fld_cod_zona", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cod_zona)
            Me.columnfld_zona = New DataColumn("fld_zona", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_zona)
            Me.columnfld_nombre_con = New DataColumn("fld_nombre_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con)
            Me.columnfld_apodo_con = New DataColumn("fld_apodo_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con)
            Me.columnfld_cedula_con = New DataColumn("fld_cedula_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con)
            Me.columnfld_telefono_con = New DataColumn("fld_telefono_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con)
            Me.columnfld_celular_con = New DataColumn("fld_celular_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con)
            Me.columnfld_ref_personales_cliente = New DataColumn("fld_ref_personales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_cliente)
            Me.columnfld_ref_comerciales_cliente = New DataColumn("fld_ref_comerciales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_cliente)
            Me.columnfld_nombre_gar = New DataColumn("fld_nombre_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_gar)
            Me.columnfld_apodo_gar = New DataColumn("fld_apodo_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_gar)
            Me.columnfld_cedula_gar = New DataColumn("fld_cedula_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_gar)
            Me.columnfld_telefono_gar = New DataColumn("fld_telefono_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_gar)
            Me.columnfld_celular_gar = New DataColumn("fld_celular_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_gar)
            Me.columnfld_direccion_gar = New DataColumn("fld_direccion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_direccion_gar)
            Me.columnfld_ciudad_gar = New DataColumn("fld_ciudad_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ciudad_gar)
            Me.columnfld_ref_personales_gar = New DataColumn("fld_ref_personales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_gar)
            Me.columnfld_ref_comerciales_gar = New DataColumn("fld_ref_comerciales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_gar)
            Me.columnfld_ingresos_mesuales = New DataColumn("fld_ingresos_mesuales", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ingresos_mesuales)
            Me.columnfld_nombre_banco1 = New DataColumn("fld_nombre_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco1)
            Me.columnfld_cuenta_banco1 = New DataColumn("fld_cuenta_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco1)
            Me.columnfld_nombre_banco2 = New DataColumn("fld_nombre_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco2)
            Me.columnfld_cuenta_banco2 = New DataColumn("fld_cuenta_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco2)
            Me.columnfld_otra_informacion = New DataColumn("fld_otra_informacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_otra_informacion)
            Me.columnfld_nombre_con_gar = New DataColumn("fld_nombre_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con_gar)
            Me.columnfld_apodo_con_gar = New DataColumn("fld_apodo_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con_gar)
            Me.columnfld_cedula_con_gar = New DataColumn("fld_cedula_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con_gar)
            Me.columnfld_telefono_con_gar = New DataColumn("fld_telefono_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con_gar)
            Me.columnfld_celular_con_gar = New DataColumn("fld_celular_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con_gar)
            Me.columnfld_edad = New DataColumn("fld_edad", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad)
            Me.columnfld_estado_civil = New DataColumn("fld_estado_civil", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil)
            Me.columnfld_edad_gar = New DataColumn("fld_edad_gar", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad_gar)
            Me.columnfld_estado_civil_gar = New DataColumn("fld_estado_civil_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil_gar)
            Me.columnfld_ocupacion_cliente = New DataColumn("fld_ocupacion_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ocupacion_cliente)
            Me.columnfld_ocupacion_gar = New DataColumn("fld_ocupacion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ocupacion_gar)
            Me.columnfld_id_cuotas = New DataColumn("fld_id_cuotas", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_cuotas)
            Me.columnfld_no_cuotas = New DataColumn("fld_no_cuotas", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_no_cuotas)
            Me.columnfld_id_del_cliente_cuotas = New DataColumn("fld_id_del_cliente_cuotas", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_del_cliente_cuotas)
            Me.columnfld_id_del_prestamo = New DataColumn("fld_id_del_prestamo", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_del_prestamo)
            Me.columnfld_fecha_entrega_cuotas = New DataColumn("fld_fecha_entrega_cuotas", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha_entrega_cuotas)
            Me.columnfld_fecha_termina_cuotas = New DataColumn("fld_fecha_termina_cuotas", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha_termina_cuotas)
            Me.columnfld_capital_cuota = New DataColumn("fld_capital_cuota", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_capital_cuota)
            Me.columnfld_interes_cuota = New DataColumn("fld_interes_cuota", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_interes_cuota)
            Me.columnfld_monto_cuotas = New DataColumn("fld_monto_cuotas", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto_cuotas)
            Me.columnfld_abono_cuotas = New DataColumn("fld_abono_cuotas", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_abono_cuotas)
            Me.columnfld_balance_cuotas = New DataColumn("fld_balance_cuotas", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_balance_cuotas)
            Me.columnfld_usuario_cuotas = New DataColumn("fld_usuario_cuotas", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_usuario_cuotas)
            Me.columnfld_fecha_ultimo_abono_cuotas = New DataColumn("fld_fecha_ultimo_abono_cuotas", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha_ultimo_abono_cuotas)
            Me.columnfld_status_cuotas = New DataColumn("fld_status_cuotas", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_status_cuotas)
            Me.columnfld_pendiente_amortizar = New DataColumn("fld_pendiente_amortizar", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_pendiente_amortizar)
            Me.columnfld_total_amortizado = New DataColumn("fld_total_amortizado", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_total_amortizado)
            Me.columnfld_capital_cuota_abono = New DataColumn("fld_capital_cuota_abono", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_capital_cuota_abono)
            Me.columnfld_capital_cuota_balance = New DataColumn("fld_capital_cuota_balance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_capital_cuota_balance)
            Me.columnfld_interes_cuota_abono = New DataColumn("fld_interes_cuota_abono", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_interes_cuota_abono)
            Me.columnfld_interes_cuota_balance = New DataColumn("fld_interes_cuota_balance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_interes_cuota_balance)
            Me.columnfld_ultimo_abono_interes = New DataColumn("fld_ultimo_abono_interes", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ultimo_abono_interes)
            Me.columnfld_ultimo_abono_capital = New DataColumn("fld_ultimo_abono_capital", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ultimo_abono_capital)
            Me.columnfld_socio = New DataColumn("fld_socio", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_socio)
            Me.columnfld_id.AutoIncrement = true
            Me.columnfld_id_cuotas.AutoIncrement = true
        End Sub
        
        Public Function Newview_cuotas_todasRow() As view_cuotas_todasRow
            Return CType(Me.NewRow,view_cuotas_todasRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New view_cuotas_todasRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(view_cuotas_todasRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_cuotas_todasRowChangedEvent) Is Nothing) Then
                RaiseEvent view_cuotas_todasRowChanged(Me, New view_cuotas_todasRowChangeEvent(CType(e.Row,view_cuotas_todasRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_cuotas_todasRowChangingEvent) Is Nothing) Then
                RaiseEvent view_cuotas_todasRowChanging(Me, New view_cuotas_todasRowChangeEvent(CType(e.Row,view_cuotas_todasRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_cuotas_todasRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_cuotas_todasRowDeleted(Me, New view_cuotas_todasRowChangeEvent(CType(e.Row,view_cuotas_todasRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_cuotas_todasRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_cuotas_todasRowDeleting(Me, New view_cuotas_todasRowChangeEvent(CType(e.Row,view_cuotas_todasRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeview_cuotas_todasRow(ByVal row As view_cuotas_todasRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_cuotas_todasRow
        Inherits DataRow
        
        Private tableview_cuotas_todas As view_cuotas_todasDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_cuotas_todas = CType(Me.Table,view_cuotas_todasDataTable)
        End Sub
        
        Public Property fld_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_idColumn) = value
            End Set
        End Property
        
        Public Property fld_FullName As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_FullNameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_FullNameColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_apodoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_apodoColumn) = value
            End Set
        End Property
        
        Public Property fld_Identity As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_IdentityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_IdentityColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_PhoneColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_PhoneColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_Phone2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_Phone2Column) = value
            End Set
        End Property
        
        Public Property fld_Address As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_AddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_AddressColumn) = value
            End Set
        End Property
        
        Public Property fld_City As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_CityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_CityColumn) = value
            End Set
        End Property
        
        Public Property fld_Status As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_StatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_StatusColumn) = value
            End Set
        End Property
        
        Public Property fld_bce As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_bceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_bceColumn) = value
            End Set
        End Property
        
        Public Property fld_cod_zona As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_cod_zonaColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_cod_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_zona As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_zonaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_nombre_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_nombre_conColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_apodo_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_apodo_conColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_cedula_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_cedula_conColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_telefono_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_telefono_conColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_celular_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_celular_conColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_ref_personales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_ref_personales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_ref_comerciales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_ref_comerciales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_nombre_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_nombre_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_apodo_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_apodo_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_cedula_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_cedula_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_telefono_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_telefono_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_celular_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_celular_garColumn) = value
            End Set
        End Property
        
        Public Property fld_direccion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_direccion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_direccion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ciudad_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_ciudad_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_ciudad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_ref_personales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_ref_personales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_ref_comerciales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_ref_comerciales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ingresos_mesuales As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_ingresos_mesualesColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_ingresos_mesualesColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_nombre_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_nombre_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_cuenta_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_cuenta_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_nombre_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_nombre_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_cuenta_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_cuenta_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_otra_informacion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_otra_informacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_otra_informacionColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_nombre_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_nombre_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_apodo_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_apodo_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_cedula_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_cedula_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_telefono_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_telefono_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_celular_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_celular_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_edad As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_edadColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_edadColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_estado_civilColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_estado_civilColumn) = value
            End Set
        End Property
        
        Public Property fld_edad_gar As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_edad_garColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_edad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_estado_civil_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_estado_civil_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ocupacion_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_ocupacion_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_ocupacion_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ocupacion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_ocupacion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_ocupacion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_id_cuotas As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_id_cuotasColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_id_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_no_cuotas As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_no_cuotasColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_no_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_id_del_cliente_cuotas As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_id_del_cliente_cuotasColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_id_del_cliente_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_id_del_prestamo As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_id_del_prestamoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_id_del_prestamoColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha_entrega_cuotas As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_fecha_entrega_cuotasColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_fecha_entrega_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha_termina_cuotas As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_fecha_termina_cuotasColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_fecha_termina_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_capital_cuota As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_capital_cuotaColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_capital_cuotaColumn) = value
            End Set
        End Property
        
        Public Property fld_interes_cuota As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_interes_cuotaColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_interes_cuotaColumn) = value
            End Set
        End Property
        
        Public Property fld_monto_cuotas As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_monto_cuotasColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_monto_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_abono_cuotas As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_abono_cuotasColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_abono_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_balance_cuotas As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_balance_cuotasColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_balance_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_usuario_cuotas As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_usuario_cuotasColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_usuario_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha_ultimo_abono_cuotas As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_fecha_ultimo_abono_cuotasColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_fecha_ultimo_abono_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_status_cuotas As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_status_cuotasColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_status_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_pendiente_amortizar As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_pendiente_amortizarColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_pendiente_amortizarColumn) = value
            End Set
        End Property
        
        Public Property fld_total_amortizado As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_total_amortizadoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_total_amortizadoColumn) = value
            End Set
        End Property
        
        Public Property fld_capital_cuota_abono As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_capital_cuota_abonoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_capital_cuota_abonoColumn) = value
            End Set
        End Property
        
        Public Property fld_capital_cuota_balance As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_capital_cuota_balanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_capital_cuota_balanceColumn) = value
            End Set
        End Property
        
        Public Property fld_interes_cuota_abono As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_interes_cuota_abonoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_interes_cuota_abonoColumn) = value
            End Set
        End Property
        
        Public Property fld_interes_cuota_balance As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_interes_cuota_balanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_interes_cuota_balanceColumn) = value
            End Set
        End Property
        
        Public Property fld_ultimo_abono_interes As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_ultimo_abono_interesColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_ultimo_abono_interesColumn) = value
            End Set
        End Property
        
        Public Property fld_ultimo_abono_capital As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_ultimo_abono_capitalColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_ultimo_abono_capitalColumn) = value
            End Set
        End Property
        
        Public Property fld_socio As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cuotas_todas.fld_socioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cuotas_todas.fld_socioColumn) = value
            End Set
        End Property
        
        Public Function Isfld_idNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_idColumn)
        End Function
        
        Public Sub Setfld_idNull()
            Me(Me.tableview_cuotas_todas.fld_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_FullNameNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_FullNameColumn)
        End Function
        
        Public Sub Setfld_FullNameNull()
            Me(Me.tableview_cuotas_todas.fld_FullNameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodoNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_apodoColumn)
        End Function
        
        Public Sub Setfld_apodoNull()
            Me(Me.tableview_cuotas_todas.fld_apodoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_IdentityNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_IdentityColumn)
        End Function
        
        Public Sub Setfld_IdentityNull()
            Me(Me.tableview_cuotas_todas.fld_IdentityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_PhoneNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_PhoneColumn)
        End Function
        
        Public Sub Setfld_PhoneNull()
            Me(Me.tableview_cuotas_todas.fld_PhoneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_Phone2Null() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_Phone2Column)
        End Function
        
        Public Sub Setfld_Phone2Null()
            Me(Me.tableview_cuotas_todas.fld_Phone2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_AddressNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_AddressColumn)
        End Function
        
        Public Sub Setfld_AddressNull()
            Me(Me.tableview_cuotas_todas.fld_AddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_CityNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_CityColumn)
        End Function
        
        Public Sub Setfld_CityNull()
            Me(Me.tableview_cuotas_todas.fld_CityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_StatusNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_StatusColumn)
        End Function
        
        Public Sub Setfld_StatusNull()
            Me(Me.tableview_cuotas_todas.fld_StatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bceNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_bceColumn)
        End Function
        
        Public Sub Setfld_bceNull()
            Me(Me.tableview_cuotas_todas.fld_bceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cod_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_cod_zonaColumn)
        End Function
        
        Public Sub Setfld_cod_zonaNull()
            Me(Me.tableview_cuotas_todas.fld_cod_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_zonaColumn)
        End Function
        
        Public Sub Setfld_zonaNull()
            Me(Me.tableview_cuotas_todas.fld_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_conNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_nombre_conColumn)
        End Function
        
        Public Sub Setfld_nombre_conNull()
            Me(Me.tableview_cuotas_todas.fld_nombre_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_conNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_apodo_conColumn)
        End Function
        
        Public Sub Setfld_apodo_conNull()
            Me(Me.tableview_cuotas_todas.fld_apodo_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_conNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_cedula_conColumn)
        End Function
        
        Public Sub Setfld_cedula_conNull()
            Me(Me.tableview_cuotas_todas.fld_cedula_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_conNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_telefono_conColumn)
        End Function
        
        Public Sub Setfld_telefono_conNull()
            Me(Me.tableview_cuotas_todas.fld_telefono_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_conNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_celular_conColumn)
        End Function
        
        Public Sub Setfld_celular_conNull()
            Me(Me.tableview_cuotas_todas.fld_celular_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_ref_personales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_personales_clienteNull()
            Me(Me.tableview_cuotas_todas.fld_ref_personales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_ref_comerciales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_clienteNull()
            Me(Me.tableview_cuotas_todas.fld_ref_comerciales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_nombre_garColumn)
        End Function
        
        Public Sub Setfld_nombre_garNull()
            Me(Me.tableview_cuotas_todas.fld_nombre_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_apodo_garColumn)
        End Function
        
        Public Sub Setfld_apodo_garNull()
            Me(Me.tableview_cuotas_todas.fld_apodo_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_cedula_garColumn)
        End Function
        
        Public Sub Setfld_cedula_garNull()
            Me(Me.tableview_cuotas_todas.fld_cedula_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_telefono_garColumn)
        End Function
        
        Public Sub Setfld_telefono_garNull()
            Me(Me.tableview_cuotas_todas.fld_telefono_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_celular_garColumn)
        End Function
        
        Public Sub Setfld_celular_garNull()
            Me(Me.tableview_cuotas_todas.fld_celular_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_direccion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_direccion_garColumn)
        End Function
        
        Public Sub Setfld_direccion_garNull()
            Me(Me.tableview_cuotas_todas.fld_direccion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ciudad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_ciudad_garColumn)
        End Function
        
        Public Sub Setfld_ciudad_garNull()
            Me(Me.tableview_cuotas_todas.fld_ciudad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_ref_personales_garColumn)
        End Function
        
        Public Sub Setfld_ref_personales_garNull()
            Me(Me.tableview_cuotas_todas.fld_ref_personales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_ref_comerciales_garColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_garNull()
            Me(Me.tableview_cuotas_todas.fld_ref_comerciales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ingresos_mesualesNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_ingresos_mesualesColumn)
        End Function
        
        Public Sub Setfld_ingresos_mesualesNull()
            Me(Me.tableview_cuotas_todas.fld_ingresos_mesualesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_nombre_banco1Column)
        End Function
        
        Public Sub Setfld_nombre_banco1Null()
            Me(Me.tableview_cuotas_todas.fld_nombre_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_cuenta_banco1Column)
        End Function
        
        Public Sub Setfld_cuenta_banco1Null()
            Me(Me.tableview_cuotas_todas.fld_cuenta_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_nombre_banco2Column)
        End Function
        
        Public Sub Setfld_nombre_banco2Null()
            Me(Me.tableview_cuotas_todas.fld_nombre_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_cuenta_banco2Column)
        End Function
        
        Public Sub Setfld_cuenta_banco2Null()
            Me(Me.tableview_cuotas_todas.fld_cuenta_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_otra_informacionNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_otra_informacionColumn)
        End Function
        
        Public Sub Setfld_otra_informacionNull()
            Me(Me.tableview_cuotas_todas.fld_otra_informacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_nombre_con_garColumn)
        End Function
        
        Public Sub Setfld_nombre_con_garNull()
            Me(Me.tableview_cuotas_todas.fld_nombre_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_apodo_con_garColumn)
        End Function
        
        Public Sub Setfld_apodo_con_garNull()
            Me(Me.tableview_cuotas_todas.fld_apodo_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_cedula_con_garColumn)
        End Function
        
        Public Sub Setfld_cedula_con_garNull()
            Me(Me.tableview_cuotas_todas.fld_cedula_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_telefono_con_garColumn)
        End Function
        
        Public Sub Setfld_telefono_con_garNull()
            Me(Me.tableview_cuotas_todas.fld_telefono_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_celular_con_garColumn)
        End Function
        
        Public Sub Setfld_celular_con_garNull()
            Me(Me.tableview_cuotas_todas.fld_celular_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edadNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_edadColumn)
        End Function
        
        Public Sub Setfld_edadNull()
            Me(Me.tableview_cuotas_todas.fld_edadColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civilNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_estado_civilColumn)
        End Function
        
        Public Sub Setfld_estado_civilNull()
            Me(Me.tableview_cuotas_todas.fld_estado_civilColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_edad_garColumn)
        End Function
        
        Public Sub Setfld_edad_garNull()
            Me(Me.tableview_cuotas_todas.fld_edad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civil_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_estado_civil_garColumn)
        End Function
        
        Public Sub Setfld_estado_civil_garNull()
            Me(Me.tableview_cuotas_todas.fld_estado_civil_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ocupacion_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_ocupacion_clienteColumn)
        End Function
        
        Public Sub Setfld_ocupacion_clienteNull()
            Me(Me.tableview_cuotas_todas.fld_ocupacion_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ocupacion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_ocupacion_garColumn)
        End Function
        
        Public Sub Setfld_ocupacion_garNull()
            Me(Me.tableview_cuotas_todas.fld_ocupacion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_id_cuotasColumn)
        End Function
        
        Public Sub Setfld_id_cuotasNull()
            Me(Me.tableview_cuotas_todas.fld_id_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_no_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_no_cuotasColumn)
        End Function
        
        Public Sub Setfld_no_cuotasNull()
            Me(Me.tableview_cuotas_todas.fld_no_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_del_cliente_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_id_del_cliente_cuotasColumn)
        End Function
        
        Public Sub Setfld_id_del_cliente_cuotasNull()
            Me(Me.tableview_cuotas_todas.fld_id_del_cliente_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_del_prestamoNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_id_del_prestamoColumn)
        End Function
        
        Public Sub Setfld_id_del_prestamoNull()
            Me(Me.tableview_cuotas_todas.fld_id_del_prestamoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fecha_entrega_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_fecha_entrega_cuotasColumn)
        End Function
        
        Public Sub Setfld_fecha_entrega_cuotasNull()
            Me(Me.tableview_cuotas_todas.fld_fecha_entrega_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fecha_termina_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_fecha_termina_cuotasColumn)
        End Function
        
        Public Sub Setfld_fecha_termina_cuotasNull()
            Me(Me.tableview_cuotas_todas.fld_fecha_termina_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_capital_cuotaNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_capital_cuotaColumn)
        End Function
        
        Public Sub Setfld_capital_cuotaNull()
            Me(Me.tableview_cuotas_todas.fld_capital_cuotaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_interes_cuotaNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_interes_cuotaColumn)
        End Function
        
        Public Sub Setfld_interes_cuotaNull()
            Me(Me.tableview_cuotas_todas.fld_interes_cuotaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_monto_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_monto_cuotasColumn)
        End Function
        
        Public Sub Setfld_monto_cuotasNull()
            Me(Me.tableview_cuotas_todas.fld_monto_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_abono_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_abono_cuotasColumn)
        End Function
        
        Public Sub Setfld_abono_cuotasNull()
            Me(Me.tableview_cuotas_todas.fld_abono_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_balance_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_balance_cuotasColumn)
        End Function
        
        Public Sub Setfld_balance_cuotasNull()
            Me(Me.tableview_cuotas_todas.fld_balance_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_usuario_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_usuario_cuotasColumn)
        End Function
        
        Public Sub Setfld_usuario_cuotasNull()
            Me(Me.tableview_cuotas_todas.fld_usuario_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fecha_ultimo_abono_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_fecha_ultimo_abono_cuotasColumn)
        End Function
        
        Public Sub Setfld_fecha_ultimo_abono_cuotasNull()
            Me(Me.tableview_cuotas_todas.fld_fecha_ultimo_abono_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_status_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_status_cuotasColumn)
        End Function
        
        Public Sub Setfld_status_cuotasNull()
            Me(Me.tableview_cuotas_todas.fld_status_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_pendiente_amortizarNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_pendiente_amortizarColumn)
        End Function
        
        Public Sub Setfld_pendiente_amortizarNull()
            Me(Me.tableview_cuotas_todas.fld_pendiente_amortizarColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_total_amortizadoNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_total_amortizadoColumn)
        End Function
        
        Public Sub Setfld_total_amortizadoNull()
            Me(Me.tableview_cuotas_todas.fld_total_amortizadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_capital_cuota_abonoNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_capital_cuota_abonoColumn)
        End Function
        
        Public Sub Setfld_capital_cuota_abonoNull()
            Me(Me.tableview_cuotas_todas.fld_capital_cuota_abonoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_capital_cuota_balanceNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_capital_cuota_balanceColumn)
        End Function
        
        Public Sub Setfld_capital_cuota_balanceNull()
            Me(Me.tableview_cuotas_todas.fld_capital_cuota_balanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_interes_cuota_abonoNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_interes_cuota_abonoColumn)
        End Function
        
        Public Sub Setfld_interes_cuota_abonoNull()
            Me(Me.tableview_cuotas_todas.fld_interes_cuota_abonoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_interes_cuota_balanceNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_interes_cuota_balanceColumn)
        End Function
        
        Public Sub Setfld_interes_cuota_balanceNull()
            Me(Me.tableview_cuotas_todas.fld_interes_cuota_balanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ultimo_abono_interesNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_ultimo_abono_interesColumn)
        End Function
        
        Public Sub Setfld_ultimo_abono_interesNull()
            Me(Me.tableview_cuotas_todas.fld_ultimo_abono_interesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ultimo_abono_capitalNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_ultimo_abono_capitalColumn)
        End Function
        
        Public Sub Setfld_ultimo_abono_capitalNull()
            Me(Me.tableview_cuotas_todas.fld_ultimo_abono_capitalColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_socioNull() As Boolean
            Return Me.IsNull(Me.tableview_cuotas_todas.fld_socioColumn)
        End Function
        
        Public Sub Setfld_socioNull()
            Me(Me.tableview_cuotas_todas.fld_socioColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_cuotas_todasRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As view_cuotas_todasRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As view_cuotas_todasRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As view_cuotas_todasRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_cxc_nota_creditoDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id As DataColumn
        
        Private columnfld_FullName As DataColumn
        
        Private columnfld_apodo As DataColumn
        
        Private columnfld_Identity As DataColumn
        
        Private columnfld_Phone As DataColumn
        
        Private columnfld_Phone2 As DataColumn
        
        Private columnfld_Address As DataColumn
        
        Private columnfld_City As DataColumn
        
        Private columnfld_Status As DataColumn
        
        Private columnfld_bce As DataColumn
        
        Private columnfld_cod_zona As DataColumn
        
        Private columnfld_zona As DataColumn
        
        Private columnfld_nombre_con As DataColumn
        
        Private columnfld_apodo_con As DataColumn
        
        Private columnfld_cedula_con As DataColumn
        
        Private columnfld_telefono_con As DataColumn
        
        Private columnfld_celular_con As DataColumn
        
        Private columnfld_ref_personales_cliente As DataColumn
        
        Private columnfld_ref_comerciales_cliente As DataColumn
        
        Private columnfld_nombre_gar As DataColumn
        
        Private columnfld_apodo_gar As DataColumn
        
        Private columnfld_cedula_gar As DataColumn
        
        Private columnfld_telefono_gar As DataColumn
        
        Private columnfld_celular_gar As DataColumn
        
        Private columnfld_direccion_gar As DataColumn
        
        Private columnfld_ciudad_gar As DataColumn
        
        Private columnfld_ref_personales_gar As DataColumn
        
        Private columnfld_ref_comerciales_gar As DataColumn
        
        Private columnfld_ingresos_mesuales As DataColumn
        
        Private columnfld_nombre_banco1 As DataColumn
        
        Private columnfld_cuenta_banco1 As DataColumn
        
        Private columnfld_nombre_banco2 As DataColumn
        
        Private columnfld_cuenta_banco2 As DataColumn
        
        Private columnfld_otra_informacion As DataColumn
        
        Private columnfld_nombre_con_gar As DataColumn
        
        Private columnfld_apodo_con_gar As DataColumn
        
        Private columnfld_cedula_con_gar As DataColumn
        
        Private columnfld_telefono_con_gar As DataColumn
        
        Private columnfld_celular_con_gar As DataColumn
        
        Private columnfld_edad As DataColumn
        
        Private columnfld_estado_civil As DataColumn
        
        Private columnfld_edad_gar As DataColumn
        
        Private columnfld_estado_civil_gar As DataColumn
        
        Private columnfld_ocupacion_cliente As DataColumn
        
        Private columnfld_ocupacion_gar As DataColumn
        
        Private columnfld_id_nc_cxc As DataColumn
        
        Private columnfld_cliente_id_nc As DataColumn
        
        Private columnfld_fecha As DataColumn
        
        Private columnfld_concepto As DataColumn
        
        Private columnfld_monto As DataColumn
        
        Private columnfld_user As DataColumn
        
        Private columnfld_status_nc As DataColumn
        
        Private columnfld_doc_afectado As DataColumn
        
        Private columnfld_doc_afectado_id As DataColumn
        
        Friend Sub New()
            MyBase.New("view_cxc_nota_credito")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_FullNameColumn As DataColumn
            Get
                Return Me.columnfld_FullName
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodoColumn As DataColumn
            Get
                Return Me.columnfld_apodo
            End Get
        End Property
        
        Friend ReadOnly Property fld_IdentityColumn As DataColumn
            Get
                Return Me.columnfld_Identity
            End Get
        End Property
        
        Friend ReadOnly Property fld_PhoneColumn As DataColumn
            Get
                Return Me.columnfld_Phone
            End Get
        End Property
        
        Friend ReadOnly Property fld_Phone2Column As DataColumn
            Get
                Return Me.columnfld_Phone2
            End Get
        End Property
        
        Friend ReadOnly Property fld_AddressColumn As DataColumn
            Get
                Return Me.columnfld_Address
            End Get
        End Property
        
        Friend ReadOnly Property fld_CityColumn As DataColumn
            Get
                Return Me.columnfld_City
            End Get
        End Property
        
        Friend ReadOnly Property fld_StatusColumn As DataColumn
            Get
                Return Me.columnfld_Status
            End Get
        End Property
        
        Friend ReadOnly Property fld_bceColumn As DataColumn
            Get
                Return Me.columnfld_bce
            End Get
        End Property
        
        Friend ReadOnly Property fld_cod_zonaColumn As DataColumn
            Get
                Return Me.columnfld_cod_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_zonaColumn As DataColumn
            Get
                Return Me.columnfld_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_conColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_conColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_conColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_conColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_conColumn As DataColumn
            Get
                Return Me.columnfld_celular_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_direccion_garColumn As DataColumn
            Get
                Return Me.columnfld_direccion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ciudad_garColumn As DataColumn
            Get
                Return Me.columnfld_ciudad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ingresos_mesualesColumn As DataColumn
            Get
                Return Me.columnfld_ingresos_mesuales
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco1Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco1Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco2Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco2Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_otra_informacionColumn As DataColumn
            Get
                Return Me.columnfld_otra_informacion
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_con_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_con_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_con_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_con_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_con_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_edadColumn As DataColumn
            Get
                Return Me.columnfld_edad
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civilColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil
            End Get
        End Property
        
        Friend ReadOnly Property fld_edad_garColumn As DataColumn
            Get
                Return Me.columnfld_edad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civil_garColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ocupacion_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ocupacion_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ocupacion_garColumn As DataColumn
            Get
                Return Me.columnfld_ocupacion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_nc_cxcColumn As DataColumn
            Get
                Return Me.columnfld_id_nc_cxc
            End Get
        End Property
        
        Friend ReadOnly Property fld_cliente_id_ncColumn As DataColumn
            Get
                Return Me.columnfld_cliente_id_nc
            End Get
        End Property
        
        Friend ReadOnly Property fld_fechaColumn As DataColumn
            Get
                Return Me.columnfld_fecha
            End Get
        End Property
        
        Friend ReadOnly Property fld_conceptoColumn As DataColumn
            Get
                Return Me.columnfld_concepto
            End Get
        End Property
        
        Friend ReadOnly Property fld_montoColumn As DataColumn
            Get
                Return Me.columnfld_monto
            End Get
        End Property
        
        Friend ReadOnly Property fld_userColumn As DataColumn
            Get
                Return Me.columnfld_user
            End Get
        End Property
        
        Friend ReadOnly Property fld_status_ncColumn As DataColumn
            Get
                Return Me.columnfld_status_nc
            End Get
        End Property
        
        Friend ReadOnly Property fld_doc_afectadoColumn As DataColumn
            Get
                Return Me.columnfld_doc_afectado
            End Get
        End Property
        
        Friend ReadOnly Property fld_doc_afectado_idColumn As DataColumn
            Get
                Return Me.columnfld_doc_afectado_id
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_cxc_nota_creditoRow
            Get
                Return CType(Me.Rows(index),view_cxc_nota_creditoRow)
            End Get
        End Property
        
        Public Event view_cxc_nota_creditoRowChanged As view_cxc_nota_creditoRowChangeEventHandler
        
        Public Event view_cxc_nota_creditoRowChanging As view_cxc_nota_creditoRowChangeEventHandler
        
        Public Event view_cxc_nota_creditoRowDeleted As view_cxc_nota_creditoRowChangeEventHandler
        
        Public Event view_cxc_nota_creditoRowDeleting As view_cxc_nota_creditoRowChangeEventHandler
        
        Public Overloads Sub Addview_cxc_nota_creditoRow(ByVal row As view_cxc_nota_creditoRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addview_cxc_nota_creditoRow( _
                    ByVal fld_FullName As String,  _
                    ByVal fld_apodo As String,  _
                    ByVal fld_Identity As String,  _
                    ByVal fld_Phone As String,  _
                    ByVal fld_Phone2 As String,  _
                    ByVal fld_Address As String,  _
                    ByVal fld_City As String,  _
                    ByVal fld_Status As String,  _
                    ByVal fld_bce As Double,  _
                    ByVal fld_cod_zona As Integer,  _
                    ByVal fld_zona As String,  _
                    ByVal fld_nombre_con As String,  _
                    ByVal fld_apodo_con As String,  _
                    ByVal fld_cedula_con As String,  _
                    ByVal fld_telefono_con As String,  _
                    ByVal fld_celular_con As String,  _
                    ByVal fld_ref_personales_cliente As String,  _
                    ByVal fld_ref_comerciales_cliente As String,  _
                    ByVal fld_nombre_gar As String,  _
                    ByVal fld_apodo_gar As String,  _
                    ByVal fld_cedula_gar As String,  _
                    ByVal fld_telefono_gar As String,  _
                    ByVal fld_celular_gar As String,  _
                    ByVal fld_direccion_gar As String,  _
                    ByVal fld_ciudad_gar As String,  _
                    ByVal fld_ref_personales_gar As String,  _
                    ByVal fld_ref_comerciales_gar As String,  _
                    ByVal fld_ingresos_mesuales As Double,  _
                    ByVal fld_nombre_banco1 As String,  _
                    ByVal fld_cuenta_banco1 As String,  _
                    ByVal fld_nombre_banco2 As String,  _
                    ByVal fld_cuenta_banco2 As String,  _
                    ByVal fld_otra_informacion As String,  _
                    ByVal fld_nombre_con_gar As String,  _
                    ByVal fld_apodo_con_gar As String,  _
                    ByVal fld_cedula_con_gar As String,  _
                    ByVal fld_telefono_con_gar As String,  _
                    ByVal fld_celular_con_gar As String,  _
                    ByVal fld_edad As Integer,  _
                    ByVal fld_estado_civil As String,  _
                    ByVal fld_edad_gar As Integer,  _
                    ByVal fld_estado_civil_gar As String,  _
                    ByVal fld_ocupacion_cliente As String,  _
                    ByVal fld_ocupacion_gar As String,  _
                    ByVal fld_cliente_id_nc As Integer,  _
                    ByVal fld_fecha As Date,  _
                    ByVal fld_concepto As String,  _
                    ByVal fld_monto As Double,  _
                    ByVal fld_user As String,  _
                    ByVal fld_status_nc As String,  _
                    ByVal fld_doc_afectado As String,  _
                    ByVal fld_doc_afectado_id As Integer) As view_cxc_nota_creditoRow
            Dim rowview_cxc_nota_creditoRow As view_cxc_nota_creditoRow = CType(Me.NewRow,view_cxc_nota_creditoRow)
            rowview_cxc_nota_creditoRow.ItemArray = New Object() {Nothing, fld_FullName, fld_apodo, fld_Identity, fld_Phone, fld_Phone2, fld_Address, fld_City, fld_Status, fld_bce, fld_cod_zona, fld_zona, fld_nombre_con, fld_apodo_con, fld_cedula_con, fld_telefono_con, fld_celular_con, fld_ref_personales_cliente, fld_ref_comerciales_cliente, fld_nombre_gar, fld_apodo_gar, fld_cedula_gar, fld_telefono_gar, fld_celular_gar, fld_direccion_gar, fld_ciudad_gar, fld_ref_personales_gar, fld_ref_comerciales_gar, fld_ingresos_mesuales, fld_nombre_banco1, fld_cuenta_banco1, fld_nombre_banco2, fld_cuenta_banco2, fld_otra_informacion, fld_nombre_con_gar, fld_apodo_con_gar, fld_cedula_con_gar, fld_telefono_con_gar, fld_celular_con_gar, fld_edad, fld_estado_civil, fld_edad_gar, fld_estado_civil_gar, fld_ocupacion_cliente, fld_ocupacion_gar, Nothing, fld_cliente_id_nc, fld_fecha, fld_concepto, fld_monto, fld_user, fld_status_nc, fld_doc_afectado, fld_doc_afectado_id}
            Me.Rows.Add(rowview_cxc_nota_creditoRow)
            Return rowview_cxc_nota_creditoRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As view_cxc_nota_creditoDataTable = CType(MyBase.Clone,view_cxc_nota_creditoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New view_cxc_nota_creditoDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnfld_FullName = Me.Columns("fld_FullName")
            Me.columnfld_apodo = Me.Columns("fld_apodo")
            Me.columnfld_Identity = Me.Columns("fld_Identity")
            Me.columnfld_Phone = Me.Columns("fld_Phone")
            Me.columnfld_Phone2 = Me.Columns("fld_Phone2")
            Me.columnfld_Address = Me.Columns("fld_Address")
            Me.columnfld_City = Me.Columns("fld_City")
            Me.columnfld_Status = Me.Columns("fld_Status")
            Me.columnfld_bce = Me.Columns("fld_bce")
            Me.columnfld_cod_zona = Me.Columns("fld_cod_zona")
            Me.columnfld_zona = Me.Columns("fld_zona")
            Me.columnfld_nombre_con = Me.Columns("fld_nombre_con")
            Me.columnfld_apodo_con = Me.Columns("fld_apodo_con")
            Me.columnfld_cedula_con = Me.Columns("fld_cedula_con")
            Me.columnfld_telefono_con = Me.Columns("fld_telefono_con")
            Me.columnfld_celular_con = Me.Columns("fld_celular_con")
            Me.columnfld_ref_personales_cliente = Me.Columns("fld_ref_personales_cliente")
            Me.columnfld_ref_comerciales_cliente = Me.Columns("fld_ref_comerciales_cliente")
            Me.columnfld_nombre_gar = Me.Columns("fld_nombre_gar")
            Me.columnfld_apodo_gar = Me.Columns("fld_apodo_gar")
            Me.columnfld_cedula_gar = Me.Columns("fld_cedula_gar")
            Me.columnfld_telefono_gar = Me.Columns("fld_telefono_gar")
            Me.columnfld_celular_gar = Me.Columns("fld_celular_gar")
            Me.columnfld_direccion_gar = Me.Columns("fld_direccion_gar")
            Me.columnfld_ciudad_gar = Me.Columns("fld_ciudad_gar")
            Me.columnfld_ref_personales_gar = Me.Columns("fld_ref_personales_gar")
            Me.columnfld_ref_comerciales_gar = Me.Columns("fld_ref_comerciales_gar")
            Me.columnfld_ingresos_mesuales = Me.Columns("fld_ingresos_mesuales")
            Me.columnfld_nombre_banco1 = Me.Columns("fld_nombre_banco1")
            Me.columnfld_cuenta_banco1 = Me.Columns("fld_cuenta_banco1")
            Me.columnfld_nombre_banco2 = Me.Columns("fld_nombre_banco2")
            Me.columnfld_cuenta_banco2 = Me.Columns("fld_cuenta_banco2")
            Me.columnfld_otra_informacion = Me.Columns("fld_otra_informacion")
            Me.columnfld_nombre_con_gar = Me.Columns("fld_nombre_con_gar")
            Me.columnfld_apodo_con_gar = Me.Columns("fld_apodo_con_gar")
            Me.columnfld_cedula_con_gar = Me.Columns("fld_cedula_con_gar")
            Me.columnfld_telefono_con_gar = Me.Columns("fld_telefono_con_gar")
            Me.columnfld_celular_con_gar = Me.Columns("fld_celular_con_gar")
            Me.columnfld_edad = Me.Columns("fld_edad")
            Me.columnfld_estado_civil = Me.Columns("fld_estado_civil")
            Me.columnfld_edad_gar = Me.Columns("fld_edad_gar")
            Me.columnfld_estado_civil_gar = Me.Columns("fld_estado_civil_gar")
            Me.columnfld_ocupacion_cliente = Me.Columns("fld_ocupacion_cliente")
            Me.columnfld_ocupacion_gar = Me.Columns("fld_ocupacion_gar")
            Me.columnfld_id_nc_cxc = Me.Columns("fld_id_nc_cxc")
            Me.columnfld_cliente_id_nc = Me.Columns("fld_cliente_id_nc")
            Me.columnfld_fecha = Me.Columns("fld_fecha")
            Me.columnfld_concepto = Me.Columns("fld_concepto")
            Me.columnfld_monto = Me.Columns("fld_monto")
            Me.columnfld_user = Me.Columns("fld_user")
            Me.columnfld_status_nc = Me.Columns("fld_status_nc")
            Me.columnfld_doc_afectado = Me.Columns("fld_doc_afectado")
            Me.columnfld_doc_afectado_id = Me.Columns("fld_doc_afectado_id")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnfld_FullName = New DataColumn("fld_FullName", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_FullName)
            Me.columnfld_apodo = New DataColumn("fld_apodo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo)
            Me.columnfld_Identity = New DataColumn("fld_Identity", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Identity)
            Me.columnfld_Phone = New DataColumn("fld_Phone", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone)
            Me.columnfld_Phone2 = New DataColumn("fld_Phone2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone2)
            Me.columnfld_Address = New DataColumn("fld_Address", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Address)
            Me.columnfld_City = New DataColumn("fld_City", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_City)
            Me.columnfld_Status = New DataColumn("fld_Status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Status)
            Me.columnfld_bce = New DataColumn("fld_bce", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce)
            Me.columnfld_cod_zona = New DataColumn("fld_cod_zona", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cod_zona)
            Me.columnfld_zona = New DataColumn("fld_zona", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_zona)
            Me.columnfld_nombre_con = New DataColumn("fld_nombre_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con)
            Me.columnfld_apodo_con = New DataColumn("fld_apodo_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con)
            Me.columnfld_cedula_con = New DataColumn("fld_cedula_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con)
            Me.columnfld_telefono_con = New DataColumn("fld_telefono_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con)
            Me.columnfld_celular_con = New DataColumn("fld_celular_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con)
            Me.columnfld_ref_personales_cliente = New DataColumn("fld_ref_personales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_cliente)
            Me.columnfld_ref_comerciales_cliente = New DataColumn("fld_ref_comerciales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_cliente)
            Me.columnfld_nombre_gar = New DataColumn("fld_nombre_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_gar)
            Me.columnfld_apodo_gar = New DataColumn("fld_apodo_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_gar)
            Me.columnfld_cedula_gar = New DataColumn("fld_cedula_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_gar)
            Me.columnfld_telefono_gar = New DataColumn("fld_telefono_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_gar)
            Me.columnfld_celular_gar = New DataColumn("fld_celular_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_gar)
            Me.columnfld_direccion_gar = New DataColumn("fld_direccion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_direccion_gar)
            Me.columnfld_ciudad_gar = New DataColumn("fld_ciudad_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ciudad_gar)
            Me.columnfld_ref_personales_gar = New DataColumn("fld_ref_personales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_gar)
            Me.columnfld_ref_comerciales_gar = New DataColumn("fld_ref_comerciales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_gar)
            Me.columnfld_ingresos_mesuales = New DataColumn("fld_ingresos_mesuales", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ingresos_mesuales)
            Me.columnfld_nombre_banco1 = New DataColumn("fld_nombre_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco1)
            Me.columnfld_cuenta_banco1 = New DataColumn("fld_cuenta_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco1)
            Me.columnfld_nombre_banco2 = New DataColumn("fld_nombre_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco2)
            Me.columnfld_cuenta_banco2 = New DataColumn("fld_cuenta_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco2)
            Me.columnfld_otra_informacion = New DataColumn("fld_otra_informacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_otra_informacion)
            Me.columnfld_nombre_con_gar = New DataColumn("fld_nombre_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con_gar)
            Me.columnfld_apodo_con_gar = New DataColumn("fld_apodo_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con_gar)
            Me.columnfld_cedula_con_gar = New DataColumn("fld_cedula_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con_gar)
            Me.columnfld_telefono_con_gar = New DataColumn("fld_telefono_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con_gar)
            Me.columnfld_celular_con_gar = New DataColumn("fld_celular_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con_gar)
            Me.columnfld_edad = New DataColumn("fld_edad", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad)
            Me.columnfld_estado_civil = New DataColumn("fld_estado_civil", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil)
            Me.columnfld_edad_gar = New DataColumn("fld_edad_gar", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad_gar)
            Me.columnfld_estado_civil_gar = New DataColumn("fld_estado_civil_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil_gar)
            Me.columnfld_ocupacion_cliente = New DataColumn("fld_ocupacion_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ocupacion_cliente)
            Me.columnfld_ocupacion_gar = New DataColumn("fld_ocupacion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ocupacion_gar)
            Me.columnfld_id_nc_cxc = New DataColumn("fld_id_nc_cxc", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_nc_cxc)
            Me.columnfld_cliente_id_nc = New DataColumn("fld_cliente_id_nc", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cliente_id_nc)
            Me.columnfld_fecha = New DataColumn("fld_fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha)
            Me.columnfld_concepto = New DataColumn("fld_concepto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_concepto)
            Me.columnfld_monto = New DataColumn("fld_monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto)
            Me.columnfld_user = New DataColumn("fld_user", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_user)
            Me.columnfld_status_nc = New DataColumn("fld_status_nc", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_status_nc)
            Me.columnfld_doc_afectado = New DataColumn("fld_doc_afectado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_doc_afectado)
            Me.columnfld_doc_afectado_id = New DataColumn("fld_doc_afectado_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_doc_afectado_id)
            Me.columnfld_id.AutoIncrement = true
            Me.columnfld_id_nc_cxc.AutoIncrement = true
        End Sub
        
        Public Function Newview_cxc_nota_creditoRow() As view_cxc_nota_creditoRow
            Return CType(Me.NewRow,view_cxc_nota_creditoRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New view_cxc_nota_creditoRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(view_cxc_nota_creditoRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_cxc_nota_creditoRowChangedEvent) Is Nothing) Then
                RaiseEvent view_cxc_nota_creditoRowChanged(Me, New view_cxc_nota_creditoRowChangeEvent(CType(e.Row,view_cxc_nota_creditoRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_cxc_nota_creditoRowChangingEvent) Is Nothing) Then
                RaiseEvent view_cxc_nota_creditoRowChanging(Me, New view_cxc_nota_creditoRowChangeEvent(CType(e.Row,view_cxc_nota_creditoRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_cxc_nota_creditoRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_cxc_nota_creditoRowDeleted(Me, New view_cxc_nota_creditoRowChangeEvent(CType(e.Row,view_cxc_nota_creditoRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_cxc_nota_creditoRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_cxc_nota_creditoRowDeleting(Me, New view_cxc_nota_creditoRowChangeEvent(CType(e.Row,view_cxc_nota_creditoRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeview_cxc_nota_creditoRow(ByVal row As view_cxc_nota_creditoRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_cxc_nota_creditoRow
        Inherits DataRow
        
        Private tableview_cxc_nota_credito As view_cxc_nota_creditoDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_cxc_nota_credito = CType(Me.Table,view_cxc_nota_creditoDataTable)
        End Sub
        
        Public Property fld_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_idColumn) = value
            End Set
        End Property
        
        Public Property fld_FullName As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_FullNameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_FullNameColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_apodoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_apodoColumn) = value
            End Set
        End Property
        
        Public Property fld_Identity As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_IdentityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_IdentityColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_PhoneColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_PhoneColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_Phone2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_Phone2Column) = value
            End Set
        End Property
        
        Public Property fld_Address As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_AddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_AddressColumn) = value
            End Set
        End Property
        
        Public Property fld_City As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_CityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_CityColumn) = value
            End Set
        End Property
        
        Public Property fld_Status As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_StatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_StatusColumn) = value
            End Set
        End Property
        
        Public Property fld_bce As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_bceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_bceColumn) = value
            End Set
        End Property
        
        Public Property fld_cod_zona As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_cod_zonaColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_cod_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_zona As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_zonaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_nombre_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_nombre_conColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_apodo_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_apodo_conColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_cedula_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_cedula_conColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_telefono_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_telefono_conColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_celular_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_celular_conColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_ref_personales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_ref_personales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_ref_comerciales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_ref_comerciales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_nombre_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_nombre_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_apodo_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_apodo_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_cedula_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_cedula_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_telefono_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_telefono_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_celular_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_celular_garColumn) = value
            End Set
        End Property
        
        Public Property fld_direccion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_direccion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_direccion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ciudad_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_ciudad_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_ciudad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_ref_personales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_ref_personales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_ref_comerciales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_ref_comerciales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ingresos_mesuales As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_ingresos_mesualesColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_ingresos_mesualesColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_nombre_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_nombre_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_cuenta_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_cuenta_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_nombre_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_nombre_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_cuenta_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_cuenta_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_otra_informacion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_otra_informacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_otra_informacionColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_nombre_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_nombre_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_apodo_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_apodo_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_cedula_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_cedula_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_telefono_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_telefono_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_celular_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_celular_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_edad As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_edadColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_edadColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_estado_civilColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_estado_civilColumn) = value
            End Set
        End Property
        
        Public Property fld_edad_gar As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_edad_garColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_edad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_estado_civil_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_estado_civil_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ocupacion_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_ocupacion_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_ocupacion_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ocupacion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_ocupacion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_ocupacion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_id_nc_cxc As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_id_nc_cxcColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_id_nc_cxcColumn) = value
            End Set
        End Property
        
        Public Property fld_cliente_id_nc As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_cliente_id_ncColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_cliente_id_ncColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_fechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_fechaColumn) = value
            End Set
        End Property
        
        Public Property fld_concepto As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_conceptoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_conceptoColumn) = value
            End Set
        End Property
        
        Public Property fld_monto As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_montoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_montoColumn) = value
            End Set
        End Property
        
        Public Property fld_user As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_userColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_userColumn) = value
            End Set
        End Property
        
        Public Property fld_status_nc As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_status_ncColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_status_ncColumn) = value
            End Set
        End Property
        
        Public Property fld_doc_afectado As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_doc_afectadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_doc_afectadoColumn) = value
            End Set
        End Property
        
        Public Property fld_doc_afectado_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cxc_nota_credito.fld_doc_afectado_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cxc_nota_credito.fld_doc_afectado_idColumn) = value
            End Set
        End Property
        
        Public Function Isfld_idNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_idColumn)
        End Function
        
        Public Sub Setfld_idNull()
            Me(Me.tableview_cxc_nota_credito.fld_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_FullNameNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_FullNameColumn)
        End Function
        
        Public Sub Setfld_FullNameNull()
            Me(Me.tableview_cxc_nota_credito.fld_FullNameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodoNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_apodoColumn)
        End Function
        
        Public Sub Setfld_apodoNull()
            Me(Me.tableview_cxc_nota_credito.fld_apodoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_IdentityNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_IdentityColumn)
        End Function
        
        Public Sub Setfld_IdentityNull()
            Me(Me.tableview_cxc_nota_credito.fld_IdentityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_PhoneNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_PhoneColumn)
        End Function
        
        Public Sub Setfld_PhoneNull()
            Me(Me.tableview_cxc_nota_credito.fld_PhoneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_Phone2Null() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_Phone2Column)
        End Function
        
        Public Sub Setfld_Phone2Null()
            Me(Me.tableview_cxc_nota_credito.fld_Phone2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_AddressNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_AddressColumn)
        End Function
        
        Public Sub Setfld_AddressNull()
            Me(Me.tableview_cxc_nota_credito.fld_AddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_CityNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_CityColumn)
        End Function
        
        Public Sub Setfld_CityNull()
            Me(Me.tableview_cxc_nota_credito.fld_CityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_StatusNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_StatusColumn)
        End Function
        
        Public Sub Setfld_StatusNull()
            Me(Me.tableview_cxc_nota_credito.fld_StatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bceNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_bceColumn)
        End Function
        
        Public Sub Setfld_bceNull()
            Me(Me.tableview_cxc_nota_credito.fld_bceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cod_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_cod_zonaColumn)
        End Function
        
        Public Sub Setfld_cod_zonaNull()
            Me(Me.tableview_cxc_nota_credito.fld_cod_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_zonaColumn)
        End Function
        
        Public Sub Setfld_zonaNull()
            Me(Me.tableview_cxc_nota_credito.fld_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_conNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_nombre_conColumn)
        End Function
        
        Public Sub Setfld_nombre_conNull()
            Me(Me.tableview_cxc_nota_credito.fld_nombre_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_conNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_apodo_conColumn)
        End Function
        
        Public Sub Setfld_apodo_conNull()
            Me(Me.tableview_cxc_nota_credito.fld_apodo_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_conNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_cedula_conColumn)
        End Function
        
        Public Sub Setfld_cedula_conNull()
            Me(Me.tableview_cxc_nota_credito.fld_cedula_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_conNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_telefono_conColumn)
        End Function
        
        Public Sub Setfld_telefono_conNull()
            Me(Me.tableview_cxc_nota_credito.fld_telefono_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_conNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_celular_conColumn)
        End Function
        
        Public Sub Setfld_celular_conNull()
            Me(Me.tableview_cxc_nota_credito.fld_celular_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_ref_personales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_personales_clienteNull()
            Me(Me.tableview_cxc_nota_credito.fld_ref_personales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_ref_comerciales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_clienteNull()
            Me(Me.tableview_cxc_nota_credito.fld_ref_comerciales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_nombre_garColumn)
        End Function
        
        Public Sub Setfld_nombre_garNull()
            Me(Me.tableview_cxc_nota_credito.fld_nombre_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_apodo_garColumn)
        End Function
        
        Public Sub Setfld_apodo_garNull()
            Me(Me.tableview_cxc_nota_credito.fld_apodo_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_cedula_garColumn)
        End Function
        
        Public Sub Setfld_cedula_garNull()
            Me(Me.tableview_cxc_nota_credito.fld_cedula_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_telefono_garColumn)
        End Function
        
        Public Sub Setfld_telefono_garNull()
            Me(Me.tableview_cxc_nota_credito.fld_telefono_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_celular_garColumn)
        End Function
        
        Public Sub Setfld_celular_garNull()
            Me(Me.tableview_cxc_nota_credito.fld_celular_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_direccion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_direccion_garColumn)
        End Function
        
        Public Sub Setfld_direccion_garNull()
            Me(Me.tableview_cxc_nota_credito.fld_direccion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ciudad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_ciudad_garColumn)
        End Function
        
        Public Sub Setfld_ciudad_garNull()
            Me(Me.tableview_cxc_nota_credito.fld_ciudad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_ref_personales_garColumn)
        End Function
        
        Public Sub Setfld_ref_personales_garNull()
            Me(Me.tableview_cxc_nota_credito.fld_ref_personales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_ref_comerciales_garColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_garNull()
            Me(Me.tableview_cxc_nota_credito.fld_ref_comerciales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ingresos_mesualesNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_ingresos_mesualesColumn)
        End Function
        
        Public Sub Setfld_ingresos_mesualesNull()
            Me(Me.tableview_cxc_nota_credito.fld_ingresos_mesualesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_nombre_banco1Column)
        End Function
        
        Public Sub Setfld_nombre_banco1Null()
            Me(Me.tableview_cxc_nota_credito.fld_nombre_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_cuenta_banco1Column)
        End Function
        
        Public Sub Setfld_cuenta_banco1Null()
            Me(Me.tableview_cxc_nota_credito.fld_cuenta_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_nombre_banco2Column)
        End Function
        
        Public Sub Setfld_nombre_banco2Null()
            Me(Me.tableview_cxc_nota_credito.fld_nombre_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_cuenta_banco2Column)
        End Function
        
        Public Sub Setfld_cuenta_banco2Null()
            Me(Me.tableview_cxc_nota_credito.fld_cuenta_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_otra_informacionNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_otra_informacionColumn)
        End Function
        
        Public Sub Setfld_otra_informacionNull()
            Me(Me.tableview_cxc_nota_credito.fld_otra_informacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_nombre_con_garColumn)
        End Function
        
        Public Sub Setfld_nombre_con_garNull()
            Me(Me.tableview_cxc_nota_credito.fld_nombre_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_apodo_con_garColumn)
        End Function
        
        Public Sub Setfld_apodo_con_garNull()
            Me(Me.tableview_cxc_nota_credito.fld_apodo_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_cedula_con_garColumn)
        End Function
        
        Public Sub Setfld_cedula_con_garNull()
            Me(Me.tableview_cxc_nota_credito.fld_cedula_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_telefono_con_garColumn)
        End Function
        
        Public Sub Setfld_telefono_con_garNull()
            Me(Me.tableview_cxc_nota_credito.fld_telefono_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_celular_con_garColumn)
        End Function
        
        Public Sub Setfld_celular_con_garNull()
            Me(Me.tableview_cxc_nota_credito.fld_celular_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edadNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_edadColumn)
        End Function
        
        Public Sub Setfld_edadNull()
            Me(Me.tableview_cxc_nota_credito.fld_edadColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civilNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_estado_civilColumn)
        End Function
        
        Public Sub Setfld_estado_civilNull()
            Me(Me.tableview_cxc_nota_credito.fld_estado_civilColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_edad_garColumn)
        End Function
        
        Public Sub Setfld_edad_garNull()
            Me(Me.tableview_cxc_nota_credito.fld_edad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civil_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_estado_civil_garColumn)
        End Function
        
        Public Sub Setfld_estado_civil_garNull()
            Me(Me.tableview_cxc_nota_credito.fld_estado_civil_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ocupacion_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_ocupacion_clienteColumn)
        End Function
        
        Public Sub Setfld_ocupacion_clienteNull()
            Me(Me.tableview_cxc_nota_credito.fld_ocupacion_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ocupacion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_ocupacion_garColumn)
        End Function
        
        Public Sub Setfld_ocupacion_garNull()
            Me(Me.tableview_cxc_nota_credito.fld_ocupacion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_nc_cxcNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_id_nc_cxcColumn)
        End Function
        
        Public Sub Setfld_id_nc_cxcNull()
            Me(Me.tableview_cxc_nota_credito.fld_id_nc_cxcColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cliente_id_ncNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_cliente_id_ncColumn)
        End Function
        
        Public Sub Setfld_cliente_id_ncNull()
            Me(Me.tableview_cxc_nota_credito.fld_cliente_id_ncColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fechaNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_fechaColumn)
        End Function
        
        Public Sub Setfld_fechaNull()
            Me(Me.tableview_cxc_nota_credito.fld_fechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_conceptoNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_conceptoColumn)
        End Function
        
        Public Sub Setfld_conceptoNull()
            Me(Me.tableview_cxc_nota_credito.fld_conceptoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_montoNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_montoColumn)
        End Function
        
        Public Sub Setfld_montoNull()
            Me(Me.tableview_cxc_nota_credito.fld_montoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_userNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_userColumn)
        End Function
        
        Public Sub Setfld_userNull()
            Me(Me.tableview_cxc_nota_credito.fld_userColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_status_ncNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_status_ncColumn)
        End Function
        
        Public Sub Setfld_status_ncNull()
            Me(Me.tableview_cxc_nota_credito.fld_status_ncColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_doc_afectadoNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_doc_afectadoColumn)
        End Function
        
        Public Sub Setfld_doc_afectadoNull()
            Me(Me.tableview_cxc_nota_credito.fld_doc_afectadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_doc_afectado_idNull() As Boolean
            Return Me.IsNull(Me.tableview_cxc_nota_credito.fld_doc_afectado_idColumn)
        End Function
        
        Public Sub Setfld_doc_afectado_idNull()
            Me(Me.tableview_cxc_nota_credito.fld_doc_afectado_idColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_cxc_nota_creditoRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As view_cxc_nota_creditoRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As view_cxc_nota_creditoRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As view_cxc_nota_creditoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_gastosDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id_doc As DataColumn
        
        Private columnfld_fecha As DataColumn
        
        Private columnfld_concepto As DataColumn
        
        Private columnfld_monto As DataColumn
        
        Private columnfld_a_nombre As DataColumn
        
        Private columnfld_categoria As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_gastos")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_docColumn As DataColumn
            Get
                Return Me.columnfld_id_doc
            End Get
        End Property
        
        Friend ReadOnly Property fld_fechaColumn As DataColumn
            Get
                Return Me.columnfld_fecha
            End Get
        End Property
        
        Friend ReadOnly Property fld_conceptoColumn As DataColumn
            Get
                Return Me.columnfld_concepto
            End Get
        End Property
        
        Friend ReadOnly Property fld_montoColumn As DataColumn
            Get
                Return Me.columnfld_monto
            End Get
        End Property
        
        Friend ReadOnly Property fld_a_nombreColumn As DataColumn
            Get
                Return Me.columnfld_a_nombre
            End Get
        End Property
        
        Friend ReadOnly Property fld_categoriaColumn As DataColumn
            Get
                Return Me.columnfld_categoria
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_gastosRow
            Get
                Return CType(Me.Rows(index),tbl_gastosRow)
            End Get
        End Property
        
        Public Event tbl_gastosRowChanged As tbl_gastosRowChangeEventHandler
        
        Public Event tbl_gastosRowChanging As tbl_gastosRowChangeEventHandler
        
        Public Event tbl_gastosRowDeleted As tbl_gastosRowChangeEventHandler
        
        Public Event tbl_gastosRowDeleting As tbl_gastosRowChangeEventHandler
        
        Public Overloads Sub Addtbl_gastosRow(ByVal row As tbl_gastosRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_gastosRow(ByVal fld_fecha As Date, ByVal fld_concepto As String, ByVal fld_monto As Double, ByVal fld_a_nombre As String, ByVal fld_categoria As String) As tbl_gastosRow
            Dim rowtbl_gastosRow As tbl_gastosRow = CType(Me.NewRow,tbl_gastosRow)
            rowtbl_gastosRow.ItemArray = New Object() {Nothing, fld_fecha, fld_concepto, fld_monto, fld_a_nombre, fld_categoria}
            Me.Rows.Add(rowtbl_gastosRow)
            Return rowtbl_gastosRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_gastosDataTable = CType(MyBase.Clone,tbl_gastosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_gastosDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id_doc = Me.Columns("fld_id_doc")
            Me.columnfld_fecha = Me.Columns("fld_fecha")
            Me.columnfld_concepto = Me.Columns("fld_concepto")
            Me.columnfld_monto = Me.Columns("fld_monto")
            Me.columnfld_a_nombre = Me.Columns("fld_a_nombre")
            Me.columnfld_categoria = Me.Columns("fld_categoria")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id_doc = New DataColumn("fld_id_doc", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_doc)
            Me.columnfld_fecha = New DataColumn("fld_fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha)
            Me.columnfld_concepto = New DataColumn("fld_concepto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_concepto)
            Me.columnfld_monto = New DataColumn("fld_monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto)
            Me.columnfld_a_nombre = New DataColumn("fld_a_nombre", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_a_nombre)
            Me.columnfld_categoria = New DataColumn("fld_categoria", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_categoria)
            Me.columnfld_id_doc.AutoIncrement = true
            Me.columnfld_id_doc.AllowDBNull = false
        End Sub
        
        Public Function Newtbl_gastosRow() As tbl_gastosRow
            Return CType(Me.NewRow,tbl_gastosRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_gastosRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_gastosRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_gastosRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_gastosRowChanged(Me, New tbl_gastosRowChangeEvent(CType(e.Row,tbl_gastosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_gastosRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_gastosRowChanging(Me, New tbl_gastosRowChangeEvent(CType(e.Row,tbl_gastosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_gastosRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_gastosRowDeleted(Me, New tbl_gastosRowChangeEvent(CType(e.Row,tbl_gastosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_gastosRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_gastosRowDeleting(Me, New tbl_gastosRowChangeEvent(CType(e.Row,tbl_gastosRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_gastosRow(ByVal row As tbl_gastosRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_gastosRow
        Inherits DataRow
        
        Private tabletbl_gastos As tbl_gastosDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_gastos = CType(Me.Table,tbl_gastosDataTable)
        End Sub
        
        Public Property fld_id_doc As Integer
            Get
                Return CType(Me(Me.tabletbl_gastos.fld_id_docColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_gastos.fld_id_docColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_gastos.fld_fechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_gastos.fld_fechaColumn) = value
            End Set
        End Property
        
        Public Property fld_concepto As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_gastos.fld_conceptoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_gastos.fld_conceptoColumn) = value
            End Set
        End Property
        
        Public Property fld_monto As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_gastos.fld_montoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_gastos.fld_montoColumn) = value
            End Set
        End Property
        
        Public Property fld_a_nombre As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_gastos.fld_a_nombreColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_gastos.fld_a_nombreColumn) = value
            End Set
        End Property
        
        Public Property fld_categoria As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_gastos.fld_categoriaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_gastos.fld_categoriaColumn) = value
            End Set
        End Property
        
        Public Function Isfld_fechaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_gastos.fld_fechaColumn)
        End Function
        
        Public Sub Setfld_fechaNull()
            Me(Me.tabletbl_gastos.fld_fechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_conceptoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_gastos.fld_conceptoColumn)
        End Function
        
        Public Sub Setfld_conceptoNull()
            Me(Me.tabletbl_gastos.fld_conceptoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_montoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_gastos.fld_montoColumn)
        End Function
        
        Public Sub Setfld_montoNull()
            Me(Me.tabletbl_gastos.fld_montoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_a_nombreNull() As Boolean
            Return Me.IsNull(Me.tabletbl_gastos.fld_a_nombreColumn)
        End Function
        
        Public Sub Setfld_a_nombreNull()
            Me(Me.tabletbl_gastos.fld_a_nombreColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_categoriaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_gastos.fld_categoriaColumn)
        End Function
        
        Public Sub Setfld_categoriaNull()
            Me(Me.tabletbl_gastos.fld_categoriaColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_gastosRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_gastosRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_gastosRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_gastosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_generar_cuotasDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id As DataColumn
        
        Private columnfld_FullName As DataColumn
        
        Private columnfld_apodo As DataColumn
        
        Private columnfld_Identity As DataColumn
        
        Private columnfld_Phone As DataColumn
        
        Private columnfld_Phone2 As DataColumn
        
        Private columnfld_Address As DataColumn
        
        Private columnfld_City As DataColumn
        
        Private columnfld_Status As DataColumn
        
        Private columnfld_bce As DataColumn
        
        Private columnfld_cod_zona As DataColumn
        
        Private columnfld_zona As DataColumn
        
        Private columnfld_nombre_con As DataColumn
        
        Private columnfld_apodo_con As DataColumn
        
        Private columnfld_cedula_con As DataColumn
        
        Private columnfld_telefono_con As DataColumn
        
        Private columnfld_celular_con As DataColumn
        
        Private columnfld_ref_personales_cliente As DataColumn
        
        Private columnfld_ref_comerciales_cliente As DataColumn
        
        Private columnfld_nombre_gar As DataColumn
        
        Private columnfld_apodo_gar As DataColumn
        
        Private columnfld_cedula_gar As DataColumn
        
        Private columnfld_telefono_gar As DataColumn
        
        Private columnfld_celular_gar As DataColumn
        
        Private columnfld_direccion_gar As DataColumn
        
        Private columnfld_ciudad_gar As DataColumn
        
        Private columnfld_ref_personales_gar As DataColumn
        
        Private columnfld_ref_comerciales_gar As DataColumn
        
        Private columnfld_ingresos_mesuales As DataColumn
        
        Private columnfld_nombre_banco1 As DataColumn
        
        Private columnfld_cuenta_banco1 As DataColumn
        
        Private columnfld_nombre_banco2 As DataColumn
        
        Private columnfld_cuenta_banco2 As DataColumn
        
        Private columnfld_otra_informacion As DataColumn
        
        Private columnfld_nombre_con_gar As DataColumn
        
        Private columnfld_apodo_con_gar As DataColumn
        
        Private columnfld_cedula_con_gar As DataColumn
        
        Private columnfld_telefono_con_gar As DataColumn
        
        Private columnfld_celular_con_gar As DataColumn
        
        Private columnfld_edad As DataColumn
        
        Private columnfld_estado_civil As DataColumn
        
        Private columnfld_edad_gar As DataColumn
        
        Private columnfld_estado_civil_gar As DataColumn
        
        Private columnfld_ocupacion_cliente As DataColumn
        
        Private columnfld_ocupacion_gar As DataColumn
        
        Private columnfld_sector As DataColumn
        
        Private columnfld_id_cuotas As DataColumn
        
        Private columnfld_no_cuotas As DataColumn
        
        Private columnfld_id_del_cliente_cuotas As DataColumn
        
        Private columnfld_id_del_prestamo As DataColumn
        
        Private columnfld_fecha_entrega_cuotas As DataColumn
        
        Private columnfld_fecha_termina_cuotas As DataColumn
        
        Private columnfld_fecha_ultimo_abono_cuotas As DataColumn
        
        Private columnfld_capital_cuota As DataColumn
        
        Private columnfld_interes_cuota As DataColumn
        
        Private columnfld_monto_cuotas As DataColumn
        
        Private columnfld_abono_cuotas As DataColumn
        
        Private columnfld_balance_cuotas As DataColumn
        
        Private columnfld_usuario_cuotas As DataColumn
        
        Private columnfld_status_cuotas As DataColumn
        
        Private columnfld_pendiente_amortizar As DataColumn
        
        Private columnfld_total_amortizado As DataColumn
        
        Private columnfld_capital_cuota_abono As DataColumn
        
        Private columnfld_capital_cuota_balance As DataColumn
        
        Private columnfld_interes_cuota_abono As DataColumn
        
        Private columnfld_interes_cuota_balance As DataColumn
        
        Private columnfld_ultimo_abono_interes As DataColumn
        
        Private columnfld_ultimo_abono_capital As DataColumn
        
        Private columnfld_monto_mora As DataColumn
        
        Private columnfld_abono_mora As DataColumn
        
        Private columnfld_balance_mora As DataColumn
        
        Private columnfld_ultimo_abono_mora As DataColumn
        
        Private columnfld_dias_vencimiento As DataColumn
        
        Private columnfld_socio As DataColumn
        
        Private columnfld_atraso_cuotas As DataColumn
        
        Private columnfld_tipo_cuotas As DataColumn
        
        Private columnfld_bce_prestamo As DataColumn
        
        Private columnfld_cant_cuotas As DataColumn
        
        Friend Sub New()
            MyBase.New("view_generar_cuotas")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_FullNameColumn As DataColumn
            Get
                Return Me.columnfld_FullName
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodoColumn As DataColumn
            Get
                Return Me.columnfld_apodo
            End Get
        End Property
        
        Friend ReadOnly Property fld_IdentityColumn As DataColumn
            Get
                Return Me.columnfld_Identity
            End Get
        End Property
        
        Friend ReadOnly Property fld_PhoneColumn As DataColumn
            Get
                Return Me.columnfld_Phone
            End Get
        End Property
        
        Friend ReadOnly Property fld_Phone2Column As DataColumn
            Get
                Return Me.columnfld_Phone2
            End Get
        End Property
        
        Friend ReadOnly Property fld_AddressColumn As DataColumn
            Get
                Return Me.columnfld_Address
            End Get
        End Property
        
        Friend ReadOnly Property fld_CityColumn As DataColumn
            Get
                Return Me.columnfld_City
            End Get
        End Property
        
        Friend ReadOnly Property fld_StatusColumn As DataColumn
            Get
                Return Me.columnfld_Status
            End Get
        End Property
        
        Friend ReadOnly Property fld_bceColumn As DataColumn
            Get
                Return Me.columnfld_bce
            End Get
        End Property
        
        Friend ReadOnly Property fld_cod_zonaColumn As DataColumn
            Get
                Return Me.columnfld_cod_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_zonaColumn As DataColumn
            Get
                Return Me.columnfld_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_conColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_conColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_conColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_conColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_conColumn As DataColumn
            Get
                Return Me.columnfld_celular_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_direccion_garColumn As DataColumn
            Get
                Return Me.columnfld_direccion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ciudad_garColumn As DataColumn
            Get
                Return Me.columnfld_ciudad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ingresos_mesualesColumn As DataColumn
            Get
                Return Me.columnfld_ingresos_mesuales
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco1Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco1Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco2Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco2Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_otra_informacionColumn As DataColumn
            Get
                Return Me.columnfld_otra_informacion
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_con_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_con_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_con_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_con_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_con_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_edadColumn As DataColumn
            Get
                Return Me.columnfld_edad
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civilColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil
            End Get
        End Property
        
        Friend ReadOnly Property fld_edad_garColumn As DataColumn
            Get
                Return Me.columnfld_edad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civil_garColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ocupacion_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ocupacion_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ocupacion_garColumn As DataColumn
            Get
                Return Me.columnfld_ocupacion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_sectorColumn As DataColumn
            Get
                Return Me.columnfld_sector
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_id_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_no_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_no_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_del_cliente_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_id_del_cliente_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_del_prestamoColumn As DataColumn
            Get
                Return Me.columnfld_id_del_prestamo
            End Get
        End Property
        
        Friend ReadOnly Property fld_fecha_entrega_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_fecha_entrega_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_fecha_termina_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_fecha_termina_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_fecha_ultimo_abono_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_fecha_ultimo_abono_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_capital_cuotaColumn As DataColumn
            Get
                Return Me.columnfld_capital_cuota
            End Get
        End Property
        
        Friend ReadOnly Property fld_interes_cuotaColumn As DataColumn
            Get
                Return Me.columnfld_interes_cuota
            End Get
        End Property
        
        Friend ReadOnly Property fld_monto_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_monto_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_abono_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_abono_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_balance_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_balance_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_usuario_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_usuario_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_status_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_status_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_pendiente_amortizarColumn As DataColumn
            Get
                Return Me.columnfld_pendiente_amortizar
            End Get
        End Property
        
        Friend ReadOnly Property fld_total_amortizadoColumn As DataColumn
            Get
                Return Me.columnfld_total_amortizado
            End Get
        End Property
        
        Friend ReadOnly Property fld_capital_cuota_abonoColumn As DataColumn
            Get
                Return Me.columnfld_capital_cuota_abono
            End Get
        End Property
        
        Friend ReadOnly Property fld_capital_cuota_balanceColumn As DataColumn
            Get
                Return Me.columnfld_capital_cuota_balance
            End Get
        End Property
        
        Friend ReadOnly Property fld_interes_cuota_abonoColumn As DataColumn
            Get
                Return Me.columnfld_interes_cuota_abono
            End Get
        End Property
        
        Friend ReadOnly Property fld_interes_cuota_balanceColumn As DataColumn
            Get
                Return Me.columnfld_interes_cuota_balance
            End Get
        End Property
        
        Friend ReadOnly Property fld_ultimo_abono_interesColumn As DataColumn
            Get
                Return Me.columnfld_ultimo_abono_interes
            End Get
        End Property
        
        Friend ReadOnly Property fld_ultimo_abono_capitalColumn As DataColumn
            Get
                Return Me.columnfld_ultimo_abono_capital
            End Get
        End Property
        
        Friend ReadOnly Property fld_monto_moraColumn As DataColumn
            Get
                Return Me.columnfld_monto_mora
            End Get
        End Property
        
        Friend ReadOnly Property fld_abono_moraColumn As DataColumn
            Get
                Return Me.columnfld_abono_mora
            End Get
        End Property
        
        Friend ReadOnly Property fld_balance_moraColumn As DataColumn
            Get
                Return Me.columnfld_balance_mora
            End Get
        End Property
        
        Friend ReadOnly Property fld_ultimo_abono_moraColumn As DataColumn
            Get
                Return Me.columnfld_ultimo_abono_mora
            End Get
        End Property
        
        Friend ReadOnly Property fld_dias_vencimientoColumn As DataColumn
            Get
                Return Me.columnfld_dias_vencimiento
            End Get
        End Property
        
        Friend ReadOnly Property fld_socioColumn As DataColumn
            Get
                Return Me.columnfld_socio
            End Get
        End Property
        
        Friend ReadOnly Property fld_atraso_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_atraso_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_tipo_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_tipo_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_bce_prestamoColumn As DataColumn
            Get
                Return Me.columnfld_bce_prestamo
            End Get
        End Property
        
        Friend ReadOnly Property fld_cant_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_cant_cuotas
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_generar_cuotasRow
            Get
                Return CType(Me.Rows(index),view_generar_cuotasRow)
            End Get
        End Property
        
        Public Event view_generar_cuotasRowChanged As view_generar_cuotasRowChangeEventHandler
        
        Public Event view_generar_cuotasRowChanging As view_generar_cuotasRowChangeEventHandler
        
        Public Event view_generar_cuotasRowDeleted As view_generar_cuotasRowChangeEventHandler
        
        Public Event view_generar_cuotasRowDeleting As view_generar_cuotasRowChangeEventHandler
        
        Public Overloads Sub Addview_generar_cuotasRow(ByVal row As view_generar_cuotasRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addview_generar_cuotasRow( _
                    ByVal fld_FullName As String,  _
                    ByVal fld_apodo As String,  _
                    ByVal fld_Identity As String,  _
                    ByVal fld_Phone As String,  _
                    ByVal fld_Phone2 As String,  _
                    ByVal fld_Address As String,  _
                    ByVal fld_City As String,  _
                    ByVal fld_Status As String,  _
                    ByVal fld_bce As Double,  _
                    ByVal fld_cod_zona As Integer,  _
                    ByVal fld_zona As String,  _
                    ByVal fld_nombre_con As String,  _
                    ByVal fld_apodo_con As String,  _
                    ByVal fld_cedula_con As String,  _
                    ByVal fld_telefono_con As String,  _
                    ByVal fld_celular_con As String,  _
                    ByVal fld_ref_personales_cliente As String,  _
                    ByVal fld_ref_comerciales_cliente As String,  _
                    ByVal fld_nombre_gar As String,  _
                    ByVal fld_apodo_gar As String,  _
                    ByVal fld_cedula_gar As String,  _
                    ByVal fld_telefono_gar As String,  _
                    ByVal fld_celular_gar As String,  _
                    ByVal fld_direccion_gar As String,  _
                    ByVal fld_ciudad_gar As String,  _
                    ByVal fld_ref_personales_gar As String,  _
                    ByVal fld_ref_comerciales_gar As String,  _
                    ByVal fld_ingresos_mesuales As Double,  _
                    ByVal fld_nombre_banco1 As String,  _
                    ByVal fld_cuenta_banco1 As String,  _
                    ByVal fld_nombre_banco2 As String,  _
                    ByVal fld_cuenta_banco2 As String,  _
                    ByVal fld_otra_informacion As String,  _
                    ByVal fld_nombre_con_gar As String,  _
                    ByVal fld_apodo_con_gar As String,  _
                    ByVal fld_cedula_con_gar As String,  _
                    ByVal fld_telefono_con_gar As String,  _
                    ByVal fld_celular_con_gar As String,  _
                    ByVal fld_edad As Integer,  _
                    ByVal fld_estado_civil As String,  _
                    ByVal fld_edad_gar As Integer,  _
                    ByVal fld_estado_civil_gar As String,  _
                    ByVal fld_ocupacion_cliente As String,  _
                    ByVal fld_ocupacion_gar As String,  _
                    ByVal fld_sector As String,  _
                    ByVal fld_no_cuotas As String,  _
                    ByVal fld_id_del_cliente_cuotas As Integer,  _
                    ByVal fld_id_del_prestamo As Integer,  _
                    ByVal fld_fecha_entrega_cuotas As Date,  _
                    ByVal fld_fecha_termina_cuotas As Date,  _
                    ByVal fld_fecha_ultimo_abono_cuotas As Date,  _
                    ByVal fld_capital_cuota As Double,  _
                    ByVal fld_interes_cuota As Double,  _
                    ByVal fld_monto_cuotas As Double,  _
                    ByVal fld_abono_cuotas As Double,  _
                    ByVal fld_balance_cuotas As Double,  _
                    ByVal fld_usuario_cuotas As String,  _
                    ByVal fld_status_cuotas As String,  _
                    ByVal fld_pendiente_amortizar As Double,  _
                    ByVal fld_total_amortizado As Double,  _
                    ByVal fld_capital_cuota_abono As Double,  _
                    ByVal fld_capital_cuota_balance As Double,  _
                    ByVal fld_interes_cuota_abono As Double,  _
                    ByVal fld_interes_cuota_balance As Double,  _
                    ByVal fld_ultimo_abono_interes As Double,  _
                    ByVal fld_ultimo_abono_capital As Double,  _
                    ByVal fld_monto_mora As Double,  _
                    ByVal fld_abono_mora As Double,  _
                    ByVal fld_balance_mora As Double,  _
                    ByVal fld_ultimo_abono_mora As Double,  _
                    ByVal fld_dias_vencimiento As Integer,  _
                    ByVal fld_socio As String,  _
                    ByVal fld_atraso_cuotas As Double,  _
                    ByVal fld_tipo_cuotas As String,  _
                    ByVal fld_bce_prestamo As Double,  _
                    ByVal fld_cant_cuotas As Double) As view_generar_cuotasRow
            Dim rowview_generar_cuotasRow As view_generar_cuotasRow = CType(Me.NewRow,view_generar_cuotasRow)
            rowview_generar_cuotasRow.ItemArray = New Object() {Nothing, fld_FullName, fld_apodo, fld_Identity, fld_Phone, fld_Phone2, fld_Address, fld_City, fld_Status, fld_bce, fld_cod_zona, fld_zona, fld_nombre_con, fld_apodo_con, fld_cedula_con, fld_telefono_con, fld_celular_con, fld_ref_personales_cliente, fld_ref_comerciales_cliente, fld_nombre_gar, fld_apodo_gar, fld_cedula_gar, fld_telefono_gar, fld_celular_gar, fld_direccion_gar, fld_ciudad_gar, fld_ref_personales_gar, fld_ref_comerciales_gar, fld_ingresos_mesuales, fld_nombre_banco1, fld_cuenta_banco1, fld_nombre_banco2, fld_cuenta_banco2, fld_otra_informacion, fld_nombre_con_gar, fld_apodo_con_gar, fld_cedula_con_gar, fld_telefono_con_gar, fld_celular_con_gar, fld_edad, fld_estado_civil, fld_edad_gar, fld_estado_civil_gar, fld_ocupacion_cliente, fld_ocupacion_gar, fld_sector, Nothing, fld_no_cuotas, fld_id_del_cliente_cuotas, fld_id_del_prestamo, fld_fecha_entrega_cuotas, fld_fecha_termina_cuotas, fld_fecha_ultimo_abono_cuotas, fld_capital_cuota, fld_interes_cuota, fld_monto_cuotas, fld_abono_cuotas, fld_balance_cuotas, fld_usuario_cuotas, fld_status_cuotas, fld_pendiente_amortizar, fld_total_amortizado, fld_capital_cuota_abono, fld_capital_cuota_balance, fld_interes_cuota_abono, fld_interes_cuota_balance, fld_ultimo_abono_interes, fld_ultimo_abono_capital, fld_monto_mora, fld_abono_mora, fld_balance_mora, fld_ultimo_abono_mora, fld_dias_vencimiento, fld_socio, fld_atraso_cuotas, fld_tipo_cuotas, fld_bce_prestamo, fld_cant_cuotas}
            Me.Rows.Add(rowview_generar_cuotasRow)
            Return rowview_generar_cuotasRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As view_generar_cuotasDataTable = CType(MyBase.Clone,view_generar_cuotasDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New view_generar_cuotasDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnfld_FullName = Me.Columns("fld_FullName")
            Me.columnfld_apodo = Me.Columns("fld_apodo")
            Me.columnfld_Identity = Me.Columns("fld_Identity")
            Me.columnfld_Phone = Me.Columns("fld_Phone")
            Me.columnfld_Phone2 = Me.Columns("fld_Phone2")
            Me.columnfld_Address = Me.Columns("fld_Address")
            Me.columnfld_City = Me.Columns("fld_City")
            Me.columnfld_Status = Me.Columns("fld_Status")
            Me.columnfld_bce = Me.Columns("fld_bce")
            Me.columnfld_cod_zona = Me.Columns("fld_cod_zona")
            Me.columnfld_zona = Me.Columns("fld_zona")
            Me.columnfld_nombre_con = Me.Columns("fld_nombre_con")
            Me.columnfld_apodo_con = Me.Columns("fld_apodo_con")
            Me.columnfld_cedula_con = Me.Columns("fld_cedula_con")
            Me.columnfld_telefono_con = Me.Columns("fld_telefono_con")
            Me.columnfld_celular_con = Me.Columns("fld_celular_con")
            Me.columnfld_ref_personales_cliente = Me.Columns("fld_ref_personales_cliente")
            Me.columnfld_ref_comerciales_cliente = Me.Columns("fld_ref_comerciales_cliente")
            Me.columnfld_nombre_gar = Me.Columns("fld_nombre_gar")
            Me.columnfld_apodo_gar = Me.Columns("fld_apodo_gar")
            Me.columnfld_cedula_gar = Me.Columns("fld_cedula_gar")
            Me.columnfld_telefono_gar = Me.Columns("fld_telefono_gar")
            Me.columnfld_celular_gar = Me.Columns("fld_celular_gar")
            Me.columnfld_direccion_gar = Me.Columns("fld_direccion_gar")
            Me.columnfld_ciudad_gar = Me.Columns("fld_ciudad_gar")
            Me.columnfld_ref_personales_gar = Me.Columns("fld_ref_personales_gar")
            Me.columnfld_ref_comerciales_gar = Me.Columns("fld_ref_comerciales_gar")
            Me.columnfld_ingresos_mesuales = Me.Columns("fld_ingresos_mesuales")
            Me.columnfld_nombre_banco1 = Me.Columns("fld_nombre_banco1")
            Me.columnfld_cuenta_banco1 = Me.Columns("fld_cuenta_banco1")
            Me.columnfld_nombre_banco2 = Me.Columns("fld_nombre_banco2")
            Me.columnfld_cuenta_banco2 = Me.Columns("fld_cuenta_banco2")
            Me.columnfld_otra_informacion = Me.Columns("fld_otra_informacion")
            Me.columnfld_nombre_con_gar = Me.Columns("fld_nombre_con_gar")
            Me.columnfld_apodo_con_gar = Me.Columns("fld_apodo_con_gar")
            Me.columnfld_cedula_con_gar = Me.Columns("fld_cedula_con_gar")
            Me.columnfld_telefono_con_gar = Me.Columns("fld_telefono_con_gar")
            Me.columnfld_celular_con_gar = Me.Columns("fld_celular_con_gar")
            Me.columnfld_edad = Me.Columns("fld_edad")
            Me.columnfld_estado_civil = Me.Columns("fld_estado_civil")
            Me.columnfld_edad_gar = Me.Columns("fld_edad_gar")
            Me.columnfld_estado_civil_gar = Me.Columns("fld_estado_civil_gar")
            Me.columnfld_ocupacion_cliente = Me.Columns("fld_ocupacion_cliente")
            Me.columnfld_ocupacion_gar = Me.Columns("fld_ocupacion_gar")
            Me.columnfld_sector = Me.Columns("fld_sector")
            Me.columnfld_id_cuotas = Me.Columns("fld_id_cuotas")
            Me.columnfld_no_cuotas = Me.Columns("fld_no_cuotas")
            Me.columnfld_id_del_cliente_cuotas = Me.Columns("fld_id_del_cliente_cuotas")
            Me.columnfld_id_del_prestamo = Me.Columns("fld_id_del_prestamo")
            Me.columnfld_fecha_entrega_cuotas = Me.Columns("fld_fecha_entrega_cuotas")
            Me.columnfld_fecha_termina_cuotas = Me.Columns("fld_fecha_termina_cuotas")
            Me.columnfld_fecha_ultimo_abono_cuotas = Me.Columns("fld_fecha_ultimo_abono_cuotas")
            Me.columnfld_capital_cuota = Me.Columns("fld_capital_cuota")
            Me.columnfld_interes_cuota = Me.Columns("fld_interes_cuota")
            Me.columnfld_monto_cuotas = Me.Columns("fld_monto_cuotas")
            Me.columnfld_abono_cuotas = Me.Columns("fld_abono_cuotas")
            Me.columnfld_balance_cuotas = Me.Columns("fld_balance_cuotas")
            Me.columnfld_usuario_cuotas = Me.Columns("fld_usuario_cuotas")
            Me.columnfld_status_cuotas = Me.Columns("fld_status_cuotas")
            Me.columnfld_pendiente_amortizar = Me.Columns("fld_pendiente_amortizar")
            Me.columnfld_total_amortizado = Me.Columns("fld_total_amortizado")
            Me.columnfld_capital_cuota_abono = Me.Columns("fld_capital_cuota_abono")
            Me.columnfld_capital_cuota_balance = Me.Columns("fld_capital_cuota_balance")
            Me.columnfld_interes_cuota_abono = Me.Columns("fld_interes_cuota_abono")
            Me.columnfld_interes_cuota_balance = Me.Columns("fld_interes_cuota_balance")
            Me.columnfld_ultimo_abono_interes = Me.Columns("fld_ultimo_abono_interes")
            Me.columnfld_ultimo_abono_capital = Me.Columns("fld_ultimo_abono_capital")
            Me.columnfld_monto_mora = Me.Columns("fld_monto_mora")
            Me.columnfld_abono_mora = Me.Columns("fld_abono_mora")
            Me.columnfld_balance_mora = Me.Columns("fld_balance_mora")
            Me.columnfld_ultimo_abono_mora = Me.Columns("fld_ultimo_abono_mora")
            Me.columnfld_dias_vencimiento = Me.Columns("fld_dias_vencimiento")
            Me.columnfld_socio = Me.Columns("fld_socio")
            Me.columnfld_atraso_cuotas = Me.Columns("fld_atraso_cuotas")
            Me.columnfld_tipo_cuotas = Me.Columns("fld_tipo_cuotas")
            Me.columnfld_bce_prestamo = Me.Columns("fld_bce_prestamo")
            Me.columnfld_cant_cuotas = Me.Columns("fld_cant_cuotas")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnfld_FullName = New DataColumn("fld_FullName", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_FullName)
            Me.columnfld_apodo = New DataColumn("fld_apodo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo)
            Me.columnfld_Identity = New DataColumn("fld_Identity", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Identity)
            Me.columnfld_Phone = New DataColumn("fld_Phone", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone)
            Me.columnfld_Phone2 = New DataColumn("fld_Phone2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone2)
            Me.columnfld_Address = New DataColumn("fld_Address", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Address)
            Me.columnfld_City = New DataColumn("fld_City", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_City)
            Me.columnfld_Status = New DataColumn("fld_Status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Status)
            Me.columnfld_bce = New DataColumn("fld_bce", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce)
            Me.columnfld_cod_zona = New DataColumn("fld_cod_zona", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cod_zona)
            Me.columnfld_zona = New DataColumn("fld_zona", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_zona)
            Me.columnfld_nombre_con = New DataColumn("fld_nombre_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con)
            Me.columnfld_apodo_con = New DataColumn("fld_apodo_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con)
            Me.columnfld_cedula_con = New DataColumn("fld_cedula_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con)
            Me.columnfld_telefono_con = New DataColumn("fld_telefono_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con)
            Me.columnfld_celular_con = New DataColumn("fld_celular_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con)
            Me.columnfld_ref_personales_cliente = New DataColumn("fld_ref_personales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_cliente)
            Me.columnfld_ref_comerciales_cliente = New DataColumn("fld_ref_comerciales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_cliente)
            Me.columnfld_nombre_gar = New DataColumn("fld_nombre_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_gar)
            Me.columnfld_apodo_gar = New DataColumn("fld_apodo_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_gar)
            Me.columnfld_cedula_gar = New DataColumn("fld_cedula_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_gar)
            Me.columnfld_telefono_gar = New DataColumn("fld_telefono_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_gar)
            Me.columnfld_celular_gar = New DataColumn("fld_celular_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_gar)
            Me.columnfld_direccion_gar = New DataColumn("fld_direccion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_direccion_gar)
            Me.columnfld_ciudad_gar = New DataColumn("fld_ciudad_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ciudad_gar)
            Me.columnfld_ref_personales_gar = New DataColumn("fld_ref_personales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_gar)
            Me.columnfld_ref_comerciales_gar = New DataColumn("fld_ref_comerciales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_gar)
            Me.columnfld_ingresos_mesuales = New DataColumn("fld_ingresos_mesuales", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ingresos_mesuales)
            Me.columnfld_nombre_banco1 = New DataColumn("fld_nombre_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco1)
            Me.columnfld_cuenta_banco1 = New DataColumn("fld_cuenta_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco1)
            Me.columnfld_nombre_banco2 = New DataColumn("fld_nombre_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco2)
            Me.columnfld_cuenta_banco2 = New DataColumn("fld_cuenta_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco2)
            Me.columnfld_otra_informacion = New DataColumn("fld_otra_informacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_otra_informacion)
            Me.columnfld_nombre_con_gar = New DataColumn("fld_nombre_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con_gar)
            Me.columnfld_apodo_con_gar = New DataColumn("fld_apodo_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con_gar)
            Me.columnfld_cedula_con_gar = New DataColumn("fld_cedula_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con_gar)
            Me.columnfld_telefono_con_gar = New DataColumn("fld_telefono_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con_gar)
            Me.columnfld_celular_con_gar = New DataColumn("fld_celular_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con_gar)
            Me.columnfld_edad = New DataColumn("fld_edad", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad)
            Me.columnfld_estado_civil = New DataColumn("fld_estado_civil", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil)
            Me.columnfld_edad_gar = New DataColumn("fld_edad_gar", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad_gar)
            Me.columnfld_estado_civil_gar = New DataColumn("fld_estado_civil_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil_gar)
            Me.columnfld_ocupacion_cliente = New DataColumn("fld_ocupacion_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ocupacion_cliente)
            Me.columnfld_ocupacion_gar = New DataColumn("fld_ocupacion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ocupacion_gar)
            Me.columnfld_sector = New DataColumn("fld_sector", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_sector)
            Me.columnfld_id_cuotas = New DataColumn("fld_id_cuotas", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_cuotas)
            Me.columnfld_no_cuotas = New DataColumn("fld_no_cuotas", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_no_cuotas)
            Me.columnfld_id_del_cliente_cuotas = New DataColumn("fld_id_del_cliente_cuotas", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_del_cliente_cuotas)
            Me.columnfld_id_del_prestamo = New DataColumn("fld_id_del_prestamo", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_del_prestamo)
            Me.columnfld_fecha_entrega_cuotas = New DataColumn("fld_fecha_entrega_cuotas", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha_entrega_cuotas)
            Me.columnfld_fecha_termina_cuotas = New DataColumn("fld_fecha_termina_cuotas", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha_termina_cuotas)
            Me.columnfld_fecha_ultimo_abono_cuotas = New DataColumn("fld_fecha_ultimo_abono_cuotas", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha_ultimo_abono_cuotas)
            Me.columnfld_capital_cuota = New DataColumn("fld_capital_cuota", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_capital_cuota)
            Me.columnfld_interes_cuota = New DataColumn("fld_interes_cuota", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_interes_cuota)
            Me.columnfld_monto_cuotas = New DataColumn("fld_monto_cuotas", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto_cuotas)
            Me.columnfld_abono_cuotas = New DataColumn("fld_abono_cuotas", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_abono_cuotas)
            Me.columnfld_balance_cuotas = New DataColumn("fld_balance_cuotas", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_balance_cuotas)
            Me.columnfld_usuario_cuotas = New DataColumn("fld_usuario_cuotas", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_usuario_cuotas)
            Me.columnfld_status_cuotas = New DataColumn("fld_status_cuotas", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_status_cuotas)
            Me.columnfld_pendiente_amortizar = New DataColumn("fld_pendiente_amortizar", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_pendiente_amortizar)
            Me.columnfld_total_amortizado = New DataColumn("fld_total_amortizado", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_total_amortizado)
            Me.columnfld_capital_cuota_abono = New DataColumn("fld_capital_cuota_abono", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_capital_cuota_abono)
            Me.columnfld_capital_cuota_balance = New DataColumn("fld_capital_cuota_balance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_capital_cuota_balance)
            Me.columnfld_interes_cuota_abono = New DataColumn("fld_interes_cuota_abono", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_interes_cuota_abono)
            Me.columnfld_interes_cuota_balance = New DataColumn("fld_interes_cuota_balance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_interes_cuota_balance)
            Me.columnfld_ultimo_abono_interes = New DataColumn("fld_ultimo_abono_interes", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ultimo_abono_interes)
            Me.columnfld_ultimo_abono_capital = New DataColumn("fld_ultimo_abono_capital", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ultimo_abono_capital)
            Me.columnfld_monto_mora = New DataColumn("fld_monto_mora", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto_mora)
            Me.columnfld_abono_mora = New DataColumn("fld_abono_mora", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_abono_mora)
            Me.columnfld_balance_mora = New DataColumn("fld_balance_mora", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_balance_mora)
            Me.columnfld_ultimo_abono_mora = New DataColumn("fld_ultimo_abono_mora", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ultimo_abono_mora)
            Me.columnfld_dias_vencimiento = New DataColumn("fld_dias_vencimiento", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_dias_vencimiento)
            Me.columnfld_socio = New DataColumn("fld_socio", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_socio)
            Me.columnfld_atraso_cuotas = New DataColumn("fld_atraso_cuotas", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_atraso_cuotas)
            Me.columnfld_tipo_cuotas = New DataColumn("fld_tipo_cuotas", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_tipo_cuotas)
            Me.columnfld_bce_prestamo = New DataColumn("fld_bce_prestamo", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce_prestamo)
            Me.columnfld_cant_cuotas = New DataColumn("fld_cant_cuotas", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cant_cuotas)
            Me.columnfld_id.AutoIncrement = true
            Me.columnfld_id_cuotas.AutoIncrement = true
        End Sub
        
        Public Function Newview_generar_cuotasRow() As view_generar_cuotasRow
            Return CType(Me.NewRow,view_generar_cuotasRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New view_generar_cuotasRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(view_generar_cuotasRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_generar_cuotasRowChangedEvent) Is Nothing) Then
                RaiseEvent view_generar_cuotasRowChanged(Me, New view_generar_cuotasRowChangeEvent(CType(e.Row,view_generar_cuotasRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_generar_cuotasRowChangingEvent) Is Nothing) Then
                RaiseEvent view_generar_cuotasRowChanging(Me, New view_generar_cuotasRowChangeEvent(CType(e.Row,view_generar_cuotasRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_generar_cuotasRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_generar_cuotasRowDeleted(Me, New view_generar_cuotasRowChangeEvent(CType(e.Row,view_generar_cuotasRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_generar_cuotasRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_generar_cuotasRowDeleting(Me, New view_generar_cuotasRowChangeEvent(CType(e.Row,view_generar_cuotasRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeview_generar_cuotasRow(ByVal row As view_generar_cuotasRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_generar_cuotasRow
        Inherits DataRow
        
        Private tableview_generar_cuotas As view_generar_cuotasDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_generar_cuotas = CType(Me.Table,view_generar_cuotasDataTable)
        End Sub
        
        Public Property fld_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_idColumn) = value
            End Set
        End Property
        
        Public Property fld_FullName As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_FullNameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_FullNameColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_apodoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_apodoColumn) = value
            End Set
        End Property
        
        Public Property fld_Identity As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_IdentityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_IdentityColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_PhoneColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_PhoneColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_Phone2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_Phone2Column) = value
            End Set
        End Property
        
        Public Property fld_Address As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_AddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_AddressColumn) = value
            End Set
        End Property
        
        Public Property fld_City As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_CityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_CityColumn) = value
            End Set
        End Property
        
        Public Property fld_Status As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_StatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_StatusColumn) = value
            End Set
        End Property
        
        Public Property fld_bce As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_bceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_bceColumn) = value
            End Set
        End Property
        
        Public Property fld_cod_zona As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_cod_zonaColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_cod_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_zona As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_zonaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_nombre_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_nombre_conColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_apodo_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_apodo_conColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_cedula_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_cedula_conColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_telefono_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_telefono_conColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_celular_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_celular_conColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_ref_personales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_ref_personales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_ref_comerciales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_ref_comerciales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_nombre_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_nombre_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_apodo_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_apodo_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_cedula_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_cedula_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_telefono_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_telefono_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_celular_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_celular_garColumn) = value
            End Set
        End Property
        
        Public Property fld_direccion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_direccion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_direccion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ciudad_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_ciudad_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_ciudad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_ref_personales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_ref_personales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_ref_comerciales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_ref_comerciales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ingresos_mesuales As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_ingresos_mesualesColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_ingresos_mesualesColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_nombre_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_nombre_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_cuenta_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_cuenta_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_nombre_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_nombre_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_cuenta_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_cuenta_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_otra_informacion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_otra_informacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_otra_informacionColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_nombre_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_nombre_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_apodo_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_apodo_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_cedula_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_cedula_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_telefono_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_telefono_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_celular_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_celular_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_edad As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_edadColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_edadColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_estado_civilColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_estado_civilColumn) = value
            End Set
        End Property
        
        Public Property fld_edad_gar As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_edad_garColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_edad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_estado_civil_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_estado_civil_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ocupacion_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_ocupacion_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_ocupacion_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ocupacion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_ocupacion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_ocupacion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_sector As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_sectorColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_sectorColumn) = value
            End Set
        End Property
        
        Public Property fld_id_cuotas As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_id_cuotasColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_id_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_no_cuotas As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_no_cuotasColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_no_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_id_del_cliente_cuotas As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_id_del_cliente_cuotasColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_id_del_cliente_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_id_del_prestamo As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_id_del_prestamoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_id_del_prestamoColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha_entrega_cuotas As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_fecha_entrega_cuotasColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_fecha_entrega_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha_termina_cuotas As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_fecha_termina_cuotasColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_fecha_termina_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha_ultimo_abono_cuotas As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_fecha_ultimo_abono_cuotasColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_fecha_ultimo_abono_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_capital_cuota As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_capital_cuotaColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_capital_cuotaColumn) = value
            End Set
        End Property
        
        Public Property fld_interes_cuota As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_interes_cuotaColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_interes_cuotaColumn) = value
            End Set
        End Property
        
        Public Property fld_monto_cuotas As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_monto_cuotasColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_monto_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_abono_cuotas As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_abono_cuotasColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_abono_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_balance_cuotas As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_balance_cuotasColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_balance_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_usuario_cuotas As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_usuario_cuotasColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_usuario_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_status_cuotas As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_status_cuotasColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_status_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_pendiente_amortizar As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_pendiente_amortizarColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_pendiente_amortizarColumn) = value
            End Set
        End Property
        
        Public Property fld_total_amortizado As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_total_amortizadoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_total_amortizadoColumn) = value
            End Set
        End Property
        
        Public Property fld_capital_cuota_abono As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_capital_cuota_abonoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_capital_cuota_abonoColumn) = value
            End Set
        End Property
        
        Public Property fld_capital_cuota_balance As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_capital_cuota_balanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_capital_cuota_balanceColumn) = value
            End Set
        End Property
        
        Public Property fld_interes_cuota_abono As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_interes_cuota_abonoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_interes_cuota_abonoColumn) = value
            End Set
        End Property
        
        Public Property fld_interes_cuota_balance As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_interes_cuota_balanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_interes_cuota_balanceColumn) = value
            End Set
        End Property
        
        Public Property fld_ultimo_abono_interes As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_ultimo_abono_interesColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_ultimo_abono_interesColumn) = value
            End Set
        End Property
        
        Public Property fld_ultimo_abono_capital As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_ultimo_abono_capitalColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_ultimo_abono_capitalColumn) = value
            End Set
        End Property
        
        Public Property fld_monto_mora As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_monto_moraColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_monto_moraColumn) = value
            End Set
        End Property
        
        Public Property fld_abono_mora As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_abono_moraColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_abono_moraColumn) = value
            End Set
        End Property
        
        Public Property fld_balance_mora As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_balance_moraColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_balance_moraColumn) = value
            End Set
        End Property
        
        Public Property fld_ultimo_abono_mora As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_ultimo_abono_moraColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_ultimo_abono_moraColumn) = value
            End Set
        End Property
        
        Public Property fld_dias_vencimiento As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_dias_vencimientoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_dias_vencimientoColumn) = value
            End Set
        End Property
        
        Public Property fld_socio As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_socioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_socioColumn) = value
            End Set
        End Property
        
        Public Property fld_atraso_cuotas As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_atraso_cuotasColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_atraso_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_tipo_cuotas As String
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_tipo_cuotasColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_tipo_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_bce_prestamo As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_bce_prestamoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_bce_prestamoColumn) = value
            End Set
        End Property
        
        Public Property fld_cant_cuotas As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_generar_cuotas.fld_cant_cuotasColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_generar_cuotas.fld_cant_cuotasColumn) = value
            End Set
        End Property
        
        Public Function Isfld_idNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_idColumn)
        End Function
        
        Public Sub Setfld_idNull()
            Me(Me.tableview_generar_cuotas.fld_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_FullNameNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_FullNameColumn)
        End Function
        
        Public Sub Setfld_FullNameNull()
            Me(Me.tableview_generar_cuotas.fld_FullNameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodoNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_apodoColumn)
        End Function
        
        Public Sub Setfld_apodoNull()
            Me(Me.tableview_generar_cuotas.fld_apodoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_IdentityNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_IdentityColumn)
        End Function
        
        Public Sub Setfld_IdentityNull()
            Me(Me.tableview_generar_cuotas.fld_IdentityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_PhoneNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_PhoneColumn)
        End Function
        
        Public Sub Setfld_PhoneNull()
            Me(Me.tableview_generar_cuotas.fld_PhoneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_Phone2Null() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_Phone2Column)
        End Function
        
        Public Sub Setfld_Phone2Null()
            Me(Me.tableview_generar_cuotas.fld_Phone2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_AddressNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_AddressColumn)
        End Function
        
        Public Sub Setfld_AddressNull()
            Me(Me.tableview_generar_cuotas.fld_AddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_CityNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_CityColumn)
        End Function
        
        Public Sub Setfld_CityNull()
            Me(Me.tableview_generar_cuotas.fld_CityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_StatusNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_StatusColumn)
        End Function
        
        Public Sub Setfld_StatusNull()
            Me(Me.tableview_generar_cuotas.fld_StatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bceNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_bceColumn)
        End Function
        
        Public Sub Setfld_bceNull()
            Me(Me.tableview_generar_cuotas.fld_bceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cod_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_cod_zonaColumn)
        End Function
        
        Public Sub Setfld_cod_zonaNull()
            Me(Me.tableview_generar_cuotas.fld_cod_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_zonaColumn)
        End Function
        
        Public Sub Setfld_zonaNull()
            Me(Me.tableview_generar_cuotas.fld_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_conNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_nombre_conColumn)
        End Function
        
        Public Sub Setfld_nombre_conNull()
            Me(Me.tableview_generar_cuotas.fld_nombre_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_conNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_apodo_conColumn)
        End Function
        
        Public Sub Setfld_apodo_conNull()
            Me(Me.tableview_generar_cuotas.fld_apodo_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_conNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_cedula_conColumn)
        End Function
        
        Public Sub Setfld_cedula_conNull()
            Me(Me.tableview_generar_cuotas.fld_cedula_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_conNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_telefono_conColumn)
        End Function
        
        Public Sub Setfld_telefono_conNull()
            Me(Me.tableview_generar_cuotas.fld_telefono_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_conNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_celular_conColumn)
        End Function
        
        Public Sub Setfld_celular_conNull()
            Me(Me.tableview_generar_cuotas.fld_celular_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_ref_personales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_personales_clienteNull()
            Me(Me.tableview_generar_cuotas.fld_ref_personales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_ref_comerciales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_clienteNull()
            Me(Me.tableview_generar_cuotas.fld_ref_comerciales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_garNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_nombre_garColumn)
        End Function
        
        Public Sub Setfld_nombre_garNull()
            Me(Me.tableview_generar_cuotas.fld_nombre_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_garNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_apodo_garColumn)
        End Function
        
        Public Sub Setfld_apodo_garNull()
            Me(Me.tableview_generar_cuotas.fld_apodo_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_garNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_cedula_garColumn)
        End Function
        
        Public Sub Setfld_cedula_garNull()
            Me(Me.tableview_generar_cuotas.fld_cedula_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_garNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_telefono_garColumn)
        End Function
        
        Public Sub Setfld_telefono_garNull()
            Me(Me.tableview_generar_cuotas.fld_telefono_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_garNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_celular_garColumn)
        End Function
        
        Public Sub Setfld_celular_garNull()
            Me(Me.tableview_generar_cuotas.fld_celular_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_direccion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_direccion_garColumn)
        End Function
        
        Public Sub Setfld_direccion_garNull()
            Me(Me.tableview_generar_cuotas.fld_direccion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ciudad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_ciudad_garColumn)
        End Function
        
        Public Sub Setfld_ciudad_garNull()
            Me(Me.tableview_generar_cuotas.fld_ciudad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_ref_personales_garColumn)
        End Function
        
        Public Sub Setfld_ref_personales_garNull()
            Me(Me.tableview_generar_cuotas.fld_ref_personales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_ref_comerciales_garColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_garNull()
            Me(Me.tableview_generar_cuotas.fld_ref_comerciales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ingresos_mesualesNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_ingresos_mesualesColumn)
        End Function
        
        Public Sub Setfld_ingresos_mesualesNull()
            Me(Me.tableview_generar_cuotas.fld_ingresos_mesualesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_nombre_banco1Column)
        End Function
        
        Public Sub Setfld_nombre_banco1Null()
            Me(Me.tableview_generar_cuotas.fld_nombre_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_cuenta_banco1Column)
        End Function
        
        Public Sub Setfld_cuenta_banco1Null()
            Me(Me.tableview_generar_cuotas.fld_cuenta_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_nombre_banco2Column)
        End Function
        
        Public Sub Setfld_nombre_banco2Null()
            Me(Me.tableview_generar_cuotas.fld_nombre_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_cuenta_banco2Column)
        End Function
        
        Public Sub Setfld_cuenta_banco2Null()
            Me(Me.tableview_generar_cuotas.fld_cuenta_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_otra_informacionNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_otra_informacionColumn)
        End Function
        
        Public Sub Setfld_otra_informacionNull()
            Me(Me.tableview_generar_cuotas.fld_otra_informacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_nombre_con_garColumn)
        End Function
        
        Public Sub Setfld_nombre_con_garNull()
            Me(Me.tableview_generar_cuotas.fld_nombre_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_apodo_con_garColumn)
        End Function
        
        Public Sub Setfld_apodo_con_garNull()
            Me(Me.tableview_generar_cuotas.fld_apodo_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_cedula_con_garColumn)
        End Function
        
        Public Sub Setfld_cedula_con_garNull()
            Me(Me.tableview_generar_cuotas.fld_cedula_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_telefono_con_garColumn)
        End Function
        
        Public Sub Setfld_telefono_con_garNull()
            Me(Me.tableview_generar_cuotas.fld_telefono_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_celular_con_garColumn)
        End Function
        
        Public Sub Setfld_celular_con_garNull()
            Me(Me.tableview_generar_cuotas.fld_celular_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edadNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_edadColumn)
        End Function
        
        Public Sub Setfld_edadNull()
            Me(Me.tableview_generar_cuotas.fld_edadColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civilNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_estado_civilColumn)
        End Function
        
        Public Sub Setfld_estado_civilNull()
            Me(Me.tableview_generar_cuotas.fld_estado_civilColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_edad_garColumn)
        End Function
        
        Public Sub Setfld_edad_garNull()
            Me(Me.tableview_generar_cuotas.fld_edad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civil_garNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_estado_civil_garColumn)
        End Function
        
        Public Sub Setfld_estado_civil_garNull()
            Me(Me.tableview_generar_cuotas.fld_estado_civil_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ocupacion_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_ocupacion_clienteColumn)
        End Function
        
        Public Sub Setfld_ocupacion_clienteNull()
            Me(Me.tableview_generar_cuotas.fld_ocupacion_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ocupacion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_ocupacion_garColumn)
        End Function
        
        Public Sub Setfld_ocupacion_garNull()
            Me(Me.tableview_generar_cuotas.fld_ocupacion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_sectorNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_sectorColumn)
        End Function
        
        Public Sub Setfld_sectorNull()
            Me(Me.tableview_generar_cuotas.fld_sectorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_id_cuotasColumn)
        End Function
        
        Public Sub Setfld_id_cuotasNull()
            Me(Me.tableview_generar_cuotas.fld_id_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_no_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_no_cuotasColumn)
        End Function
        
        Public Sub Setfld_no_cuotasNull()
            Me(Me.tableview_generar_cuotas.fld_no_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_del_cliente_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_id_del_cliente_cuotasColumn)
        End Function
        
        Public Sub Setfld_id_del_cliente_cuotasNull()
            Me(Me.tableview_generar_cuotas.fld_id_del_cliente_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_del_prestamoNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_id_del_prestamoColumn)
        End Function
        
        Public Sub Setfld_id_del_prestamoNull()
            Me(Me.tableview_generar_cuotas.fld_id_del_prestamoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fecha_entrega_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_fecha_entrega_cuotasColumn)
        End Function
        
        Public Sub Setfld_fecha_entrega_cuotasNull()
            Me(Me.tableview_generar_cuotas.fld_fecha_entrega_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fecha_termina_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_fecha_termina_cuotasColumn)
        End Function
        
        Public Sub Setfld_fecha_termina_cuotasNull()
            Me(Me.tableview_generar_cuotas.fld_fecha_termina_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fecha_ultimo_abono_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_fecha_ultimo_abono_cuotasColumn)
        End Function
        
        Public Sub Setfld_fecha_ultimo_abono_cuotasNull()
            Me(Me.tableview_generar_cuotas.fld_fecha_ultimo_abono_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_capital_cuotaNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_capital_cuotaColumn)
        End Function
        
        Public Sub Setfld_capital_cuotaNull()
            Me(Me.tableview_generar_cuotas.fld_capital_cuotaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_interes_cuotaNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_interes_cuotaColumn)
        End Function
        
        Public Sub Setfld_interes_cuotaNull()
            Me(Me.tableview_generar_cuotas.fld_interes_cuotaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_monto_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_monto_cuotasColumn)
        End Function
        
        Public Sub Setfld_monto_cuotasNull()
            Me(Me.tableview_generar_cuotas.fld_monto_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_abono_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_abono_cuotasColumn)
        End Function
        
        Public Sub Setfld_abono_cuotasNull()
            Me(Me.tableview_generar_cuotas.fld_abono_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_balance_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_balance_cuotasColumn)
        End Function
        
        Public Sub Setfld_balance_cuotasNull()
            Me(Me.tableview_generar_cuotas.fld_balance_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_usuario_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_usuario_cuotasColumn)
        End Function
        
        Public Sub Setfld_usuario_cuotasNull()
            Me(Me.tableview_generar_cuotas.fld_usuario_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_status_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_status_cuotasColumn)
        End Function
        
        Public Sub Setfld_status_cuotasNull()
            Me(Me.tableview_generar_cuotas.fld_status_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_pendiente_amortizarNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_pendiente_amortizarColumn)
        End Function
        
        Public Sub Setfld_pendiente_amortizarNull()
            Me(Me.tableview_generar_cuotas.fld_pendiente_amortizarColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_total_amortizadoNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_total_amortizadoColumn)
        End Function
        
        Public Sub Setfld_total_amortizadoNull()
            Me(Me.tableview_generar_cuotas.fld_total_amortizadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_capital_cuota_abonoNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_capital_cuota_abonoColumn)
        End Function
        
        Public Sub Setfld_capital_cuota_abonoNull()
            Me(Me.tableview_generar_cuotas.fld_capital_cuota_abonoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_capital_cuota_balanceNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_capital_cuota_balanceColumn)
        End Function
        
        Public Sub Setfld_capital_cuota_balanceNull()
            Me(Me.tableview_generar_cuotas.fld_capital_cuota_balanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_interes_cuota_abonoNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_interes_cuota_abonoColumn)
        End Function
        
        Public Sub Setfld_interes_cuota_abonoNull()
            Me(Me.tableview_generar_cuotas.fld_interes_cuota_abonoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_interes_cuota_balanceNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_interes_cuota_balanceColumn)
        End Function
        
        Public Sub Setfld_interes_cuota_balanceNull()
            Me(Me.tableview_generar_cuotas.fld_interes_cuota_balanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ultimo_abono_interesNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_ultimo_abono_interesColumn)
        End Function
        
        Public Sub Setfld_ultimo_abono_interesNull()
            Me(Me.tableview_generar_cuotas.fld_ultimo_abono_interesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ultimo_abono_capitalNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_ultimo_abono_capitalColumn)
        End Function
        
        Public Sub Setfld_ultimo_abono_capitalNull()
            Me(Me.tableview_generar_cuotas.fld_ultimo_abono_capitalColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_monto_moraNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_monto_moraColumn)
        End Function
        
        Public Sub Setfld_monto_moraNull()
            Me(Me.tableview_generar_cuotas.fld_monto_moraColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_abono_moraNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_abono_moraColumn)
        End Function
        
        Public Sub Setfld_abono_moraNull()
            Me(Me.tableview_generar_cuotas.fld_abono_moraColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_balance_moraNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_balance_moraColumn)
        End Function
        
        Public Sub Setfld_balance_moraNull()
            Me(Me.tableview_generar_cuotas.fld_balance_moraColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ultimo_abono_moraNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_ultimo_abono_moraColumn)
        End Function
        
        Public Sub Setfld_ultimo_abono_moraNull()
            Me(Me.tableview_generar_cuotas.fld_ultimo_abono_moraColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_dias_vencimientoNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_dias_vencimientoColumn)
        End Function
        
        Public Sub Setfld_dias_vencimientoNull()
            Me(Me.tableview_generar_cuotas.fld_dias_vencimientoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_socioNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_socioColumn)
        End Function
        
        Public Sub Setfld_socioNull()
            Me(Me.tableview_generar_cuotas.fld_socioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_atraso_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_atraso_cuotasColumn)
        End Function
        
        Public Sub Setfld_atraso_cuotasNull()
            Me(Me.tableview_generar_cuotas.fld_atraso_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_tipo_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_tipo_cuotasColumn)
        End Function
        
        Public Sub Setfld_tipo_cuotasNull()
            Me(Me.tableview_generar_cuotas.fld_tipo_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bce_prestamoNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_bce_prestamoColumn)
        End Function
        
        Public Sub Setfld_bce_prestamoNull()
            Me(Me.tableview_generar_cuotas.fld_bce_prestamoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cant_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_generar_cuotas.fld_cant_cuotasColumn)
        End Function
        
        Public Sub Setfld_cant_cuotasNull()
            Me(Me.tableview_generar_cuotas.fld_cant_cuotasColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_generar_cuotasRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As view_generar_cuotasRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As view_generar_cuotasRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As view_generar_cuotasRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_movimiento_inventarioDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id_mi As DataColumn
        
        Private columnfld_date_mi As DataColumn
        
        Private columnfld_description_mi As DataColumn
        
        Private columnfld_entrada_mi As DataColumn
        
        Private columnfld_salida_mi As DataColumn
        
        Private columnfld_bce_mi As DataColumn
        
        Private columnfld_pro_id_mi As DataColumn
        
        Private columnfld_tipo_doc_mi As DataColumn
        
        Private columnfld_tipo_doc_id_mi As DataColumn
        
        Private columnfld_usuario_mi As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_movimiento_inventario")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_miColumn As DataColumn
            Get
                Return Me.columnfld_id_mi
            End Get
        End Property
        
        Friend ReadOnly Property fld_date_miColumn As DataColumn
            Get
                Return Me.columnfld_date_mi
            End Get
        End Property
        
        Friend ReadOnly Property fld_description_miColumn As DataColumn
            Get
                Return Me.columnfld_description_mi
            End Get
        End Property
        
        Friend ReadOnly Property fld_entrada_miColumn As DataColumn
            Get
                Return Me.columnfld_entrada_mi
            End Get
        End Property
        
        Friend ReadOnly Property fld_salida_miColumn As DataColumn
            Get
                Return Me.columnfld_salida_mi
            End Get
        End Property
        
        Friend ReadOnly Property fld_bce_miColumn As DataColumn
            Get
                Return Me.columnfld_bce_mi
            End Get
        End Property
        
        Friend ReadOnly Property fld_pro_id_miColumn As DataColumn
            Get
                Return Me.columnfld_pro_id_mi
            End Get
        End Property
        
        Friend ReadOnly Property fld_tipo_doc_miColumn As DataColumn
            Get
                Return Me.columnfld_tipo_doc_mi
            End Get
        End Property
        
        Friend ReadOnly Property fld_tipo_doc_id_miColumn As DataColumn
            Get
                Return Me.columnfld_tipo_doc_id_mi
            End Get
        End Property
        
        Friend ReadOnly Property fld_usuario_miColumn As DataColumn
            Get
                Return Me.columnfld_usuario_mi
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_movimiento_inventarioRow
            Get
                Return CType(Me.Rows(index),tbl_movimiento_inventarioRow)
            End Get
        End Property
        
        Public Event tbl_movimiento_inventarioRowChanged As tbl_movimiento_inventarioRowChangeEventHandler
        
        Public Event tbl_movimiento_inventarioRowChanging As tbl_movimiento_inventarioRowChangeEventHandler
        
        Public Event tbl_movimiento_inventarioRowDeleted As tbl_movimiento_inventarioRowChangeEventHandler
        
        Public Event tbl_movimiento_inventarioRowDeleting As tbl_movimiento_inventarioRowChangeEventHandler
        
        Public Overloads Sub Addtbl_movimiento_inventarioRow(ByVal row As tbl_movimiento_inventarioRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_movimiento_inventarioRow(ByVal fld_date_mi As Date, ByVal fld_description_mi As String, ByVal fld_entrada_mi As Double, ByVal fld_salida_mi As Double, ByVal fld_bce_mi As Double, ByVal fld_pro_id_mi As Integer, ByVal fld_tipo_doc_mi As String, ByVal fld_tipo_doc_id_mi As Integer, ByVal fld_usuario_mi As String) As tbl_movimiento_inventarioRow
            Dim rowtbl_movimiento_inventarioRow As tbl_movimiento_inventarioRow = CType(Me.NewRow,tbl_movimiento_inventarioRow)
            rowtbl_movimiento_inventarioRow.ItemArray = New Object() {Nothing, fld_date_mi, fld_description_mi, fld_entrada_mi, fld_salida_mi, fld_bce_mi, fld_pro_id_mi, fld_tipo_doc_mi, fld_tipo_doc_id_mi, fld_usuario_mi}
            Me.Rows.Add(rowtbl_movimiento_inventarioRow)
            Return rowtbl_movimiento_inventarioRow
        End Function
        
        Public Function FindByfld_id_mi(ByVal fld_id_mi As Integer) As tbl_movimiento_inventarioRow
            Return CType(Me.Rows.Find(New Object() {fld_id_mi}),tbl_movimiento_inventarioRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_movimiento_inventarioDataTable = CType(MyBase.Clone,tbl_movimiento_inventarioDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_movimiento_inventarioDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id_mi = Me.Columns("fld_id_mi")
            Me.columnfld_date_mi = Me.Columns("fld_date_mi")
            Me.columnfld_description_mi = Me.Columns("fld_description_mi")
            Me.columnfld_entrada_mi = Me.Columns("fld_entrada_mi")
            Me.columnfld_salida_mi = Me.Columns("fld_salida_mi")
            Me.columnfld_bce_mi = Me.Columns("fld_bce_mi")
            Me.columnfld_pro_id_mi = Me.Columns("fld_pro_id_mi")
            Me.columnfld_tipo_doc_mi = Me.Columns("fld_tipo_doc_mi")
            Me.columnfld_tipo_doc_id_mi = Me.Columns("fld_tipo_doc_id_mi")
            Me.columnfld_usuario_mi = Me.Columns("fld_usuario_mi")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id_mi = New DataColumn("fld_id_mi", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_mi)
            Me.columnfld_date_mi = New DataColumn("fld_date_mi", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_date_mi)
            Me.columnfld_description_mi = New DataColumn("fld_description_mi", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_description_mi)
            Me.columnfld_entrada_mi = New DataColumn("fld_entrada_mi", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_entrada_mi)
            Me.columnfld_salida_mi = New DataColumn("fld_salida_mi", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_salida_mi)
            Me.columnfld_bce_mi = New DataColumn("fld_bce_mi", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce_mi)
            Me.columnfld_pro_id_mi = New DataColumn("fld_pro_id_mi", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_pro_id_mi)
            Me.columnfld_tipo_doc_mi = New DataColumn("fld_tipo_doc_mi", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_tipo_doc_mi)
            Me.columnfld_tipo_doc_id_mi = New DataColumn("fld_tipo_doc_id_mi", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_tipo_doc_id_mi)
            Me.columnfld_usuario_mi = New DataColumn("fld_usuario_mi", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_usuario_mi)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey7", New DataColumn() {Me.columnfld_id_mi}, true))
            Me.columnfld_id_mi.AutoIncrement = true
            Me.columnfld_id_mi.AllowDBNull = false
            Me.columnfld_id_mi.Unique = true
        End Sub
        
        Public Function Newtbl_movimiento_inventarioRow() As tbl_movimiento_inventarioRow
            Return CType(Me.NewRow,tbl_movimiento_inventarioRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_movimiento_inventarioRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_movimiento_inventarioRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_movimiento_inventarioRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_movimiento_inventarioRowChanged(Me, New tbl_movimiento_inventarioRowChangeEvent(CType(e.Row,tbl_movimiento_inventarioRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_movimiento_inventarioRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_movimiento_inventarioRowChanging(Me, New tbl_movimiento_inventarioRowChangeEvent(CType(e.Row,tbl_movimiento_inventarioRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_movimiento_inventarioRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_movimiento_inventarioRowDeleted(Me, New tbl_movimiento_inventarioRowChangeEvent(CType(e.Row,tbl_movimiento_inventarioRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_movimiento_inventarioRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_movimiento_inventarioRowDeleting(Me, New tbl_movimiento_inventarioRowChangeEvent(CType(e.Row,tbl_movimiento_inventarioRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_movimiento_inventarioRow(ByVal row As tbl_movimiento_inventarioRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_movimiento_inventarioRow
        Inherits DataRow
        
        Private tabletbl_movimiento_inventario As tbl_movimiento_inventarioDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_movimiento_inventario = CType(Me.Table,tbl_movimiento_inventarioDataTable)
        End Sub
        
        Public Property fld_id_mi As Integer
            Get
                Return CType(Me(Me.tabletbl_movimiento_inventario.fld_id_miColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_movimiento_inventario.fld_id_miColumn) = value
            End Set
        End Property
        
        Public Property fld_date_mi As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_movimiento_inventario.fld_date_miColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_movimiento_inventario.fld_date_miColumn) = value
            End Set
        End Property
        
        Public Property fld_description_mi As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_movimiento_inventario.fld_description_miColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_movimiento_inventario.fld_description_miColumn) = value
            End Set
        End Property
        
        Public Property fld_entrada_mi As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_movimiento_inventario.fld_entrada_miColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_movimiento_inventario.fld_entrada_miColumn) = value
            End Set
        End Property
        
        Public Property fld_salida_mi As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_movimiento_inventario.fld_salida_miColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_movimiento_inventario.fld_salida_miColumn) = value
            End Set
        End Property
        
        Public Property fld_bce_mi As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_movimiento_inventario.fld_bce_miColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_movimiento_inventario.fld_bce_miColumn) = value
            End Set
        End Property
        
        Public Property fld_pro_id_mi As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_movimiento_inventario.fld_pro_id_miColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_movimiento_inventario.fld_pro_id_miColumn) = value
            End Set
        End Property
        
        Public Property fld_tipo_doc_mi As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_movimiento_inventario.fld_tipo_doc_miColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_movimiento_inventario.fld_tipo_doc_miColumn) = value
            End Set
        End Property
        
        Public Property fld_tipo_doc_id_mi As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_movimiento_inventario.fld_tipo_doc_id_miColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_movimiento_inventario.fld_tipo_doc_id_miColumn) = value
            End Set
        End Property
        
        Public Property fld_usuario_mi As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_movimiento_inventario.fld_usuario_miColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_movimiento_inventario.fld_usuario_miColumn) = value
            End Set
        End Property
        
        Public Function Isfld_date_miNull() As Boolean
            Return Me.IsNull(Me.tabletbl_movimiento_inventario.fld_date_miColumn)
        End Function
        
        Public Sub Setfld_date_miNull()
            Me(Me.tabletbl_movimiento_inventario.fld_date_miColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_description_miNull() As Boolean
            Return Me.IsNull(Me.tabletbl_movimiento_inventario.fld_description_miColumn)
        End Function
        
        Public Sub Setfld_description_miNull()
            Me(Me.tabletbl_movimiento_inventario.fld_description_miColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_entrada_miNull() As Boolean
            Return Me.IsNull(Me.tabletbl_movimiento_inventario.fld_entrada_miColumn)
        End Function
        
        Public Sub Setfld_entrada_miNull()
            Me(Me.tabletbl_movimiento_inventario.fld_entrada_miColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_salida_miNull() As Boolean
            Return Me.IsNull(Me.tabletbl_movimiento_inventario.fld_salida_miColumn)
        End Function
        
        Public Sub Setfld_salida_miNull()
            Me(Me.tabletbl_movimiento_inventario.fld_salida_miColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bce_miNull() As Boolean
            Return Me.IsNull(Me.tabletbl_movimiento_inventario.fld_bce_miColumn)
        End Function
        
        Public Sub Setfld_bce_miNull()
            Me(Me.tabletbl_movimiento_inventario.fld_bce_miColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_pro_id_miNull() As Boolean
            Return Me.IsNull(Me.tabletbl_movimiento_inventario.fld_pro_id_miColumn)
        End Function
        
        Public Sub Setfld_pro_id_miNull()
            Me(Me.tabletbl_movimiento_inventario.fld_pro_id_miColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_tipo_doc_miNull() As Boolean
            Return Me.IsNull(Me.tabletbl_movimiento_inventario.fld_tipo_doc_miColumn)
        End Function
        
        Public Sub Setfld_tipo_doc_miNull()
            Me(Me.tabletbl_movimiento_inventario.fld_tipo_doc_miColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_tipo_doc_id_miNull() As Boolean
            Return Me.IsNull(Me.tabletbl_movimiento_inventario.fld_tipo_doc_id_miColumn)
        End Function
        
        Public Sub Setfld_tipo_doc_id_miNull()
            Me(Me.tabletbl_movimiento_inventario.fld_tipo_doc_id_miColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_usuario_miNull() As Boolean
            Return Me.IsNull(Me.tabletbl_movimiento_inventario.fld_usuario_miColumn)
        End Function
        
        Public Sub Setfld_usuario_miNull()
            Me(Me.tabletbl_movimiento_inventario.fld_usuario_miColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_movimiento_inventarioRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_movimiento_inventarioRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_movimiento_inventarioRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_movimiento_inventarioRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_inventarioDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfldCodigo As DataColumn
        
        Private columnfldCreado As DataColumn
        
        Private columnfldDescripcion As DataColumn
        
        Private columnfldDireccion As DataColumn
        
        Private columnfldColindantes As DataColumn
        
        Private columnfldUrbanizacion As DataColumn
        
        Private columnfldCiudad As DataColumn
        
        Private columnfldProvincia As DataColumn
        
        Private columnfldMetros As DataColumn
        
        Private columnfldPrecioMetro As DataColumn
        
        Private columnfldCosto As DataColumn
        
        Private columnfldVendido As DataColumn
        
        Private columnfldUsuarioCreo As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_inventario")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fldCodigoColumn As DataColumn
            Get
                Return Me.columnfldCodigo
            End Get
        End Property
        
        Friend ReadOnly Property fldCreadoColumn As DataColumn
            Get
                Return Me.columnfldCreado
            End Get
        End Property
        
        Friend ReadOnly Property fldDescripcionColumn As DataColumn
            Get
                Return Me.columnfldDescripcion
            End Get
        End Property
        
        Friend ReadOnly Property fldDireccionColumn As DataColumn
            Get
                Return Me.columnfldDireccion
            End Get
        End Property
        
        Friend ReadOnly Property fldColindantesColumn As DataColumn
            Get
                Return Me.columnfldColindantes
            End Get
        End Property
        
        Friend ReadOnly Property fldUrbanizacionColumn As DataColumn
            Get
                Return Me.columnfldUrbanizacion
            End Get
        End Property
        
        Friend ReadOnly Property fldCiudadColumn As DataColumn
            Get
                Return Me.columnfldCiudad
            End Get
        End Property
        
        Friend ReadOnly Property fldProvinciaColumn As DataColumn
            Get
                Return Me.columnfldProvincia
            End Get
        End Property
        
        Friend ReadOnly Property fldMetrosColumn As DataColumn
            Get
                Return Me.columnfldMetros
            End Get
        End Property
        
        Friend ReadOnly Property fldPrecioMetroColumn As DataColumn
            Get
                Return Me.columnfldPrecioMetro
            End Get
        End Property
        
        Friend ReadOnly Property fldCostoColumn As DataColumn
            Get
                Return Me.columnfldCosto
            End Get
        End Property
        
        Friend ReadOnly Property fldVendidoColumn As DataColumn
            Get
                Return Me.columnfldVendido
            End Get
        End Property
        
        Friend ReadOnly Property fldUsuarioCreoColumn As DataColumn
            Get
                Return Me.columnfldUsuarioCreo
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_inventarioRow
            Get
                Return CType(Me.Rows(index),tbl_inventarioRow)
            End Get
        End Property
        
        Public Event tbl_inventarioRowChanged As tbl_inventarioRowChangeEventHandler
        
        Public Event tbl_inventarioRowChanging As tbl_inventarioRowChangeEventHandler
        
        Public Event tbl_inventarioRowDeleted As tbl_inventarioRowChangeEventHandler
        
        Public Event tbl_inventarioRowDeleting As tbl_inventarioRowChangeEventHandler
        
        Public Overloads Sub Addtbl_inventarioRow(ByVal row As tbl_inventarioRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_inventarioRow(ByVal fldCreado As Date, ByVal fldDescripcion As String, ByVal fldDireccion As String, ByVal fldColindantes As String, ByVal fldUrbanizacion As String, ByVal fldCiudad As String, ByVal fldProvincia As String, ByVal fldMetros As Double, ByVal fldPrecioMetro As Double, ByVal fldCosto As Double, ByVal fldVendido As String, ByVal fldUsuarioCreo As String) As tbl_inventarioRow
            Dim rowtbl_inventarioRow As tbl_inventarioRow = CType(Me.NewRow,tbl_inventarioRow)
            rowtbl_inventarioRow.ItemArray = New Object() {Nothing, fldCreado, fldDescripcion, fldDireccion, fldColindantes, fldUrbanizacion, fldCiudad, fldProvincia, fldMetros, fldPrecioMetro, fldCosto, fldVendido, fldUsuarioCreo}
            Me.Rows.Add(rowtbl_inventarioRow)
            Return rowtbl_inventarioRow
        End Function
        
        Public Function FindByfldCodigo(ByVal fldCodigo As Integer) As tbl_inventarioRow
            Return CType(Me.Rows.Find(New Object() {fldCodigo}),tbl_inventarioRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_inventarioDataTable = CType(MyBase.Clone,tbl_inventarioDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_inventarioDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfldCodigo = Me.Columns("fldCodigo")
            Me.columnfldCreado = Me.Columns("fldCreado")
            Me.columnfldDescripcion = Me.Columns("fldDescripcion")
            Me.columnfldDireccion = Me.Columns("fldDireccion")
            Me.columnfldColindantes = Me.Columns("fldColindantes")
            Me.columnfldUrbanizacion = Me.Columns("fldUrbanizacion")
            Me.columnfldCiudad = Me.Columns("fldCiudad")
            Me.columnfldProvincia = Me.Columns("fldProvincia")
            Me.columnfldMetros = Me.Columns("fldMetros")
            Me.columnfldPrecioMetro = Me.Columns("fldPrecioMetro")
            Me.columnfldCosto = Me.Columns("fldCosto")
            Me.columnfldVendido = Me.Columns("fldVendido")
            Me.columnfldUsuarioCreo = Me.Columns("fldUsuarioCreo")
        End Sub
        
        Private Sub InitClass()
            Me.columnfldCodigo = New DataColumn("fldCodigo", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldCodigo)
            Me.columnfldCreado = New DataColumn("fldCreado", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldCreado)
            Me.columnfldDescripcion = New DataColumn("fldDescripcion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldDescripcion)
            Me.columnfldDireccion = New DataColumn("fldDireccion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldDireccion)
            Me.columnfldColindantes = New DataColumn("fldColindantes", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldColindantes)
            Me.columnfldUrbanizacion = New DataColumn("fldUrbanizacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldUrbanizacion)
            Me.columnfldCiudad = New DataColumn("fldCiudad", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldCiudad)
            Me.columnfldProvincia = New DataColumn("fldProvincia", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldProvincia)
            Me.columnfldMetros = New DataColumn("fldMetros", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldMetros)
            Me.columnfldPrecioMetro = New DataColumn("fldPrecioMetro", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldPrecioMetro)
            Me.columnfldCosto = New DataColumn("fldCosto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldCosto)
            Me.columnfldVendido = New DataColumn("fldVendido", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldVendido)
            Me.columnfldUsuarioCreo = New DataColumn("fldUsuarioCreo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldUsuarioCreo)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey8", New DataColumn() {Me.columnfldCodigo}, true))
            Me.columnfldCodigo.AutoIncrement = true
            Me.columnfldCodigo.AllowDBNull = false
            Me.columnfldCodigo.Unique = true
        End Sub
        
        Public Function Newtbl_inventarioRow() As tbl_inventarioRow
            Return CType(Me.NewRow,tbl_inventarioRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_inventarioRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_inventarioRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_inventarioRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_inventarioRowChanged(Me, New tbl_inventarioRowChangeEvent(CType(e.Row,tbl_inventarioRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_inventarioRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_inventarioRowChanging(Me, New tbl_inventarioRowChangeEvent(CType(e.Row,tbl_inventarioRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_inventarioRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_inventarioRowDeleted(Me, New tbl_inventarioRowChangeEvent(CType(e.Row,tbl_inventarioRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_inventarioRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_inventarioRowDeleting(Me, New tbl_inventarioRowChangeEvent(CType(e.Row,tbl_inventarioRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_inventarioRow(ByVal row As tbl_inventarioRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_inventarioRow
        Inherits DataRow
        
        Private tabletbl_inventario As tbl_inventarioDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_inventario = CType(Me.Table,tbl_inventarioDataTable)
        End Sub
        
        Public Property fldCodigo As Integer
            Get
                Return CType(Me(Me.tabletbl_inventario.fldCodigoColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_inventario.fldCodigoColumn) = value
            End Set
        End Property
        
        Public Property fldCreado As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_inventario.fldCreadoColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_inventario.fldCreadoColumn) = value
            End Set
        End Property
        
        Public Property fldDescripcion As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_inventario.fldDescripcionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_inventario.fldDescripcionColumn) = value
            End Set
        End Property
        
        Public Property fldDireccion As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_inventario.fldDireccionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_inventario.fldDireccionColumn) = value
            End Set
        End Property
        
        Public Property fldColindantes As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_inventario.fldColindantesColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_inventario.fldColindantesColumn) = value
            End Set
        End Property
        
        Public Property fldUrbanizacion As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_inventario.fldUrbanizacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_inventario.fldUrbanizacionColumn) = value
            End Set
        End Property
        
        Public Property fldCiudad As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_inventario.fldCiudadColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_inventario.fldCiudadColumn) = value
            End Set
        End Property
        
        Public Property fldProvincia As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_inventario.fldProvinciaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_inventario.fldProvinciaColumn) = value
            End Set
        End Property
        
        Public Property fldMetros As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_inventario.fldMetrosColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_inventario.fldMetrosColumn) = value
            End Set
        End Property
        
        Public Property fldPrecioMetro As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_inventario.fldPrecioMetroColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_inventario.fldPrecioMetroColumn) = value
            End Set
        End Property
        
        Public Property fldCosto As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_inventario.fldCostoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_inventario.fldCostoColumn) = value
            End Set
        End Property
        
        Public Property fldVendido As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_inventario.fldVendidoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_inventario.fldVendidoColumn) = value
            End Set
        End Property
        
        Public Property fldUsuarioCreo As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_inventario.fldUsuarioCreoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_inventario.fldUsuarioCreoColumn) = value
            End Set
        End Property
        
        Public Function IsfldCreadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_inventario.fldCreadoColumn)
        End Function
        
        Public Sub SetfldCreadoNull()
            Me(Me.tabletbl_inventario.fldCreadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldDescripcionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_inventario.fldDescripcionColumn)
        End Function
        
        Public Sub SetfldDescripcionNull()
            Me(Me.tabletbl_inventario.fldDescripcionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldDireccionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_inventario.fldDireccionColumn)
        End Function
        
        Public Sub SetfldDireccionNull()
            Me(Me.tabletbl_inventario.fldDireccionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldColindantesNull() As Boolean
            Return Me.IsNull(Me.tabletbl_inventario.fldColindantesColumn)
        End Function
        
        Public Sub SetfldColindantesNull()
            Me(Me.tabletbl_inventario.fldColindantesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldUrbanizacionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_inventario.fldUrbanizacionColumn)
        End Function
        
        Public Sub SetfldUrbanizacionNull()
            Me(Me.tabletbl_inventario.fldUrbanizacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldCiudadNull() As Boolean
            Return Me.IsNull(Me.tabletbl_inventario.fldCiudadColumn)
        End Function
        
        Public Sub SetfldCiudadNull()
            Me(Me.tabletbl_inventario.fldCiudadColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldProvinciaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_inventario.fldProvinciaColumn)
        End Function
        
        Public Sub SetfldProvinciaNull()
            Me(Me.tabletbl_inventario.fldProvinciaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldMetrosNull() As Boolean
            Return Me.IsNull(Me.tabletbl_inventario.fldMetrosColumn)
        End Function
        
        Public Sub SetfldMetrosNull()
            Me(Me.tabletbl_inventario.fldMetrosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldPrecioMetroNull() As Boolean
            Return Me.IsNull(Me.tabletbl_inventario.fldPrecioMetroColumn)
        End Function
        
        Public Sub SetfldPrecioMetroNull()
            Me(Me.tabletbl_inventario.fldPrecioMetroColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldCostoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_inventario.fldCostoColumn)
        End Function
        
        Public Sub SetfldCostoNull()
            Me(Me.tabletbl_inventario.fldCostoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldVendidoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_inventario.fldVendidoColumn)
        End Function
        
        Public Sub SetfldVendidoNull()
            Me(Me.tabletbl_inventario.fldVendidoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldUsuarioCreoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_inventario.fldUsuarioCreoColumn)
        End Function
        
        Public Sub SetfldUsuarioCreoNull()
            Me(Me.tabletbl_inventario.fldUsuarioCreoColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_inventarioRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_inventarioRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_inventarioRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_inventarioRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_recibo_egresosDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfldIdDoc As DataColumn
        
        Private columnfldFecha As DataColumn
        
        Private columnfldEntregado As DataColumn
        
        Private columnfldConcepto As DataColumn
        
        Private columnfldMonto As DataColumn
        
        Private columnfldMontoLetra As DataColumn
        
        Private columnfldUsuario As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_recibo_egresos")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fldIdDocColumn As DataColumn
            Get
                Return Me.columnfldIdDoc
            End Get
        End Property
        
        Friend ReadOnly Property fldFechaColumn As DataColumn
            Get
                Return Me.columnfldFecha
            End Get
        End Property
        
        Friend ReadOnly Property fldEntregadoColumn As DataColumn
            Get
                Return Me.columnfldEntregado
            End Get
        End Property
        
        Friend ReadOnly Property fldConceptoColumn As DataColumn
            Get
                Return Me.columnfldConcepto
            End Get
        End Property
        
        Friend ReadOnly Property fldMontoColumn As DataColumn
            Get
                Return Me.columnfldMonto
            End Get
        End Property
        
        Friend ReadOnly Property fldMontoLetraColumn As DataColumn
            Get
                Return Me.columnfldMontoLetra
            End Get
        End Property
        
        Friend ReadOnly Property fldUsuarioColumn As DataColumn
            Get
                Return Me.columnfldUsuario
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_recibo_egresosRow
            Get
                Return CType(Me.Rows(index),tbl_recibo_egresosRow)
            End Get
        End Property
        
        Public Event tbl_recibo_egresosRowChanged As tbl_recibo_egresosRowChangeEventHandler
        
        Public Event tbl_recibo_egresosRowChanging As tbl_recibo_egresosRowChangeEventHandler
        
        Public Event tbl_recibo_egresosRowDeleted As tbl_recibo_egresosRowChangeEventHandler
        
        Public Event tbl_recibo_egresosRowDeleting As tbl_recibo_egresosRowChangeEventHandler
        
        Public Overloads Sub Addtbl_recibo_egresosRow(ByVal row As tbl_recibo_egresosRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_recibo_egresosRow(ByVal fldFecha As Date, ByVal fldEntregado As String, ByVal fldConcepto As String, ByVal fldMonto As Double, ByVal fldMontoLetra As String, ByVal fldUsuario As String) As tbl_recibo_egresosRow
            Dim rowtbl_recibo_egresosRow As tbl_recibo_egresosRow = CType(Me.NewRow,tbl_recibo_egresosRow)
            rowtbl_recibo_egresosRow.ItemArray = New Object() {Nothing, fldFecha, fldEntregado, fldConcepto, fldMonto, fldMontoLetra, fldUsuario}
            Me.Rows.Add(rowtbl_recibo_egresosRow)
            Return rowtbl_recibo_egresosRow
        End Function
        
        Public Function FindByfldIdDoc(ByVal fldIdDoc As Integer) As tbl_recibo_egresosRow
            Return CType(Me.Rows.Find(New Object() {fldIdDoc}),tbl_recibo_egresosRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_recibo_egresosDataTable = CType(MyBase.Clone,tbl_recibo_egresosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_recibo_egresosDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfldIdDoc = Me.Columns("fldIdDoc")
            Me.columnfldFecha = Me.Columns("fldFecha")
            Me.columnfldEntregado = Me.Columns("fldEntregado")
            Me.columnfldConcepto = Me.Columns("fldConcepto")
            Me.columnfldMonto = Me.Columns("fldMonto")
            Me.columnfldMontoLetra = Me.Columns("fldMontoLetra")
            Me.columnfldUsuario = Me.Columns("fldUsuario")
        End Sub
        
        Private Sub InitClass()
            Me.columnfldIdDoc = New DataColumn("fldIdDoc", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldIdDoc)
            Me.columnfldFecha = New DataColumn("fldFecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldFecha)
            Me.columnfldEntregado = New DataColumn("fldEntregado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldEntregado)
            Me.columnfldConcepto = New DataColumn("fldConcepto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldConcepto)
            Me.columnfldMonto = New DataColumn("fldMonto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldMonto)
            Me.columnfldMontoLetra = New DataColumn("fldMontoLetra", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldMontoLetra)
            Me.columnfldUsuario = New DataColumn("fldUsuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldUsuario)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey11", New DataColumn() {Me.columnfldIdDoc}, true))
            Me.columnfldIdDoc.AutoIncrement = true
            Me.columnfldIdDoc.AllowDBNull = false
            Me.columnfldIdDoc.Unique = true
        End Sub
        
        Public Function Newtbl_recibo_egresosRow() As tbl_recibo_egresosRow
            Return CType(Me.NewRow,tbl_recibo_egresosRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_recibo_egresosRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_recibo_egresosRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_recibo_egresosRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_recibo_egresosRowChanged(Me, New tbl_recibo_egresosRowChangeEvent(CType(e.Row,tbl_recibo_egresosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_recibo_egresosRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_recibo_egresosRowChanging(Me, New tbl_recibo_egresosRowChangeEvent(CType(e.Row,tbl_recibo_egresosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_recibo_egresosRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_recibo_egresosRowDeleted(Me, New tbl_recibo_egresosRowChangeEvent(CType(e.Row,tbl_recibo_egresosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_recibo_egresosRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_recibo_egresosRowDeleting(Me, New tbl_recibo_egresosRowChangeEvent(CType(e.Row,tbl_recibo_egresosRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_recibo_egresosRow(ByVal row As tbl_recibo_egresosRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_recibo_egresosRow
        Inherits DataRow
        
        Private tabletbl_recibo_egresos As tbl_recibo_egresosDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_recibo_egresos = CType(Me.Table,tbl_recibo_egresosDataTable)
        End Sub
        
        Public Property fldIdDoc As Integer
            Get
                Return CType(Me(Me.tabletbl_recibo_egresos.fldIdDocColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_recibo_egresos.fldIdDocColumn) = value
            End Set
        End Property
        
        Public Property fldFecha As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_egresos.fldFechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_egresos.fldFechaColumn) = value
            End Set
        End Property
        
        Public Property fldEntregado As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_egresos.fldEntregadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_egresos.fldEntregadoColumn) = value
            End Set
        End Property
        
        Public Property fldConcepto As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_egresos.fldConceptoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_egresos.fldConceptoColumn) = value
            End Set
        End Property
        
        Public Property fldMonto As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_egresos.fldMontoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_egresos.fldMontoColumn) = value
            End Set
        End Property
        
        Public Property fldMontoLetra As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_egresos.fldMontoLetraColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_egresos.fldMontoLetraColumn) = value
            End Set
        End Property
        
        Public Property fldUsuario As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_egresos.fldUsuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_egresos.fldUsuarioColumn) = value
            End Set
        End Property
        
        Public Function IsfldFechaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_egresos.fldFechaColumn)
        End Function
        
        Public Sub SetfldFechaNull()
            Me(Me.tabletbl_recibo_egresos.fldFechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldEntregadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_egresos.fldEntregadoColumn)
        End Function
        
        Public Sub SetfldEntregadoNull()
            Me(Me.tabletbl_recibo_egresos.fldEntregadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldConceptoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_egresos.fldConceptoColumn)
        End Function
        
        Public Sub SetfldConceptoNull()
            Me(Me.tabletbl_recibo_egresos.fldConceptoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldMontoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_egresos.fldMontoColumn)
        End Function
        
        Public Sub SetfldMontoNull()
            Me(Me.tabletbl_recibo_egresos.fldMontoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldMontoLetraNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_egresos.fldMontoLetraColumn)
        End Function
        
        Public Sub SetfldMontoLetraNull()
            Me(Me.tabletbl_recibo_egresos.fldMontoLetraColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldUsuarioNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_egresos.fldUsuarioColumn)
        End Function
        
        Public Sub SetfldUsuarioNull()
            Me(Me.tabletbl_recibo_egresos.fldUsuarioColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_recibo_egresosRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_recibo_egresosRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_recibo_egresosRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_recibo_egresosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_recibo_ingresos_cxcDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_Id_RI As DataColumn
        
        Private columnfld_forma_pago As DataColumn
        
        Private columnfld_detalle_forma_pago As DataColumn
        
        Private columnfld_id_cliente_ri As DataColumn
        
        Private columnfld_date As DataColumn
        
        Private columnfld_Description As DataColumn
        
        Private columnfld_monto As DataColumn
        
        Private columnfld_fact_afectado As DataColumn
        
        Private columnfdl_nd_afectado As DataColumn
        
        Private columnfld_User As DataColumn
        
        Private columnfld_Estado As DataColumn
        
        Private columnfld_id_prestamo As DataColumn
        
        Private columnfld_interes_cobrado As DataColumn
        
        Private columnfld_capital_cobrado As DataColumn
        
        Private columnfld_mora_cobrada As DataColumn
        
        Private columnfld_concepto As DataColumn
        
        Private columnfld_socio As DataColumn
        
        Private columnfld_bce_actual As DataColumn
        
        Private columnfld_bce_anterior As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_recibo_ingresos_cxc")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_Id_RIColumn As DataColumn
            Get
                Return Me.columnfld_Id_RI
            End Get
        End Property
        
        Friend ReadOnly Property fld_forma_pagoColumn As DataColumn
            Get
                Return Me.columnfld_forma_pago
            End Get
        End Property
        
        Friend ReadOnly Property fld_detalle_forma_pagoColumn As DataColumn
            Get
                Return Me.columnfld_detalle_forma_pago
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_cliente_riColumn As DataColumn
            Get
                Return Me.columnfld_id_cliente_ri
            End Get
        End Property
        
        Friend ReadOnly Property fld_dateColumn As DataColumn
            Get
                Return Me.columnfld_date
            End Get
        End Property
        
        Friend ReadOnly Property fld_DescriptionColumn As DataColumn
            Get
                Return Me.columnfld_Description
            End Get
        End Property
        
        Friend ReadOnly Property fld_montoColumn As DataColumn
            Get
                Return Me.columnfld_monto
            End Get
        End Property
        
        Friend ReadOnly Property fld_fact_afectadoColumn As DataColumn
            Get
                Return Me.columnfld_fact_afectado
            End Get
        End Property
        
        Friend ReadOnly Property fdl_nd_afectadoColumn As DataColumn
            Get
                Return Me.columnfdl_nd_afectado
            End Get
        End Property
        
        Friend ReadOnly Property fld_UserColumn As DataColumn
            Get
                Return Me.columnfld_User
            End Get
        End Property
        
        Friend ReadOnly Property fld_EstadoColumn As DataColumn
            Get
                Return Me.columnfld_Estado
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_prestamoColumn As DataColumn
            Get
                Return Me.columnfld_id_prestamo
            End Get
        End Property
        
        Friend ReadOnly Property fld_interes_cobradoColumn As DataColumn
            Get
                Return Me.columnfld_interes_cobrado
            End Get
        End Property
        
        Friend ReadOnly Property fld_capital_cobradoColumn As DataColumn
            Get
                Return Me.columnfld_capital_cobrado
            End Get
        End Property
        
        Friend ReadOnly Property fld_mora_cobradaColumn As DataColumn
            Get
                Return Me.columnfld_mora_cobrada
            End Get
        End Property
        
        Friend ReadOnly Property fld_conceptoColumn As DataColumn
            Get
                Return Me.columnfld_concepto
            End Get
        End Property
        
        Friend ReadOnly Property fld_socioColumn As DataColumn
            Get
                Return Me.columnfld_socio
            End Get
        End Property
        
        Friend ReadOnly Property fld_bce_actualColumn As DataColumn
            Get
                Return Me.columnfld_bce_actual
            End Get
        End Property
        
        Friend ReadOnly Property fld_bce_anteriorColumn As DataColumn
            Get
                Return Me.columnfld_bce_anterior
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_recibo_ingresos_cxcRow
            Get
                Return CType(Me.Rows(index),tbl_recibo_ingresos_cxcRow)
            End Get
        End Property
        
        Public Event tbl_recibo_ingresos_cxcRowChanged As tbl_recibo_ingresos_cxcRowChangeEventHandler
        
        Public Event tbl_recibo_ingresos_cxcRowChanging As tbl_recibo_ingresos_cxcRowChangeEventHandler
        
        Public Event tbl_recibo_ingresos_cxcRowDeleted As tbl_recibo_ingresos_cxcRowChangeEventHandler
        
        Public Event tbl_recibo_ingresos_cxcRowDeleting As tbl_recibo_ingresos_cxcRowChangeEventHandler
        
        Public Overloads Sub Addtbl_recibo_ingresos_cxcRow(ByVal row As tbl_recibo_ingresos_cxcRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_recibo_ingresos_cxcRow( _
                    ByVal fld_forma_pago As String,  _
                    ByVal fld_detalle_forma_pago As String,  _
                    ByVal fld_id_cliente_ri As Integer,  _
                    ByVal fld_date As Date,  _
                    ByVal fld_Description As String,  _
                    ByVal fld_monto As Double,  _
                    ByVal fld_fact_afectado As String,  _
                    ByVal fdl_nd_afectado As String,  _
                    ByVal fld_User As String,  _
                    ByVal fld_Estado As String,  _
                    ByVal fld_id_prestamo As Integer,  _
                    ByVal fld_interes_cobrado As Double,  _
                    ByVal fld_capital_cobrado As Double,  _
                    ByVal fld_mora_cobrada As Double,  _
                    ByVal fld_concepto As String,  _
                    ByVal fld_socio As String,  _
                    ByVal fld_bce_actual As Double,  _
                    ByVal fld_bce_anterior As Double) As tbl_recibo_ingresos_cxcRow
            Dim rowtbl_recibo_ingresos_cxcRow As tbl_recibo_ingresos_cxcRow = CType(Me.NewRow,tbl_recibo_ingresos_cxcRow)
            rowtbl_recibo_ingresos_cxcRow.ItemArray = New Object() {Nothing, fld_forma_pago, fld_detalle_forma_pago, fld_id_cliente_ri, fld_date, fld_Description, fld_monto, fld_fact_afectado, fdl_nd_afectado, fld_User, fld_Estado, fld_id_prestamo, fld_interes_cobrado, fld_capital_cobrado, fld_mora_cobrada, fld_concepto, fld_socio, fld_bce_actual, fld_bce_anterior}
            Me.Rows.Add(rowtbl_recibo_ingresos_cxcRow)
            Return rowtbl_recibo_ingresos_cxcRow
        End Function
        
        Public Function FindByfld_Id_RI(ByVal fld_Id_RI As Integer) As tbl_recibo_ingresos_cxcRow
            Return CType(Me.Rows.Find(New Object() {fld_Id_RI}),tbl_recibo_ingresos_cxcRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_recibo_ingresos_cxcDataTable = CType(MyBase.Clone,tbl_recibo_ingresos_cxcDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_recibo_ingresos_cxcDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_Id_RI = Me.Columns("fld_Id_RI")
            Me.columnfld_forma_pago = Me.Columns("fld_forma_pago")
            Me.columnfld_detalle_forma_pago = Me.Columns("fld_detalle_forma_pago")
            Me.columnfld_id_cliente_ri = Me.Columns("fld_id_cliente_ri")
            Me.columnfld_date = Me.Columns("fld_date")
            Me.columnfld_Description = Me.Columns("fld_Description")
            Me.columnfld_monto = Me.Columns("fld_monto")
            Me.columnfld_fact_afectado = Me.Columns("fld_fact_afectado")
            Me.columnfdl_nd_afectado = Me.Columns("fdl_nd_afectado")
            Me.columnfld_User = Me.Columns("fld_User")
            Me.columnfld_Estado = Me.Columns("fld_Estado")
            Me.columnfld_id_prestamo = Me.Columns("fld_id_prestamo")
            Me.columnfld_interes_cobrado = Me.Columns("fld_interes_cobrado")
            Me.columnfld_capital_cobrado = Me.Columns("fld_capital_cobrado")
            Me.columnfld_mora_cobrada = Me.Columns("fld_mora_cobrada")
            Me.columnfld_concepto = Me.Columns("fld_concepto")
            Me.columnfld_socio = Me.Columns("fld_socio")
            Me.columnfld_bce_actual = Me.Columns("fld_bce_actual")
            Me.columnfld_bce_anterior = Me.Columns("fld_bce_anterior")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_Id_RI = New DataColumn("fld_Id_RI", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Id_RI)
            Me.columnfld_forma_pago = New DataColumn("fld_forma_pago", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_forma_pago)
            Me.columnfld_detalle_forma_pago = New DataColumn("fld_detalle_forma_pago", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_detalle_forma_pago)
            Me.columnfld_id_cliente_ri = New DataColumn("fld_id_cliente_ri", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_cliente_ri)
            Me.columnfld_date = New DataColumn("fld_date", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_date)
            Me.columnfld_Description = New DataColumn("fld_Description", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Description)
            Me.columnfld_monto = New DataColumn("fld_monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto)
            Me.columnfld_fact_afectado = New DataColumn("fld_fact_afectado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fact_afectado)
            Me.columnfdl_nd_afectado = New DataColumn("fdl_nd_afectado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfdl_nd_afectado)
            Me.columnfld_User = New DataColumn("fld_User", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_User)
            Me.columnfld_Estado = New DataColumn("fld_Estado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Estado)
            Me.columnfld_id_prestamo = New DataColumn("fld_id_prestamo", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_prestamo)
            Me.columnfld_interes_cobrado = New DataColumn("fld_interes_cobrado", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_interes_cobrado)
            Me.columnfld_capital_cobrado = New DataColumn("fld_capital_cobrado", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_capital_cobrado)
            Me.columnfld_mora_cobrada = New DataColumn("fld_mora_cobrada", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_mora_cobrada)
            Me.columnfld_concepto = New DataColumn("fld_concepto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_concepto)
            Me.columnfld_socio = New DataColumn("fld_socio", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_socio)
            Me.columnfld_bce_actual = New DataColumn("fld_bce_actual", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce_actual)
            Me.columnfld_bce_anterior = New DataColumn("fld_bce_anterior", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce_anterior)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey15", New DataColumn() {Me.columnfld_Id_RI}, true))
            Me.columnfld_Id_RI.AutoIncrement = true
            Me.columnfld_Id_RI.AllowDBNull = false
            Me.columnfld_Id_RI.Unique = true
        End Sub
        
        Public Function Newtbl_recibo_ingresos_cxcRow() As tbl_recibo_ingresos_cxcRow
            Return CType(Me.NewRow,tbl_recibo_ingresos_cxcRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_recibo_ingresos_cxcRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_recibo_ingresos_cxcRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_recibo_ingresos_cxcRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_recibo_ingresos_cxcRowChanged(Me, New tbl_recibo_ingresos_cxcRowChangeEvent(CType(e.Row,tbl_recibo_ingresos_cxcRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_recibo_ingresos_cxcRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_recibo_ingresos_cxcRowChanging(Me, New tbl_recibo_ingresos_cxcRowChangeEvent(CType(e.Row,tbl_recibo_ingresos_cxcRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_recibo_ingresos_cxcRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_recibo_ingresos_cxcRowDeleted(Me, New tbl_recibo_ingresos_cxcRowChangeEvent(CType(e.Row,tbl_recibo_ingresos_cxcRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_recibo_ingresos_cxcRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_recibo_ingresos_cxcRowDeleting(Me, New tbl_recibo_ingresos_cxcRowChangeEvent(CType(e.Row,tbl_recibo_ingresos_cxcRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_recibo_ingresos_cxcRow(ByVal row As tbl_recibo_ingresos_cxcRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_recibo_ingresos_cxcRow
        Inherits DataRow
        
        Private tabletbl_recibo_ingresos_cxc As tbl_recibo_ingresos_cxcDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_recibo_ingresos_cxc = CType(Me.Table,tbl_recibo_ingresos_cxcDataTable)
        End Sub
        
        Public Property fld_Id_RI As Integer
            Get
                Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_Id_RIColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_Id_RIColumn) = value
            End Set
        End Property
        
        Public Property fld_forma_pago As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_forma_pagoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_forma_pagoColumn) = value
            End Set
        End Property
        
        Public Property fld_detalle_forma_pago As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_detalle_forma_pagoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_detalle_forma_pagoColumn) = value
            End Set
        End Property
        
        Public Property fld_id_cliente_ri As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_id_cliente_riColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_id_cliente_riColumn) = value
            End Set
        End Property
        
        Public Property fld_date As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_dateColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_dateColumn) = value
            End Set
        End Property
        
        Public Property fld_Description As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_DescriptionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_DescriptionColumn) = value
            End Set
        End Property
        
        Public Property fld_monto As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_montoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_montoColumn) = value
            End Set
        End Property
        
        Public Property fld_fact_afectado As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_fact_afectadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_fact_afectadoColumn) = value
            End Set
        End Property
        
        Public Property fdl_nd_afectado As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fdl_nd_afectadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fdl_nd_afectadoColumn) = value
            End Set
        End Property
        
        Public Property fld_User As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_UserColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_UserColumn) = value
            End Set
        End Property
        
        Public Property fld_Estado As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_EstadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_EstadoColumn) = value
            End Set
        End Property
        
        Public Property fld_id_prestamo As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_id_prestamoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_id_prestamoColumn) = value
            End Set
        End Property
        
        Public Property fld_interes_cobrado As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_interes_cobradoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_interes_cobradoColumn) = value
            End Set
        End Property
        
        Public Property fld_capital_cobrado As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_capital_cobradoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_capital_cobradoColumn) = value
            End Set
        End Property
        
        Public Property fld_mora_cobrada As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_mora_cobradaColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_mora_cobradaColumn) = value
            End Set
        End Property
        
        Public Property fld_concepto As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_conceptoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_conceptoColumn) = value
            End Set
        End Property
        
        Public Property fld_socio As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_socioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_socioColumn) = value
            End Set
        End Property
        
        Public Property fld_bce_actual As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_bce_actualColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_bce_actualColumn) = value
            End Set
        End Property
        
        Public Property fld_bce_anterior As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_bce_anteriorColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_bce_anteriorColumn) = value
            End Set
        End Property
        
        Public Function Isfld_forma_pagoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_forma_pagoColumn)
        End Function
        
        Public Sub Setfld_forma_pagoNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_forma_pagoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_detalle_forma_pagoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_detalle_forma_pagoColumn)
        End Function
        
        Public Sub Setfld_detalle_forma_pagoNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_detalle_forma_pagoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_cliente_riNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_id_cliente_riColumn)
        End Function
        
        Public Sub Setfld_id_cliente_riNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_id_cliente_riColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_dateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_dateColumn)
        End Function
        
        Public Sub Setfld_dateNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_dateColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_DescriptionColumn)
        End Function
        
        Public Sub Setfld_DescriptionNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_DescriptionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_montoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_montoColumn)
        End Function
        
        Public Sub Setfld_montoNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_montoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fact_afectadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_fact_afectadoColumn)
        End Function
        
        Public Sub Setfld_fact_afectadoNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_fact_afectadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfdl_nd_afectadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fdl_nd_afectadoColumn)
        End Function
        
        Public Sub Setfdl_nd_afectadoNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fdl_nd_afectadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_UserNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_UserColumn)
        End Function
        
        Public Sub Setfld_UserNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_UserColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_EstadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_EstadoColumn)
        End Function
        
        Public Sub Setfld_EstadoNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_EstadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_prestamoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_id_prestamoColumn)
        End Function
        
        Public Sub Setfld_id_prestamoNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_id_prestamoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_interes_cobradoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_interes_cobradoColumn)
        End Function
        
        Public Sub Setfld_interes_cobradoNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_interes_cobradoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_capital_cobradoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_capital_cobradoColumn)
        End Function
        
        Public Sub Setfld_capital_cobradoNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_capital_cobradoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_mora_cobradaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_mora_cobradaColumn)
        End Function
        
        Public Sub Setfld_mora_cobradaNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_mora_cobradaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_conceptoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_conceptoColumn)
        End Function
        
        Public Sub Setfld_conceptoNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_conceptoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_socioNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_socioColumn)
        End Function
        
        Public Sub Setfld_socioNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_socioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bce_actualNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_bce_actualColumn)
        End Function
        
        Public Sub Setfld_bce_actualNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_bce_actualColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bce_anteriorNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_bce_anteriorColumn)
        End Function
        
        Public Sub Setfld_bce_anteriorNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_bce_anteriorColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_recibo_ingresos_cxcRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_recibo_ingresos_cxcRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_recibo_ingresos_cxcRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_recibo_ingresos_cxcRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_cuadreDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfldId As DataColumn
        
        Private columnfldFecha As DataColumn
        
        Private columnfldNota As DataColumn
        
        Private columnfldUsuario As DataColumn
        
        Private columnfldIngresos As DataColumn
        
        Private columnfldDepositos As DataColumn
        
        Private columnfldOtroIngresos As DataColumn
        
        Private columnfldCheques As DataColumn
        
        Private columnfldEgresos As DataColumn
        
        Private columnfldBceAnterior As DataColumn
        
        Private columnfldBceDisponible As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_cuadre")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fldIdColumn As DataColumn
            Get
                Return Me.columnfldId
            End Get
        End Property
        
        Friend ReadOnly Property fldFechaColumn As DataColumn
            Get
                Return Me.columnfldFecha
            End Get
        End Property
        
        Friend ReadOnly Property fldNotaColumn As DataColumn
            Get
                Return Me.columnfldNota
            End Get
        End Property
        
        Friend ReadOnly Property fldUsuarioColumn As DataColumn
            Get
                Return Me.columnfldUsuario
            End Get
        End Property
        
        Friend ReadOnly Property fldIngresosColumn As DataColumn
            Get
                Return Me.columnfldIngresos
            End Get
        End Property
        
        Friend ReadOnly Property fldDepositosColumn As DataColumn
            Get
                Return Me.columnfldDepositos
            End Get
        End Property
        
        Friend ReadOnly Property fldOtroIngresosColumn As DataColumn
            Get
                Return Me.columnfldOtroIngresos
            End Get
        End Property
        
        Friend ReadOnly Property fldChequesColumn As DataColumn
            Get
                Return Me.columnfldCheques
            End Get
        End Property
        
        Friend ReadOnly Property fldEgresosColumn As DataColumn
            Get
                Return Me.columnfldEgresos
            End Get
        End Property
        
        Friend ReadOnly Property fldBceAnteriorColumn As DataColumn
            Get
                Return Me.columnfldBceAnterior
            End Get
        End Property
        
        Friend ReadOnly Property fldBceDisponibleColumn As DataColumn
            Get
                Return Me.columnfldBceDisponible
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_cuadreRow
            Get
                Return CType(Me.Rows(index),tbl_cuadreRow)
            End Get
        End Property
        
        Public Event tbl_cuadreRowChanged As tbl_cuadreRowChangeEventHandler
        
        Public Event tbl_cuadreRowChanging As tbl_cuadreRowChangeEventHandler
        
        Public Event tbl_cuadreRowDeleted As tbl_cuadreRowChangeEventHandler
        
        Public Event tbl_cuadreRowDeleting As tbl_cuadreRowChangeEventHandler
        
        Public Overloads Sub Addtbl_cuadreRow(ByVal row As tbl_cuadreRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_cuadreRow(ByVal fldId As Double, ByVal fldFecha As Date, ByVal fldNota As String, ByVal fldUsuario As String, ByVal fldIngresos As Double, ByVal fldDepositos As Double, ByVal fldOtroIngresos As Double, ByVal fldCheques As Double, ByVal fldEgresos As Double, ByVal fldBceAnterior As Double, ByVal fldBceDisponible As Double) As tbl_cuadreRow
            Dim rowtbl_cuadreRow As tbl_cuadreRow = CType(Me.NewRow,tbl_cuadreRow)
            rowtbl_cuadreRow.ItemArray = New Object() {fldId, fldFecha, fldNota, fldUsuario, fldIngresos, fldDepositos, fldOtroIngresos, fldCheques, fldEgresos, fldBceAnterior, fldBceDisponible}
            Me.Rows.Add(rowtbl_cuadreRow)
            Return rowtbl_cuadreRow
        End Function
        
        Public Function FindByfldId(ByVal fldId As Double) As tbl_cuadreRow
            Return CType(Me.Rows.Find(New Object() {fldId}),tbl_cuadreRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_cuadreDataTable = CType(MyBase.Clone,tbl_cuadreDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_cuadreDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfldId = Me.Columns("fldId")
            Me.columnfldFecha = Me.Columns("fldFecha")
            Me.columnfldNota = Me.Columns("fldNota")
            Me.columnfldUsuario = Me.Columns("fldUsuario")
            Me.columnfldIngresos = Me.Columns("fldIngresos")
            Me.columnfldDepositos = Me.Columns("fldDepositos")
            Me.columnfldOtroIngresos = Me.Columns("fldOtroIngresos")
            Me.columnfldCheques = Me.Columns("fldCheques")
            Me.columnfldEgresos = Me.Columns("fldEgresos")
            Me.columnfldBceAnterior = Me.Columns("fldBceAnterior")
            Me.columnfldBceDisponible = Me.Columns("fldBceDisponible")
        End Sub
        
        Private Sub InitClass()
            Me.columnfldId = New DataColumn("fldId", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldId)
            Me.columnfldFecha = New DataColumn("fldFecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldFecha)
            Me.columnfldNota = New DataColumn("fldNota", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldNota)
            Me.columnfldUsuario = New DataColumn("fldUsuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldUsuario)
            Me.columnfldIngresos = New DataColumn("fldIngresos", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldIngresos)
            Me.columnfldDepositos = New DataColumn("fldDepositos", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldDepositos)
            Me.columnfldOtroIngresos = New DataColumn("fldOtroIngresos", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldOtroIngresos)
            Me.columnfldCheques = New DataColumn("fldCheques", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldCheques)
            Me.columnfldEgresos = New DataColumn("fldEgresos", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldEgresos)
            Me.columnfldBceAnterior = New DataColumn("fldBceAnterior", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldBceAnterior)
            Me.columnfldBceDisponible = New DataColumn("fldBceDisponible", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldBceDisponible)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey16", New DataColumn() {Me.columnfldId}, true))
            Me.columnfldId.AllowDBNull = false
            Me.columnfldId.Unique = true
        End Sub
        
        Public Function Newtbl_cuadreRow() As tbl_cuadreRow
            Return CType(Me.NewRow,tbl_cuadreRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_cuadreRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_cuadreRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_cuadreRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_cuadreRowChanged(Me, New tbl_cuadreRowChangeEvent(CType(e.Row,tbl_cuadreRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_cuadreRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_cuadreRowChanging(Me, New tbl_cuadreRowChangeEvent(CType(e.Row,tbl_cuadreRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_cuadreRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_cuadreRowDeleted(Me, New tbl_cuadreRowChangeEvent(CType(e.Row,tbl_cuadreRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_cuadreRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_cuadreRowDeleting(Me, New tbl_cuadreRowChangeEvent(CType(e.Row,tbl_cuadreRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_cuadreRow(ByVal row As tbl_cuadreRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_cuadreRow
        Inherits DataRow
        
        Private tabletbl_cuadre As tbl_cuadreDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_cuadre = CType(Me.Table,tbl_cuadreDataTable)
        End Sub
        
        Public Property fldId As Double
            Get
                Return CType(Me(Me.tabletbl_cuadre.fldIdColumn),Double)
            End Get
            Set
                Me(Me.tabletbl_cuadre.fldIdColumn) = value
            End Set
        End Property
        
        Public Property fldFecha As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre.fldFechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre.fldFechaColumn) = value
            End Set
        End Property
        
        Public Property fldNota As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre.fldNotaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre.fldNotaColumn) = value
            End Set
        End Property
        
        Public Property fldUsuario As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre.fldUsuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre.fldUsuarioColumn) = value
            End Set
        End Property
        
        Public Property fldIngresos As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre.fldIngresosColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre.fldIngresosColumn) = value
            End Set
        End Property
        
        Public Property fldDepositos As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre.fldDepositosColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre.fldDepositosColumn) = value
            End Set
        End Property
        
        Public Property fldOtroIngresos As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre.fldOtroIngresosColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre.fldOtroIngresosColumn) = value
            End Set
        End Property
        
        Public Property fldCheques As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre.fldChequesColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre.fldChequesColumn) = value
            End Set
        End Property
        
        Public Property fldEgresos As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre.fldEgresosColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre.fldEgresosColumn) = value
            End Set
        End Property
        
        Public Property fldBceAnterior As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre.fldBceAnteriorColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre.fldBceAnteriorColumn) = value
            End Set
        End Property
        
        Public Property fldBceDisponible As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre.fldBceDisponibleColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre.fldBceDisponibleColumn) = value
            End Set
        End Property
        
        Public Function IsfldFechaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre.fldFechaColumn)
        End Function
        
        Public Sub SetfldFechaNull()
            Me(Me.tabletbl_cuadre.fldFechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldNotaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre.fldNotaColumn)
        End Function
        
        Public Sub SetfldNotaNull()
            Me(Me.tabletbl_cuadre.fldNotaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldUsuarioNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre.fldUsuarioColumn)
        End Function
        
        Public Sub SetfldUsuarioNull()
            Me(Me.tabletbl_cuadre.fldUsuarioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldIngresosNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre.fldIngresosColumn)
        End Function
        
        Public Sub SetfldIngresosNull()
            Me(Me.tabletbl_cuadre.fldIngresosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldDepositosNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre.fldDepositosColumn)
        End Function
        
        Public Sub SetfldDepositosNull()
            Me(Me.tabletbl_cuadre.fldDepositosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldOtroIngresosNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre.fldOtroIngresosColumn)
        End Function
        
        Public Sub SetfldOtroIngresosNull()
            Me(Me.tabletbl_cuadre.fldOtroIngresosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldChequesNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre.fldChequesColumn)
        End Function
        
        Public Sub SetfldChequesNull()
            Me(Me.tabletbl_cuadre.fldChequesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldEgresosNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre.fldEgresosColumn)
        End Function
        
        Public Sub SetfldEgresosNull()
            Me(Me.tabletbl_cuadre.fldEgresosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldBceAnteriorNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre.fldBceAnteriorColumn)
        End Function
        
        Public Sub SetfldBceAnteriorNull()
            Me(Me.tabletbl_cuadre.fldBceAnteriorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldBceDisponibleNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre.fldBceDisponibleColumn)
        End Function
        
        Public Sub SetfldBceDisponibleNull()
            Me(Me.tabletbl_cuadre.fldBceDisponibleColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_cuadreRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_cuadreRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_cuadreRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_cuadreRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_cuadre_detalleDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfldId As DataColumn
        
        Private columnfldTipoDocumento As DataColumn
        
        Private columnfldIdDocumento As DataColumn
        
        Private columnfldDetalleDocumento As DataColumn
        
        Private columnfldFechaDocumento As DataColumn
        
        Private columnfldMontoDocumento As DataColumn
        
        Private columnfldCliente As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_cuadre_detalle")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fldIdColumn As DataColumn
            Get
                Return Me.columnfldId
            End Get
        End Property
        
        Friend ReadOnly Property fldTipoDocumentoColumn As DataColumn
            Get
                Return Me.columnfldTipoDocumento
            End Get
        End Property
        
        Friend ReadOnly Property fldIdDocumentoColumn As DataColumn
            Get
                Return Me.columnfldIdDocumento
            End Get
        End Property
        
        Friend ReadOnly Property fldDetalleDocumentoColumn As DataColumn
            Get
                Return Me.columnfldDetalleDocumento
            End Get
        End Property
        
        Friend ReadOnly Property fldFechaDocumentoColumn As DataColumn
            Get
                Return Me.columnfldFechaDocumento
            End Get
        End Property
        
        Friend ReadOnly Property fldMontoDocumentoColumn As DataColumn
            Get
                Return Me.columnfldMontoDocumento
            End Get
        End Property
        
        Friend ReadOnly Property fldClienteColumn As DataColumn
            Get
                Return Me.columnfldCliente
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_cuadre_detalleRow
            Get
                Return CType(Me.Rows(index),tbl_cuadre_detalleRow)
            End Get
        End Property
        
        Public Event tbl_cuadre_detalleRowChanged As tbl_cuadre_detalleRowChangeEventHandler
        
        Public Event tbl_cuadre_detalleRowChanging As tbl_cuadre_detalleRowChangeEventHandler
        
        Public Event tbl_cuadre_detalleRowDeleted As tbl_cuadre_detalleRowChangeEventHandler
        
        Public Event tbl_cuadre_detalleRowDeleting As tbl_cuadre_detalleRowChangeEventHandler
        
        Public Overloads Sub Addtbl_cuadre_detalleRow(ByVal row As tbl_cuadre_detalleRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_cuadre_detalleRow(ByVal fldId As Double, ByVal fldTipoDocumento As String, ByVal fldIdDocumento As String, ByVal fldDetalleDocumento As String, ByVal fldFechaDocumento As Date, ByVal fldMontoDocumento As Double, ByVal fldCliente As String) As tbl_cuadre_detalleRow
            Dim rowtbl_cuadre_detalleRow As tbl_cuadre_detalleRow = CType(Me.NewRow,tbl_cuadre_detalleRow)
            rowtbl_cuadre_detalleRow.ItemArray = New Object() {fldId, fldTipoDocumento, fldIdDocumento, fldDetalleDocumento, fldFechaDocumento, fldMontoDocumento, fldCliente}
            Me.Rows.Add(rowtbl_cuadre_detalleRow)
            Return rowtbl_cuadre_detalleRow
        End Function
        
        Public Function FindByfldId(ByVal fldId As Double) As tbl_cuadre_detalleRow
            Return CType(Me.Rows.Find(New Object() {fldId}),tbl_cuadre_detalleRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_cuadre_detalleDataTable = CType(MyBase.Clone,tbl_cuadre_detalleDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_cuadre_detalleDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfldId = Me.Columns("fldId")
            Me.columnfldTipoDocumento = Me.Columns("fldTipoDocumento")
            Me.columnfldIdDocumento = Me.Columns("fldIdDocumento")
            Me.columnfldDetalleDocumento = Me.Columns("fldDetalleDocumento")
            Me.columnfldFechaDocumento = Me.Columns("fldFechaDocumento")
            Me.columnfldMontoDocumento = Me.Columns("fldMontoDocumento")
            Me.columnfldCliente = Me.Columns("fldCliente")
        End Sub
        
        Private Sub InitClass()
            Me.columnfldId = New DataColumn("fldId", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldId)
            Me.columnfldTipoDocumento = New DataColumn("fldTipoDocumento", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldTipoDocumento)
            Me.columnfldIdDocumento = New DataColumn("fldIdDocumento", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldIdDocumento)
            Me.columnfldDetalleDocumento = New DataColumn("fldDetalleDocumento", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldDetalleDocumento)
            Me.columnfldFechaDocumento = New DataColumn("fldFechaDocumento", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldFechaDocumento)
            Me.columnfldMontoDocumento = New DataColumn("fldMontoDocumento", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldMontoDocumento)
            Me.columnfldCliente = New DataColumn("fldCliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldCliente)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey17", New DataColumn() {Me.columnfldId}, true))
            Me.columnfldId.AllowDBNull = false
            Me.columnfldId.Unique = true
        End Sub
        
        Public Function Newtbl_cuadre_detalleRow() As tbl_cuadre_detalleRow
            Return CType(Me.NewRow,tbl_cuadre_detalleRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_cuadre_detalleRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_cuadre_detalleRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_cuadre_detalleRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_cuadre_detalleRowChanged(Me, New tbl_cuadre_detalleRowChangeEvent(CType(e.Row,tbl_cuadre_detalleRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_cuadre_detalleRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_cuadre_detalleRowChanging(Me, New tbl_cuadre_detalleRowChangeEvent(CType(e.Row,tbl_cuadre_detalleRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_cuadre_detalleRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_cuadre_detalleRowDeleted(Me, New tbl_cuadre_detalleRowChangeEvent(CType(e.Row,tbl_cuadre_detalleRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_cuadre_detalleRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_cuadre_detalleRowDeleting(Me, New tbl_cuadre_detalleRowChangeEvent(CType(e.Row,tbl_cuadre_detalleRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_cuadre_detalleRow(ByVal row As tbl_cuadre_detalleRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_cuadre_detalleRow
        Inherits DataRow
        
        Private tabletbl_cuadre_detalle As tbl_cuadre_detalleDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_cuadre_detalle = CType(Me.Table,tbl_cuadre_detalleDataTable)
        End Sub
        
        Public Property fldId As Double
            Get
                Return CType(Me(Me.tabletbl_cuadre_detalle.fldIdColumn),Double)
            End Get
            Set
                Me(Me.tabletbl_cuadre_detalle.fldIdColumn) = value
            End Set
        End Property
        
        Public Property fldTipoDocumento As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_detalle.fldTipoDocumentoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_detalle.fldTipoDocumentoColumn) = value
            End Set
        End Property
        
        Public Property fldIdDocumento As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_detalle.fldIdDocumentoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_detalle.fldIdDocumentoColumn) = value
            End Set
        End Property
        
        Public Property fldDetalleDocumento As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_detalle.fldDetalleDocumentoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_detalle.fldDetalleDocumentoColumn) = value
            End Set
        End Property
        
        Public Property fldFechaDocumento As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_detalle.fldFechaDocumentoColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_detalle.fldFechaDocumentoColumn) = value
            End Set
        End Property
        
        Public Property fldMontoDocumento As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_detalle.fldMontoDocumentoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_detalle.fldMontoDocumentoColumn) = value
            End Set
        End Property
        
        Public Property fldCliente As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_cuadre_detalle.fldClienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_cuadre_detalle.fldClienteColumn) = value
            End Set
        End Property
        
        Public Function IsfldTipoDocumentoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_detalle.fldTipoDocumentoColumn)
        End Function
        
        Public Sub SetfldTipoDocumentoNull()
            Me(Me.tabletbl_cuadre_detalle.fldTipoDocumentoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldIdDocumentoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_detalle.fldIdDocumentoColumn)
        End Function
        
        Public Sub SetfldIdDocumentoNull()
            Me(Me.tabletbl_cuadre_detalle.fldIdDocumentoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldDetalleDocumentoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_detalle.fldDetalleDocumentoColumn)
        End Function
        
        Public Sub SetfldDetalleDocumentoNull()
            Me(Me.tabletbl_cuadre_detalle.fldDetalleDocumentoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldFechaDocumentoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_detalle.fldFechaDocumentoColumn)
        End Function
        
        Public Sub SetfldFechaDocumentoNull()
            Me(Me.tabletbl_cuadre_detalle.fldFechaDocumentoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldMontoDocumentoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_detalle.fldMontoDocumentoColumn)
        End Function
        
        Public Sub SetfldMontoDocumentoNull()
            Me(Me.tabletbl_cuadre_detalle.fldMontoDocumentoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldClienteNull() As Boolean
            Return Me.IsNull(Me.tabletbl_cuadre_detalle.fldClienteColumn)
        End Function
        
        Public Sub SetfldClienteNull()
            Me(Me.tabletbl_cuadre_detalle.fldClienteColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_cuadre_detalleRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_cuadre_detalleRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_cuadre_detalleRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_cuadre_detalleRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_clientes_con_prestamosDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id As DataColumn
        
        Private columnfld_FullName As DataColumn
        
        Private columnfld_apodo As DataColumn
        
        Private columnfld_Identity As DataColumn
        
        Private columnfld_Phone As DataColumn
        
        Private columnfld_Phone2 As DataColumn
        
        Private columnfld_Address As DataColumn
        
        Private columnfld_City As DataColumn
        
        Private columnfld_Status As DataColumn
        
        Private columnfld_bce As DataColumn
        
        Private columnfld_cod_zona As DataColumn
        
        Private columnfld_zona As DataColumn
        
        Private columnfld_nombre_con As DataColumn
        
        Private columnfld_apodo_con As DataColumn
        
        Private columnfld_cedula_con As DataColumn
        
        Private columnfld_telefono_con As DataColumn
        
        Private columnfld_celular_con As DataColumn
        
        Private columnfld_ref_personales_cliente As DataColumn
        
        Private columnfld_ref_comerciales_cliente As DataColumn
        
        Private columnfld_nombre_gar As DataColumn
        
        Private columnfld_apodo_gar As DataColumn
        
        Private columnfld_cedula_gar As DataColumn
        
        Private columnfld_telefono_gar As DataColumn
        
        Private columnfld_celular_gar As DataColumn
        
        Private columnfld_direccion_gar As DataColumn
        
        Private columnfld_ciudad_gar As DataColumn
        
        Private columnfld_ref_personales_gar As DataColumn
        
        Private columnfld_ref_comerciales_gar As DataColumn
        
        Private columnfld_ingresos_mesuales As DataColumn
        
        Private columnfld_nombre_banco1 As DataColumn
        
        Private columnfld_cuenta_banco1 As DataColumn
        
        Private columnfld_nombre_banco2 As DataColumn
        
        Private columnfld_cuenta_banco2 As DataColumn
        
        Private columnfld_otra_informacion As DataColumn
        
        Private columnfld_nombre_con_gar As DataColumn
        
        Private columnfld_apodo_con_gar As DataColumn
        
        Private columnfld_cedula_con_gar As DataColumn
        
        Private columnfld_telefono_con_gar As DataColumn
        
        Private columnfld_celular_con_gar As DataColumn
        
        Private columnfld_edad As DataColumn
        
        Private columnfld_estado_civil As DataColumn
        
        Private columnfld_edad_gar As DataColumn
        
        Private columnfld_estado_civil_gar As DataColumn
        
        Private columnfld_ocupacion_cliente As DataColumn
        
        Private columnfld_ocupacion_gar As DataColumn
        
        Private columnfld_sector As DataColumn
        
        Private columnfld_id_prestamos As DataColumn
        
        Private columnfld_id_del_cliente As DataColumn
        
        Private columnfld_clasificacion As DataColumn
        
        Private columnfld_fecha_entrega As DataColumn
        
        Private columnfld_fecha_termina As DataColumn
        
        Private columnfld_cantidad_cuotas As DataColumn
        
        Private columnfld_monto_cuotas_a As DataColumn
        
        Private columnfld_capital_prestamo As DataColumn
        
        Private columnfld_monto As DataColumn
        
        Private columnfld_abono As DataColumn
        
        Private columnfld_balance As DataColumn
        
        Private columnfld_usuario As DataColumn
        
        Private columnfld_fecha_ultimo_abono As DataColumn
        
        Private columnfld_status_prestamos As DataColumn
        
        Private columnfld_anos As DataColumn
        
        Private columnfld_interes_p As DataColumn
        
        Private columnfld_tipo_prestamo As DataColumn
        
        Private columnfld_ck_no As DataColumn
        
        Private columnfld_tipo_garantia As DataColumn
        
        Private columnfld_garantia As DataColumn
        
        Private columnfldFinanciamiento As DataColumn
        
        Private columnfldMontoFinan As DataColumn
        
        Private columnfldMontoInicial As DataColumn
        
        Private columnfldCodInm As DataColumn
        
        Private columnfldDescInm As DataColumn
        
        Private columnfldMetros As DataColumn
        
        Private columnfldPrecioMetro As DataColumn
        
        Private columnfldTazaMora As DataColumn
        
        Private columnfldNota As DataColumn
        
        Friend Sub New()
            MyBase.New("view_clientes_con_prestamos")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_FullNameColumn As DataColumn
            Get
                Return Me.columnfld_FullName
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodoColumn As DataColumn
            Get
                Return Me.columnfld_apodo
            End Get
        End Property
        
        Friend ReadOnly Property fld_IdentityColumn As DataColumn
            Get
                Return Me.columnfld_Identity
            End Get
        End Property
        
        Friend ReadOnly Property fld_PhoneColumn As DataColumn
            Get
                Return Me.columnfld_Phone
            End Get
        End Property
        
        Friend ReadOnly Property fld_Phone2Column As DataColumn
            Get
                Return Me.columnfld_Phone2
            End Get
        End Property
        
        Friend ReadOnly Property fld_AddressColumn As DataColumn
            Get
                Return Me.columnfld_Address
            End Get
        End Property
        
        Friend ReadOnly Property fld_CityColumn As DataColumn
            Get
                Return Me.columnfld_City
            End Get
        End Property
        
        Friend ReadOnly Property fld_StatusColumn As DataColumn
            Get
                Return Me.columnfld_Status
            End Get
        End Property
        
        Friend ReadOnly Property fld_bceColumn As DataColumn
            Get
                Return Me.columnfld_bce
            End Get
        End Property
        
        Friend ReadOnly Property fld_cod_zonaColumn As DataColumn
            Get
                Return Me.columnfld_cod_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_zonaColumn As DataColumn
            Get
                Return Me.columnfld_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_conColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_conColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_conColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_conColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_conColumn As DataColumn
            Get
                Return Me.columnfld_celular_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_direccion_garColumn As DataColumn
            Get
                Return Me.columnfld_direccion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ciudad_garColumn As DataColumn
            Get
                Return Me.columnfld_ciudad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ingresos_mesualesColumn As DataColumn
            Get
                Return Me.columnfld_ingresos_mesuales
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco1Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco1Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco2Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco2Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_otra_informacionColumn As DataColumn
            Get
                Return Me.columnfld_otra_informacion
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_con_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_con_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_con_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_con_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_con_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_edadColumn As DataColumn
            Get
                Return Me.columnfld_edad
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civilColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil
            End Get
        End Property
        
        Friend ReadOnly Property fld_edad_garColumn As DataColumn
            Get
                Return Me.columnfld_edad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civil_garColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ocupacion_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ocupacion_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ocupacion_garColumn As DataColumn
            Get
                Return Me.columnfld_ocupacion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_sectorColumn As DataColumn
            Get
                Return Me.columnfld_sector
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_prestamosColumn As DataColumn
            Get
                Return Me.columnfld_id_prestamos
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_del_clienteColumn As DataColumn
            Get
                Return Me.columnfld_id_del_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_clasificacionColumn As DataColumn
            Get
                Return Me.columnfld_clasificacion
            End Get
        End Property
        
        Friend ReadOnly Property fld_fecha_entregaColumn As DataColumn
            Get
                Return Me.columnfld_fecha_entrega
            End Get
        End Property
        
        Friend ReadOnly Property fld_fecha_terminaColumn As DataColumn
            Get
                Return Me.columnfld_fecha_termina
            End Get
        End Property
        
        Friend ReadOnly Property fld_cantidad_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_cantidad_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_monto_cuotas_aColumn As DataColumn
            Get
                Return Me.columnfld_monto_cuotas_a
            End Get
        End Property
        
        Friend ReadOnly Property fld_capital_prestamoColumn As DataColumn
            Get
                Return Me.columnfld_capital_prestamo
            End Get
        End Property
        
        Friend ReadOnly Property fld_montoColumn As DataColumn
            Get
                Return Me.columnfld_monto
            End Get
        End Property
        
        Friend ReadOnly Property fld_abonoColumn As DataColumn
            Get
                Return Me.columnfld_abono
            End Get
        End Property
        
        Friend ReadOnly Property fld_balanceColumn As DataColumn
            Get
                Return Me.columnfld_balance
            End Get
        End Property
        
        Friend ReadOnly Property fld_usuarioColumn As DataColumn
            Get
                Return Me.columnfld_usuario
            End Get
        End Property
        
        Friend ReadOnly Property fld_fecha_ultimo_abonoColumn As DataColumn
            Get
                Return Me.columnfld_fecha_ultimo_abono
            End Get
        End Property
        
        Friend ReadOnly Property fld_status_prestamosColumn As DataColumn
            Get
                Return Me.columnfld_status_prestamos
            End Get
        End Property
        
        Friend ReadOnly Property fld_anosColumn As DataColumn
            Get
                Return Me.columnfld_anos
            End Get
        End Property
        
        Friend ReadOnly Property fld_interes_pColumn As DataColumn
            Get
                Return Me.columnfld_interes_p
            End Get
        End Property
        
        Friend ReadOnly Property fld_tipo_prestamoColumn As DataColumn
            Get
                Return Me.columnfld_tipo_prestamo
            End Get
        End Property
        
        Friend ReadOnly Property fld_ck_noColumn As DataColumn
            Get
                Return Me.columnfld_ck_no
            End Get
        End Property
        
        Friend ReadOnly Property fld_tipo_garantiaColumn As DataColumn
            Get
                Return Me.columnfld_tipo_garantia
            End Get
        End Property
        
        Friend ReadOnly Property fld_garantiaColumn As DataColumn
            Get
                Return Me.columnfld_garantia
            End Get
        End Property
        
        Friend ReadOnly Property fldFinanciamientoColumn As DataColumn
            Get
                Return Me.columnfldFinanciamiento
            End Get
        End Property
        
        Friend ReadOnly Property fldMontoFinanColumn As DataColumn
            Get
                Return Me.columnfldMontoFinan
            End Get
        End Property
        
        Friend ReadOnly Property fldMontoInicialColumn As DataColumn
            Get
                Return Me.columnfldMontoInicial
            End Get
        End Property
        
        Friend ReadOnly Property fldCodInmColumn As DataColumn
            Get
                Return Me.columnfldCodInm
            End Get
        End Property
        
        Friend ReadOnly Property fldDescInmColumn As DataColumn
            Get
                Return Me.columnfldDescInm
            End Get
        End Property
        
        Friend ReadOnly Property fldMetrosColumn As DataColumn
            Get
                Return Me.columnfldMetros
            End Get
        End Property
        
        Friend ReadOnly Property fldPrecioMetroColumn As DataColumn
            Get
                Return Me.columnfldPrecioMetro
            End Get
        End Property
        
        Friend ReadOnly Property fldTazaMoraColumn As DataColumn
            Get
                Return Me.columnfldTazaMora
            End Get
        End Property
        
        Friend ReadOnly Property fldNotaColumn As DataColumn
            Get
                Return Me.columnfldNota
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_clientes_con_prestamosRow
            Get
                Return CType(Me.Rows(index),view_clientes_con_prestamosRow)
            End Get
        End Property
        
        Public Event view_clientes_con_prestamosRowChanged As view_clientes_con_prestamosRowChangeEventHandler
        
        Public Event view_clientes_con_prestamosRowChanging As view_clientes_con_prestamosRowChangeEventHandler
        
        Public Event view_clientes_con_prestamosRowDeleted As view_clientes_con_prestamosRowChangeEventHandler
        
        Public Event view_clientes_con_prestamosRowDeleting As view_clientes_con_prestamosRowChangeEventHandler
        
        Public Overloads Sub Addview_clientes_con_prestamosRow(ByVal row As view_clientes_con_prestamosRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addview_clientes_con_prestamosRow( _
                    ByVal fld_id As Double,  _
                    ByVal fld_FullName As String,  _
                    ByVal fld_apodo As String,  _
                    ByVal fld_Identity As String,  _
                    ByVal fld_Phone As String,  _
                    ByVal fld_Phone2 As String,  _
                    ByVal fld_Address As String,  _
                    ByVal fld_City As String,  _
                    ByVal fld_Status As String,  _
                    ByVal fld_bce As Double,  _
                    ByVal fld_cod_zona As Integer,  _
                    ByVal fld_zona As String,  _
                    ByVal fld_nombre_con As String,  _
                    ByVal fld_apodo_con As String,  _
                    ByVal fld_cedula_con As String,  _
                    ByVal fld_telefono_con As String,  _
                    ByVal fld_celular_con As String,  _
                    ByVal fld_ref_personales_cliente As String,  _
                    ByVal fld_ref_comerciales_cliente As String,  _
                    ByVal fld_nombre_gar As String,  _
                    ByVal fld_apodo_gar As String,  _
                    ByVal fld_cedula_gar As String,  _
                    ByVal fld_telefono_gar As String,  _
                    ByVal fld_celular_gar As String,  _
                    ByVal fld_direccion_gar As String,  _
                    ByVal fld_ciudad_gar As String,  _
                    ByVal fld_ref_personales_gar As String,  _
                    ByVal fld_ref_comerciales_gar As String,  _
                    ByVal fld_ingresos_mesuales As Double,  _
                    ByVal fld_nombre_banco1 As String,  _
                    ByVal fld_cuenta_banco1 As String,  _
                    ByVal fld_nombre_banco2 As String,  _
                    ByVal fld_cuenta_banco2 As String,  _
                    ByVal fld_otra_informacion As String,  _
                    ByVal fld_nombre_con_gar As String,  _
                    ByVal fld_apodo_con_gar As String,  _
                    ByVal fld_cedula_con_gar As String,  _
                    ByVal fld_telefono_con_gar As String,  _
                    ByVal fld_celular_con_gar As String,  _
                    ByVal fld_edad As Integer,  _
                    ByVal fld_estado_civil As String,  _
                    ByVal fld_edad_gar As Integer,  _
                    ByVal fld_estado_civil_gar As String,  _
                    ByVal fld_ocupacion_cliente As String,  _
                    ByVal fld_ocupacion_gar As String,  _
                    ByVal fld_sector As String,  _
                    ByVal fld_id_prestamos As Double,  _
                    ByVal fld_id_del_cliente As Integer,  _
                    ByVal fld_clasificacion As String,  _
                    ByVal fld_fecha_entrega As Date,  _
                    ByVal fld_fecha_termina As Date,  _
                    ByVal fld_cantidad_cuotas As Integer,  _
                    ByVal fld_monto_cuotas_a As Double,  _
                    ByVal fld_capital_prestamo As Double,  _
                    ByVal fld_monto As Double,  _
                    ByVal fld_abono As Double,  _
                    ByVal fld_balance As Double,  _
                    ByVal fld_usuario As String,  _
                    ByVal fld_fecha_ultimo_abono As Date,  _
                    ByVal fld_status_prestamos As String,  _
                    ByVal fld_anos As Double,  _
                    ByVal fld_interes_p As Double,  _
                    ByVal fld_tipo_prestamo As String,  _
                    ByVal fld_ck_no As String,  _
                    ByVal fld_tipo_garantia As String,  _
                    ByVal fld_garantia As String,  _
                    ByVal fldFinanciamiento As String,  _
                    ByVal fldMontoFinan As Double,  _
                    ByVal fldMontoInicial As Double,  _
                    ByVal fldCodInm As Integer,  _
                    ByVal fldDescInm As String,  _
                    ByVal fldMetros As Double,  _
                    ByVal fldPrecioMetro As Double,  _
                    ByVal fldTazaMora As Double,  _
                    ByVal fldNota As String) As view_clientes_con_prestamosRow
            Dim rowview_clientes_con_prestamosRow As view_clientes_con_prestamosRow = CType(Me.NewRow,view_clientes_con_prestamosRow)
            rowview_clientes_con_prestamosRow.ItemArray = New Object() {fld_id, fld_FullName, fld_apodo, fld_Identity, fld_Phone, fld_Phone2, fld_Address, fld_City, fld_Status, fld_bce, fld_cod_zona, fld_zona, fld_nombre_con, fld_apodo_con, fld_cedula_con, fld_telefono_con, fld_celular_con, fld_ref_personales_cliente, fld_ref_comerciales_cliente, fld_nombre_gar, fld_apodo_gar, fld_cedula_gar, fld_telefono_gar, fld_celular_gar, fld_direccion_gar, fld_ciudad_gar, fld_ref_personales_gar, fld_ref_comerciales_gar, fld_ingresos_mesuales, fld_nombre_banco1, fld_cuenta_banco1, fld_nombre_banco2, fld_cuenta_banco2, fld_otra_informacion, fld_nombre_con_gar, fld_apodo_con_gar, fld_cedula_con_gar, fld_telefono_con_gar, fld_celular_con_gar, fld_edad, fld_estado_civil, fld_edad_gar, fld_estado_civil_gar, fld_ocupacion_cliente, fld_ocupacion_gar, fld_sector, fld_id_prestamos, fld_id_del_cliente, fld_clasificacion, fld_fecha_entrega, fld_fecha_termina, fld_cantidad_cuotas, fld_monto_cuotas_a, fld_capital_prestamo, fld_monto, fld_abono, fld_balance, fld_usuario, fld_fecha_ultimo_abono, fld_status_prestamos, fld_anos, fld_interes_p, fld_tipo_prestamo, fld_ck_no, fld_tipo_garantia, fld_garantia, fldFinanciamiento, fldMontoFinan, fldMontoInicial, fldCodInm, fldDescInm, fldMetros, fldPrecioMetro, fldTazaMora, fldNota}
            Me.Rows.Add(rowview_clientes_con_prestamosRow)
            Return rowview_clientes_con_prestamosRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As view_clientes_con_prestamosDataTable = CType(MyBase.Clone,view_clientes_con_prestamosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New view_clientes_con_prestamosDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnfld_FullName = Me.Columns("fld_FullName")
            Me.columnfld_apodo = Me.Columns("fld_apodo")
            Me.columnfld_Identity = Me.Columns("fld_Identity")
            Me.columnfld_Phone = Me.Columns("fld_Phone")
            Me.columnfld_Phone2 = Me.Columns("fld_Phone2")
            Me.columnfld_Address = Me.Columns("fld_Address")
            Me.columnfld_City = Me.Columns("fld_City")
            Me.columnfld_Status = Me.Columns("fld_Status")
            Me.columnfld_bce = Me.Columns("fld_bce")
            Me.columnfld_cod_zona = Me.Columns("fld_cod_zona")
            Me.columnfld_zona = Me.Columns("fld_zona")
            Me.columnfld_nombre_con = Me.Columns("fld_nombre_con")
            Me.columnfld_apodo_con = Me.Columns("fld_apodo_con")
            Me.columnfld_cedula_con = Me.Columns("fld_cedula_con")
            Me.columnfld_telefono_con = Me.Columns("fld_telefono_con")
            Me.columnfld_celular_con = Me.Columns("fld_celular_con")
            Me.columnfld_ref_personales_cliente = Me.Columns("fld_ref_personales_cliente")
            Me.columnfld_ref_comerciales_cliente = Me.Columns("fld_ref_comerciales_cliente")
            Me.columnfld_nombre_gar = Me.Columns("fld_nombre_gar")
            Me.columnfld_apodo_gar = Me.Columns("fld_apodo_gar")
            Me.columnfld_cedula_gar = Me.Columns("fld_cedula_gar")
            Me.columnfld_telefono_gar = Me.Columns("fld_telefono_gar")
            Me.columnfld_celular_gar = Me.Columns("fld_celular_gar")
            Me.columnfld_direccion_gar = Me.Columns("fld_direccion_gar")
            Me.columnfld_ciudad_gar = Me.Columns("fld_ciudad_gar")
            Me.columnfld_ref_personales_gar = Me.Columns("fld_ref_personales_gar")
            Me.columnfld_ref_comerciales_gar = Me.Columns("fld_ref_comerciales_gar")
            Me.columnfld_ingresos_mesuales = Me.Columns("fld_ingresos_mesuales")
            Me.columnfld_nombre_banco1 = Me.Columns("fld_nombre_banco1")
            Me.columnfld_cuenta_banco1 = Me.Columns("fld_cuenta_banco1")
            Me.columnfld_nombre_banco2 = Me.Columns("fld_nombre_banco2")
            Me.columnfld_cuenta_banco2 = Me.Columns("fld_cuenta_banco2")
            Me.columnfld_otra_informacion = Me.Columns("fld_otra_informacion")
            Me.columnfld_nombre_con_gar = Me.Columns("fld_nombre_con_gar")
            Me.columnfld_apodo_con_gar = Me.Columns("fld_apodo_con_gar")
            Me.columnfld_cedula_con_gar = Me.Columns("fld_cedula_con_gar")
            Me.columnfld_telefono_con_gar = Me.Columns("fld_telefono_con_gar")
            Me.columnfld_celular_con_gar = Me.Columns("fld_celular_con_gar")
            Me.columnfld_edad = Me.Columns("fld_edad")
            Me.columnfld_estado_civil = Me.Columns("fld_estado_civil")
            Me.columnfld_edad_gar = Me.Columns("fld_edad_gar")
            Me.columnfld_estado_civil_gar = Me.Columns("fld_estado_civil_gar")
            Me.columnfld_ocupacion_cliente = Me.Columns("fld_ocupacion_cliente")
            Me.columnfld_ocupacion_gar = Me.Columns("fld_ocupacion_gar")
            Me.columnfld_sector = Me.Columns("fld_sector")
            Me.columnfld_id_prestamos = Me.Columns("fld_id_prestamos")
            Me.columnfld_id_del_cliente = Me.Columns("fld_id_del_cliente")
            Me.columnfld_clasificacion = Me.Columns("fld_clasificacion")
            Me.columnfld_fecha_entrega = Me.Columns("fld_fecha_entrega")
            Me.columnfld_fecha_termina = Me.Columns("fld_fecha_termina")
            Me.columnfld_cantidad_cuotas = Me.Columns("fld_cantidad_cuotas")
            Me.columnfld_monto_cuotas_a = Me.Columns("fld_monto_cuotas_a")
            Me.columnfld_capital_prestamo = Me.Columns("fld_capital_prestamo")
            Me.columnfld_monto = Me.Columns("fld_monto")
            Me.columnfld_abono = Me.Columns("fld_abono")
            Me.columnfld_balance = Me.Columns("fld_balance")
            Me.columnfld_usuario = Me.Columns("fld_usuario")
            Me.columnfld_fecha_ultimo_abono = Me.Columns("fld_fecha_ultimo_abono")
            Me.columnfld_status_prestamos = Me.Columns("fld_status_prestamos")
            Me.columnfld_anos = Me.Columns("fld_anos")
            Me.columnfld_interes_p = Me.Columns("fld_interes_p")
            Me.columnfld_tipo_prestamo = Me.Columns("fld_tipo_prestamo")
            Me.columnfld_ck_no = Me.Columns("fld_ck_no")
            Me.columnfld_tipo_garantia = Me.Columns("fld_tipo_garantia")
            Me.columnfld_garantia = Me.Columns("fld_garantia")
            Me.columnfldFinanciamiento = Me.Columns("fldFinanciamiento")
            Me.columnfldMontoFinan = Me.Columns("fldMontoFinan")
            Me.columnfldMontoInicial = Me.Columns("fldMontoInicial")
            Me.columnfldCodInm = Me.Columns("fldCodInm")
            Me.columnfldDescInm = Me.Columns("fldDescInm")
            Me.columnfldMetros = Me.Columns("fldMetros")
            Me.columnfldPrecioMetro = Me.Columns("fldPrecioMetro")
            Me.columnfldTazaMora = Me.Columns("fldTazaMora")
            Me.columnfldNota = Me.Columns("fldNota")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnfld_FullName = New DataColumn("fld_FullName", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_FullName)
            Me.columnfld_apodo = New DataColumn("fld_apodo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo)
            Me.columnfld_Identity = New DataColumn("fld_Identity", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Identity)
            Me.columnfld_Phone = New DataColumn("fld_Phone", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone)
            Me.columnfld_Phone2 = New DataColumn("fld_Phone2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone2)
            Me.columnfld_Address = New DataColumn("fld_Address", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Address)
            Me.columnfld_City = New DataColumn("fld_City", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_City)
            Me.columnfld_Status = New DataColumn("fld_Status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Status)
            Me.columnfld_bce = New DataColumn("fld_bce", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce)
            Me.columnfld_cod_zona = New DataColumn("fld_cod_zona", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cod_zona)
            Me.columnfld_zona = New DataColumn("fld_zona", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_zona)
            Me.columnfld_nombre_con = New DataColumn("fld_nombre_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con)
            Me.columnfld_apodo_con = New DataColumn("fld_apodo_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con)
            Me.columnfld_cedula_con = New DataColumn("fld_cedula_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con)
            Me.columnfld_telefono_con = New DataColumn("fld_telefono_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con)
            Me.columnfld_celular_con = New DataColumn("fld_celular_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con)
            Me.columnfld_ref_personales_cliente = New DataColumn("fld_ref_personales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_cliente)
            Me.columnfld_ref_comerciales_cliente = New DataColumn("fld_ref_comerciales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_cliente)
            Me.columnfld_nombre_gar = New DataColumn("fld_nombre_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_gar)
            Me.columnfld_apodo_gar = New DataColumn("fld_apodo_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_gar)
            Me.columnfld_cedula_gar = New DataColumn("fld_cedula_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_gar)
            Me.columnfld_telefono_gar = New DataColumn("fld_telefono_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_gar)
            Me.columnfld_celular_gar = New DataColumn("fld_celular_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_gar)
            Me.columnfld_direccion_gar = New DataColumn("fld_direccion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_direccion_gar)
            Me.columnfld_ciudad_gar = New DataColumn("fld_ciudad_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ciudad_gar)
            Me.columnfld_ref_personales_gar = New DataColumn("fld_ref_personales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_gar)
            Me.columnfld_ref_comerciales_gar = New DataColumn("fld_ref_comerciales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_gar)
            Me.columnfld_ingresos_mesuales = New DataColumn("fld_ingresos_mesuales", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ingresos_mesuales)
            Me.columnfld_nombre_banco1 = New DataColumn("fld_nombre_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco1)
            Me.columnfld_cuenta_banco1 = New DataColumn("fld_cuenta_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco1)
            Me.columnfld_nombre_banco2 = New DataColumn("fld_nombre_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco2)
            Me.columnfld_cuenta_banco2 = New DataColumn("fld_cuenta_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco2)
            Me.columnfld_otra_informacion = New DataColumn("fld_otra_informacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_otra_informacion)
            Me.columnfld_nombre_con_gar = New DataColumn("fld_nombre_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con_gar)
            Me.columnfld_apodo_con_gar = New DataColumn("fld_apodo_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con_gar)
            Me.columnfld_cedula_con_gar = New DataColumn("fld_cedula_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con_gar)
            Me.columnfld_telefono_con_gar = New DataColumn("fld_telefono_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con_gar)
            Me.columnfld_celular_con_gar = New DataColumn("fld_celular_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con_gar)
            Me.columnfld_edad = New DataColumn("fld_edad", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad)
            Me.columnfld_estado_civil = New DataColumn("fld_estado_civil", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil)
            Me.columnfld_edad_gar = New DataColumn("fld_edad_gar", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad_gar)
            Me.columnfld_estado_civil_gar = New DataColumn("fld_estado_civil_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil_gar)
            Me.columnfld_ocupacion_cliente = New DataColumn("fld_ocupacion_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ocupacion_cliente)
            Me.columnfld_ocupacion_gar = New DataColumn("fld_ocupacion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ocupacion_gar)
            Me.columnfld_sector = New DataColumn("fld_sector", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_sector)
            Me.columnfld_id_prestamos = New DataColumn("fld_id_prestamos", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_prestamos)
            Me.columnfld_id_del_cliente = New DataColumn("fld_id_del_cliente", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_del_cliente)
            Me.columnfld_clasificacion = New DataColumn("fld_clasificacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_clasificacion)
            Me.columnfld_fecha_entrega = New DataColumn("fld_fecha_entrega", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha_entrega)
            Me.columnfld_fecha_termina = New DataColumn("fld_fecha_termina", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha_termina)
            Me.columnfld_cantidad_cuotas = New DataColumn("fld_cantidad_cuotas", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cantidad_cuotas)
            Me.columnfld_monto_cuotas_a = New DataColumn("fld_monto_cuotas_a", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto_cuotas_a)
            Me.columnfld_capital_prestamo = New DataColumn("fld_capital_prestamo", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_capital_prestamo)
            Me.columnfld_monto = New DataColumn("fld_monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto)
            Me.columnfld_abono = New DataColumn("fld_abono", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_abono)
            Me.columnfld_balance = New DataColumn("fld_balance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_balance)
            Me.columnfld_usuario = New DataColumn("fld_usuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_usuario)
            Me.columnfld_fecha_ultimo_abono = New DataColumn("fld_fecha_ultimo_abono", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha_ultimo_abono)
            Me.columnfld_status_prestamos = New DataColumn("fld_status_prestamos", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_status_prestamos)
            Me.columnfld_anos = New DataColumn("fld_anos", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_anos)
            Me.columnfld_interes_p = New DataColumn("fld_interes_p", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_interes_p)
            Me.columnfld_tipo_prestamo = New DataColumn("fld_tipo_prestamo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_tipo_prestamo)
            Me.columnfld_ck_no = New DataColumn("fld_ck_no", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ck_no)
            Me.columnfld_tipo_garantia = New DataColumn("fld_tipo_garantia", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_tipo_garantia)
            Me.columnfld_garantia = New DataColumn("fld_garantia", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_garantia)
            Me.columnfldFinanciamiento = New DataColumn("fldFinanciamiento", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldFinanciamiento)
            Me.columnfldMontoFinan = New DataColumn("fldMontoFinan", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldMontoFinan)
            Me.columnfldMontoInicial = New DataColumn("fldMontoInicial", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldMontoInicial)
            Me.columnfldCodInm = New DataColumn("fldCodInm", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldCodInm)
            Me.columnfldDescInm = New DataColumn("fldDescInm", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldDescInm)
            Me.columnfldMetros = New DataColumn("fldMetros", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldMetros)
            Me.columnfldPrecioMetro = New DataColumn("fldPrecioMetro", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldPrecioMetro)
            Me.columnfldTazaMora = New DataColumn("fldTazaMora", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldTazaMora)
            Me.columnfldNota = New DataColumn("fldNota", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldNota)
        End Sub
        
        Public Function Newview_clientes_con_prestamosRow() As view_clientes_con_prestamosRow
            Return CType(Me.NewRow,view_clientes_con_prestamosRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New view_clientes_con_prestamosRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(view_clientes_con_prestamosRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_clientes_con_prestamosRowChangedEvent) Is Nothing) Then
                RaiseEvent view_clientes_con_prestamosRowChanged(Me, New view_clientes_con_prestamosRowChangeEvent(CType(e.Row,view_clientes_con_prestamosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_clientes_con_prestamosRowChangingEvent) Is Nothing) Then
                RaiseEvent view_clientes_con_prestamosRowChanging(Me, New view_clientes_con_prestamosRowChangeEvent(CType(e.Row,view_clientes_con_prestamosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_clientes_con_prestamosRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_clientes_con_prestamosRowDeleted(Me, New view_clientes_con_prestamosRowChangeEvent(CType(e.Row,view_clientes_con_prestamosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_clientes_con_prestamosRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_clientes_con_prestamosRowDeleting(Me, New view_clientes_con_prestamosRowChangeEvent(CType(e.Row,view_clientes_con_prestamosRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeview_clientes_con_prestamosRow(ByVal row As view_clientes_con_prestamosRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_clientes_con_prestamosRow
        Inherits DataRow
        
        Private tableview_clientes_con_prestamos As view_clientes_con_prestamosDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_clientes_con_prestamos = CType(Me.Table,view_clientes_con_prestamosDataTable)
        End Sub
        
        Public Property fld_id As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_idColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_idColumn) = value
            End Set
        End Property
        
        Public Property fld_FullName As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_FullNameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_FullNameColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_apodoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_apodoColumn) = value
            End Set
        End Property
        
        Public Property fld_Identity As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_IdentityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_IdentityColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_PhoneColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_PhoneColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_Phone2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_Phone2Column) = value
            End Set
        End Property
        
        Public Property fld_Address As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_AddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_AddressColumn) = value
            End Set
        End Property
        
        Public Property fld_City As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_CityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_CityColumn) = value
            End Set
        End Property
        
        Public Property fld_Status As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_StatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_StatusColumn) = value
            End Set
        End Property
        
        Public Property fld_bce As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_bceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_bceColumn) = value
            End Set
        End Property
        
        Public Property fld_cod_zona As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_cod_zonaColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_cod_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_zona As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_zonaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_nombre_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_nombre_conColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_apodo_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_apodo_conColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_cedula_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_cedula_conColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_telefono_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_telefono_conColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_celular_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_celular_conColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_ref_personales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_ref_personales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_ref_comerciales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_ref_comerciales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_nombre_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_nombre_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_apodo_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_apodo_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_cedula_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_cedula_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_telefono_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_telefono_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_celular_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_celular_garColumn) = value
            End Set
        End Property
        
        Public Property fld_direccion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_direccion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_direccion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ciudad_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_ciudad_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_ciudad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_ref_personales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_ref_personales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_ref_comerciales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_ref_comerciales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ingresos_mesuales As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_ingresos_mesualesColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_ingresos_mesualesColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_nombre_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_nombre_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_cuenta_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_cuenta_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_nombre_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_nombre_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_cuenta_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_cuenta_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_otra_informacion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_otra_informacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_otra_informacionColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_nombre_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_nombre_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_apodo_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_apodo_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_cedula_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_cedula_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_telefono_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_telefono_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_celular_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_celular_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_edad As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_edadColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_edadColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_estado_civilColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_estado_civilColumn) = value
            End Set
        End Property
        
        Public Property fld_edad_gar As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_edad_garColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_edad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_estado_civil_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_estado_civil_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ocupacion_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_ocupacion_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_ocupacion_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ocupacion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_ocupacion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_ocupacion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_sector As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_sectorColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_sectorColumn) = value
            End Set
        End Property
        
        Public Property fld_id_prestamos As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_id_prestamosColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_id_prestamosColumn) = value
            End Set
        End Property
        
        Public Property fld_id_del_cliente As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_id_del_clienteColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_id_del_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_clasificacion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_clasificacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_clasificacionColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha_entrega As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_fecha_entregaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_fecha_entregaColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha_termina As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_fecha_terminaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_fecha_terminaColumn) = value
            End Set
        End Property
        
        Public Property fld_cantidad_cuotas As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_cantidad_cuotasColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_cantidad_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_monto_cuotas_a As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_monto_cuotas_aColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_monto_cuotas_aColumn) = value
            End Set
        End Property
        
        Public Property fld_capital_prestamo As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_capital_prestamoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_capital_prestamoColumn) = value
            End Set
        End Property
        
        Public Property fld_monto As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_montoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_montoColumn) = value
            End Set
        End Property
        
        Public Property fld_abono As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_abonoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_abonoColumn) = value
            End Set
        End Property
        
        Public Property fld_balance As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_balanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_balanceColumn) = value
            End Set
        End Property
        
        Public Property fld_usuario As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_usuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_usuarioColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha_ultimo_abono As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_fecha_ultimo_abonoColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_fecha_ultimo_abonoColumn) = value
            End Set
        End Property
        
        Public Property fld_status_prestamos As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_status_prestamosColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_status_prestamosColumn) = value
            End Set
        End Property
        
        Public Property fld_anos As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_anosColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_anosColumn) = value
            End Set
        End Property
        
        Public Property fld_interes_p As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_interes_pColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_interes_pColumn) = value
            End Set
        End Property
        
        Public Property fld_tipo_prestamo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_tipo_prestamoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_tipo_prestamoColumn) = value
            End Set
        End Property
        
        Public Property fld_ck_no As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_ck_noColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_ck_noColumn) = value
            End Set
        End Property
        
        Public Property fld_tipo_garantia As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_tipo_garantiaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_tipo_garantiaColumn) = value
            End Set
        End Property
        
        Public Property fld_garantia As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fld_garantiaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fld_garantiaColumn) = value
            End Set
        End Property
        
        Public Property fldFinanciamiento As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fldFinanciamientoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fldFinanciamientoColumn) = value
            End Set
        End Property
        
        Public Property fldMontoFinan As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fldMontoFinanColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fldMontoFinanColumn) = value
            End Set
        End Property
        
        Public Property fldMontoInicial As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fldMontoInicialColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fldMontoInicialColumn) = value
            End Set
        End Property
        
        Public Property fldCodInm As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fldCodInmColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fldCodInmColumn) = value
            End Set
        End Property
        
        Public Property fldDescInm As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fldDescInmColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fldDescInmColumn) = value
            End Set
        End Property
        
        Public Property fldMetros As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fldMetrosColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fldMetrosColumn) = value
            End Set
        End Property
        
        Public Property fldPrecioMetro As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fldPrecioMetroColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fldPrecioMetroColumn) = value
            End Set
        End Property
        
        Public Property fldTazaMora As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fldTazaMoraColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fldTazaMoraColumn) = value
            End Set
        End Property
        
        Public Property fldNota As String
            Get
                Try 
                    Return CType(Me(Me.tableview_clientes_con_prestamos.fldNotaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_clientes_con_prestamos.fldNotaColumn) = value
            End Set
        End Property
        
        Public Function Isfld_idNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_idColumn)
        End Function
        
        Public Sub Setfld_idNull()
            Me(Me.tableview_clientes_con_prestamos.fld_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_FullNameNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_FullNameColumn)
        End Function
        
        Public Sub Setfld_FullNameNull()
            Me(Me.tableview_clientes_con_prestamos.fld_FullNameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodoNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_apodoColumn)
        End Function
        
        Public Sub Setfld_apodoNull()
            Me(Me.tableview_clientes_con_prestamos.fld_apodoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_IdentityNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_IdentityColumn)
        End Function
        
        Public Sub Setfld_IdentityNull()
            Me(Me.tableview_clientes_con_prestamos.fld_IdentityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_PhoneNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_PhoneColumn)
        End Function
        
        Public Sub Setfld_PhoneNull()
            Me(Me.tableview_clientes_con_prestamos.fld_PhoneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_Phone2Null() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_Phone2Column)
        End Function
        
        Public Sub Setfld_Phone2Null()
            Me(Me.tableview_clientes_con_prestamos.fld_Phone2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_AddressNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_AddressColumn)
        End Function
        
        Public Sub Setfld_AddressNull()
            Me(Me.tableview_clientes_con_prestamos.fld_AddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_CityNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_CityColumn)
        End Function
        
        Public Sub Setfld_CityNull()
            Me(Me.tableview_clientes_con_prestamos.fld_CityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_StatusNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_StatusColumn)
        End Function
        
        Public Sub Setfld_StatusNull()
            Me(Me.tableview_clientes_con_prestamos.fld_StatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bceNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_bceColumn)
        End Function
        
        Public Sub Setfld_bceNull()
            Me(Me.tableview_clientes_con_prestamos.fld_bceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cod_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_cod_zonaColumn)
        End Function
        
        Public Sub Setfld_cod_zonaNull()
            Me(Me.tableview_clientes_con_prestamos.fld_cod_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_zonaColumn)
        End Function
        
        Public Sub Setfld_zonaNull()
            Me(Me.tableview_clientes_con_prestamos.fld_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_conNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_nombre_conColumn)
        End Function
        
        Public Sub Setfld_nombre_conNull()
            Me(Me.tableview_clientes_con_prestamos.fld_nombre_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_conNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_apodo_conColumn)
        End Function
        
        Public Sub Setfld_apodo_conNull()
            Me(Me.tableview_clientes_con_prestamos.fld_apodo_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_conNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_cedula_conColumn)
        End Function
        
        Public Sub Setfld_cedula_conNull()
            Me(Me.tableview_clientes_con_prestamos.fld_cedula_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_conNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_telefono_conColumn)
        End Function
        
        Public Sub Setfld_telefono_conNull()
            Me(Me.tableview_clientes_con_prestamos.fld_telefono_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_conNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_celular_conColumn)
        End Function
        
        Public Sub Setfld_celular_conNull()
            Me(Me.tableview_clientes_con_prestamos.fld_celular_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_ref_personales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_personales_clienteNull()
            Me(Me.tableview_clientes_con_prestamos.fld_ref_personales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_ref_comerciales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_clienteNull()
            Me(Me.tableview_clientes_con_prestamos.fld_ref_comerciales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_garNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_nombre_garColumn)
        End Function
        
        Public Sub Setfld_nombre_garNull()
            Me(Me.tableview_clientes_con_prestamos.fld_nombre_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_garNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_apodo_garColumn)
        End Function
        
        Public Sub Setfld_apodo_garNull()
            Me(Me.tableview_clientes_con_prestamos.fld_apodo_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_garNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_cedula_garColumn)
        End Function
        
        Public Sub Setfld_cedula_garNull()
            Me(Me.tableview_clientes_con_prestamos.fld_cedula_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_garNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_telefono_garColumn)
        End Function
        
        Public Sub Setfld_telefono_garNull()
            Me(Me.tableview_clientes_con_prestamos.fld_telefono_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_garNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_celular_garColumn)
        End Function
        
        Public Sub Setfld_celular_garNull()
            Me(Me.tableview_clientes_con_prestamos.fld_celular_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_direccion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_direccion_garColumn)
        End Function
        
        Public Sub Setfld_direccion_garNull()
            Me(Me.tableview_clientes_con_prestamos.fld_direccion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ciudad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_ciudad_garColumn)
        End Function
        
        Public Sub Setfld_ciudad_garNull()
            Me(Me.tableview_clientes_con_prestamos.fld_ciudad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_ref_personales_garColumn)
        End Function
        
        Public Sub Setfld_ref_personales_garNull()
            Me(Me.tableview_clientes_con_prestamos.fld_ref_personales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_ref_comerciales_garColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_garNull()
            Me(Me.tableview_clientes_con_prestamos.fld_ref_comerciales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ingresos_mesualesNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_ingresos_mesualesColumn)
        End Function
        
        Public Sub Setfld_ingresos_mesualesNull()
            Me(Me.tableview_clientes_con_prestamos.fld_ingresos_mesualesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_nombre_banco1Column)
        End Function
        
        Public Sub Setfld_nombre_banco1Null()
            Me(Me.tableview_clientes_con_prestamos.fld_nombre_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_cuenta_banco1Column)
        End Function
        
        Public Sub Setfld_cuenta_banco1Null()
            Me(Me.tableview_clientes_con_prestamos.fld_cuenta_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_nombre_banco2Column)
        End Function
        
        Public Sub Setfld_nombre_banco2Null()
            Me(Me.tableview_clientes_con_prestamos.fld_nombre_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_cuenta_banco2Column)
        End Function
        
        Public Sub Setfld_cuenta_banco2Null()
            Me(Me.tableview_clientes_con_prestamos.fld_cuenta_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_otra_informacionNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_otra_informacionColumn)
        End Function
        
        Public Sub Setfld_otra_informacionNull()
            Me(Me.tableview_clientes_con_prestamos.fld_otra_informacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_nombre_con_garColumn)
        End Function
        
        Public Sub Setfld_nombre_con_garNull()
            Me(Me.tableview_clientes_con_prestamos.fld_nombre_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_apodo_con_garColumn)
        End Function
        
        Public Sub Setfld_apodo_con_garNull()
            Me(Me.tableview_clientes_con_prestamos.fld_apodo_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_cedula_con_garColumn)
        End Function
        
        Public Sub Setfld_cedula_con_garNull()
            Me(Me.tableview_clientes_con_prestamos.fld_cedula_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_telefono_con_garColumn)
        End Function
        
        Public Sub Setfld_telefono_con_garNull()
            Me(Me.tableview_clientes_con_prestamos.fld_telefono_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_celular_con_garColumn)
        End Function
        
        Public Sub Setfld_celular_con_garNull()
            Me(Me.tableview_clientes_con_prestamos.fld_celular_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edadNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_edadColumn)
        End Function
        
        Public Sub Setfld_edadNull()
            Me(Me.tableview_clientes_con_prestamos.fld_edadColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civilNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_estado_civilColumn)
        End Function
        
        Public Sub Setfld_estado_civilNull()
            Me(Me.tableview_clientes_con_prestamos.fld_estado_civilColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_edad_garColumn)
        End Function
        
        Public Sub Setfld_edad_garNull()
            Me(Me.tableview_clientes_con_prestamos.fld_edad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civil_garNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_estado_civil_garColumn)
        End Function
        
        Public Sub Setfld_estado_civil_garNull()
            Me(Me.tableview_clientes_con_prestamos.fld_estado_civil_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ocupacion_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_ocupacion_clienteColumn)
        End Function
        
        Public Sub Setfld_ocupacion_clienteNull()
            Me(Me.tableview_clientes_con_prestamos.fld_ocupacion_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ocupacion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_ocupacion_garColumn)
        End Function
        
        Public Sub Setfld_ocupacion_garNull()
            Me(Me.tableview_clientes_con_prestamos.fld_ocupacion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_sectorNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_sectorColumn)
        End Function
        
        Public Sub Setfld_sectorNull()
            Me(Me.tableview_clientes_con_prestamos.fld_sectorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_prestamosNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_id_prestamosColumn)
        End Function
        
        Public Sub Setfld_id_prestamosNull()
            Me(Me.tableview_clientes_con_prestamos.fld_id_prestamosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_del_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_id_del_clienteColumn)
        End Function
        
        Public Sub Setfld_id_del_clienteNull()
            Me(Me.tableview_clientes_con_prestamos.fld_id_del_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_clasificacionNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_clasificacionColumn)
        End Function
        
        Public Sub Setfld_clasificacionNull()
            Me(Me.tableview_clientes_con_prestamos.fld_clasificacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fecha_entregaNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_fecha_entregaColumn)
        End Function
        
        Public Sub Setfld_fecha_entregaNull()
            Me(Me.tableview_clientes_con_prestamos.fld_fecha_entregaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fecha_terminaNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_fecha_terminaColumn)
        End Function
        
        Public Sub Setfld_fecha_terminaNull()
            Me(Me.tableview_clientes_con_prestamos.fld_fecha_terminaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cantidad_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_cantidad_cuotasColumn)
        End Function
        
        Public Sub Setfld_cantidad_cuotasNull()
            Me(Me.tableview_clientes_con_prestamos.fld_cantidad_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_monto_cuotas_aNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_monto_cuotas_aColumn)
        End Function
        
        Public Sub Setfld_monto_cuotas_aNull()
            Me(Me.tableview_clientes_con_prestamos.fld_monto_cuotas_aColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_capital_prestamoNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_capital_prestamoColumn)
        End Function
        
        Public Sub Setfld_capital_prestamoNull()
            Me(Me.tableview_clientes_con_prestamos.fld_capital_prestamoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_montoNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_montoColumn)
        End Function
        
        Public Sub Setfld_montoNull()
            Me(Me.tableview_clientes_con_prestamos.fld_montoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_abonoNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_abonoColumn)
        End Function
        
        Public Sub Setfld_abonoNull()
            Me(Me.tableview_clientes_con_prestamos.fld_abonoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_balanceNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_balanceColumn)
        End Function
        
        Public Sub Setfld_balanceNull()
            Me(Me.tableview_clientes_con_prestamos.fld_balanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_usuarioNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_usuarioColumn)
        End Function
        
        Public Sub Setfld_usuarioNull()
            Me(Me.tableview_clientes_con_prestamos.fld_usuarioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fecha_ultimo_abonoNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_fecha_ultimo_abonoColumn)
        End Function
        
        Public Sub Setfld_fecha_ultimo_abonoNull()
            Me(Me.tableview_clientes_con_prestamos.fld_fecha_ultimo_abonoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_status_prestamosNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_status_prestamosColumn)
        End Function
        
        Public Sub Setfld_status_prestamosNull()
            Me(Me.tableview_clientes_con_prestamos.fld_status_prestamosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_anosNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_anosColumn)
        End Function
        
        Public Sub Setfld_anosNull()
            Me(Me.tableview_clientes_con_prestamos.fld_anosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_interes_pNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_interes_pColumn)
        End Function
        
        Public Sub Setfld_interes_pNull()
            Me(Me.tableview_clientes_con_prestamos.fld_interes_pColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_tipo_prestamoNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_tipo_prestamoColumn)
        End Function
        
        Public Sub Setfld_tipo_prestamoNull()
            Me(Me.tableview_clientes_con_prestamos.fld_tipo_prestamoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ck_noNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_ck_noColumn)
        End Function
        
        Public Sub Setfld_ck_noNull()
            Me(Me.tableview_clientes_con_prestamos.fld_ck_noColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_tipo_garantiaNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_tipo_garantiaColumn)
        End Function
        
        Public Sub Setfld_tipo_garantiaNull()
            Me(Me.tableview_clientes_con_prestamos.fld_tipo_garantiaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_garantiaNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fld_garantiaColumn)
        End Function
        
        Public Sub Setfld_garantiaNull()
            Me(Me.tableview_clientes_con_prestamos.fld_garantiaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldFinanciamientoNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fldFinanciamientoColumn)
        End Function
        
        Public Sub SetfldFinanciamientoNull()
            Me(Me.tableview_clientes_con_prestamos.fldFinanciamientoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldMontoFinanNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fldMontoFinanColumn)
        End Function
        
        Public Sub SetfldMontoFinanNull()
            Me(Me.tableview_clientes_con_prestamos.fldMontoFinanColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldMontoInicialNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fldMontoInicialColumn)
        End Function
        
        Public Sub SetfldMontoInicialNull()
            Me(Me.tableview_clientes_con_prestamos.fldMontoInicialColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldCodInmNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fldCodInmColumn)
        End Function
        
        Public Sub SetfldCodInmNull()
            Me(Me.tableview_clientes_con_prestamos.fldCodInmColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldDescInmNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fldDescInmColumn)
        End Function
        
        Public Sub SetfldDescInmNull()
            Me(Me.tableview_clientes_con_prestamos.fldDescInmColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldMetrosNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fldMetrosColumn)
        End Function
        
        Public Sub SetfldMetrosNull()
            Me(Me.tableview_clientes_con_prestamos.fldMetrosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldPrecioMetroNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fldPrecioMetroColumn)
        End Function
        
        Public Sub SetfldPrecioMetroNull()
            Me(Me.tableview_clientes_con_prestamos.fldPrecioMetroColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldTazaMoraNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fldTazaMoraColumn)
        End Function
        
        Public Sub SetfldTazaMoraNull()
            Me(Me.tableview_clientes_con_prestamos.fldTazaMoraColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldNotaNull() As Boolean
            Return Me.IsNull(Me.tableview_clientes_con_prestamos.fldNotaColumn)
        End Function
        
        Public Sub SetfldNotaNull()
            Me(Me.tableview_clientes_con_prestamos.fldNotaColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_clientes_con_prestamosRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As view_clientes_con_prestamosRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As view_clientes_con_prestamosRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As view_clientes_con_prestamosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_estado_proveedorDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id_ec_p As DataColumn
        
        Private columnfld_date As DataColumn
        
        Private columnfld_description As DataColumn
        
        Private columnfld_dr As DataColumn
        
        Private columnfld_cr As DataColumn
        
        Private columnfld_bce_proveedor As DataColumn
        
        Private columnfld_proveedor_id As DataColumn
        
        Private columnfld_tipo_doc As DataColumn
        
        Private columnfld_tipo_doc_id As DataColumn
        
        Private columnfld_usuario As DataColumn
        
        Private columnfldSupplierID As DataColumn
        
        Private columnfldCompany As DataColumn
        
        Private columnfldAddress As DataColumn
        
        Private columnfldPhone As DataColumn
        
        Private columnfldContact As DataColumn
        
        Private columnfldLimiteCR As DataColumn
        
        Private columnfldBalance As DataColumn
        
        Private columnfld_Status As DataColumn
        
        Private columnfldBy As DataColumn
        
        Private columnfldfax As DataColumn
        
        Private columnfldcel As DataColumn
        
        Private columnfld_clasificacion As DataColumn
        
        Private columnfld_cta_contable As DataColumn
        
        Private columnfld_telefono As DataColumn
        
        Private columnfld_correo As DataColumn
        
        Private columnfld_banco As DataColumn
        
        Friend Sub New()
            MyBase.New("view_estado_proveedor")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_ec_pColumn As DataColumn
            Get
                Return Me.columnfld_id_ec_p
            End Get
        End Property
        
        Friend ReadOnly Property fld_dateColumn As DataColumn
            Get
                Return Me.columnfld_date
            End Get
        End Property
        
        Friend ReadOnly Property fld_descriptionColumn As DataColumn
            Get
                Return Me.columnfld_description
            End Get
        End Property
        
        Friend ReadOnly Property fld_drColumn As DataColumn
            Get
                Return Me.columnfld_dr
            End Get
        End Property
        
        Friend ReadOnly Property fld_crColumn As DataColumn
            Get
                Return Me.columnfld_cr
            End Get
        End Property
        
        Friend ReadOnly Property fld_bce_proveedorColumn As DataColumn
            Get
                Return Me.columnfld_bce_proveedor
            End Get
        End Property
        
        Friend ReadOnly Property fld_proveedor_idColumn As DataColumn
            Get
                Return Me.columnfld_proveedor_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_tipo_docColumn As DataColumn
            Get
                Return Me.columnfld_tipo_doc
            End Get
        End Property
        
        Friend ReadOnly Property fld_tipo_doc_idColumn As DataColumn
            Get
                Return Me.columnfld_tipo_doc_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_usuarioColumn As DataColumn
            Get
                Return Me.columnfld_usuario
            End Get
        End Property
        
        Friend ReadOnly Property fldSupplierIDColumn As DataColumn
            Get
                Return Me.columnfldSupplierID
            End Get
        End Property
        
        Friend ReadOnly Property fldCompanyColumn As DataColumn
            Get
                Return Me.columnfldCompany
            End Get
        End Property
        
        Friend ReadOnly Property fldAddressColumn As DataColumn
            Get
                Return Me.columnfldAddress
            End Get
        End Property
        
        Friend ReadOnly Property fldPhoneColumn As DataColumn
            Get
                Return Me.columnfldPhone
            End Get
        End Property
        
        Friend ReadOnly Property fldContactColumn As DataColumn
            Get
                Return Me.columnfldContact
            End Get
        End Property
        
        Friend ReadOnly Property fldLimiteCRColumn As DataColumn
            Get
                Return Me.columnfldLimiteCR
            End Get
        End Property
        
        Friend ReadOnly Property fldBalanceColumn As DataColumn
            Get
                Return Me.columnfldBalance
            End Get
        End Property
        
        Friend ReadOnly Property fld_StatusColumn As DataColumn
            Get
                Return Me.columnfld_Status
            End Get
        End Property
        
        Friend ReadOnly Property fldByColumn As DataColumn
            Get
                Return Me.columnfldBy
            End Get
        End Property
        
        Friend ReadOnly Property fldfaxColumn As DataColumn
            Get
                Return Me.columnfldfax
            End Get
        End Property
        
        Friend ReadOnly Property fldcelColumn As DataColumn
            Get
                Return Me.columnfldcel
            End Get
        End Property
        
        Friend ReadOnly Property fld_clasificacionColumn As DataColumn
            Get
                Return Me.columnfld_clasificacion
            End Get
        End Property
        
        Friend ReadOnly Property fld_cta_contableColumn As DataColumn
            Get
                Return Me.columnfld_cta_contable
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefonoColumn As DataColumn
            Get
                Return Me.columnfld_telefono
            End Get
        End Property
        
        Friend ReadOnly Property fld_correoColumn As DataColumn
            Get
                Return Me.columnfld_correo
            End Get
        End Property
        
        Friend ReadOnly Property fld_bancoColumn As DataColumn
            Get
                Return Me.columnfld_banco
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_estado_proveedorRow
            Get
                Return CType(Me.Rows(index),view_estado_proveedorRow)
            End Get
        End Property
        
        Public Event view_estado_proveedorRowChanged As view_estado_proveedorRowChangeEventHandler
        
        Public Event view_estado_proveedorRowChanging As view_estado_proveedorRowChangeEventHandler
        
        Public Event view_estado_proveedorRowDeleted As view_estado_proveedorRowChangeEventHandler
        
        Public Event view_estado_proveedorRowDeleting As view_estado_proveedorRowChangeEventHandler
        
        Public Overloads Sub Addview_estado_proveedorRow(ByVal row As view_estado_proveedorRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addview_estado_proveedorRow( _
                    ByVal fld_date As Date,  _
                    ByVal fld_description As String,  _
                    ByVal fld_dr As Double,  _
                    ByVal fld_cr As Double,  _
                    ByVal fld_bce_proveedor As Double,  _
                    ByVal fld_proveedor_id As Integer,  _
                    ByVal fld_tipo_doc As String,  _
                    ByVal fld_tipo_doc_id As String,  _
                    ByVal fld_usuario As String,  _
                    ByVal fldCompany As String,  _
                    ByVal fldAddress As String,  _
                    ByVal fldPhone As String,  _
                    ByVal fldContact As String,  _
                    ByVal fldLimiteCR As Double,  _
                    ByVal fldBalance As Double,  _
                    ByVal fld_Status As String,  _
                    ByVal fldBy As String,  _
                    ByVal fldfax As String,  _
                    ByVal fldcel As String,  _
                    ByVal fld_clasificacion As String,  _
                    ByVal fld_cta_contable As String,  _
                    ByVal fld_telefono As String,  _
                    ByVal fld_correo As String,  _
                    ByVal fld_banco As String) As view_estado_proveedorRow
            Dim rowview_estado_proveedorRow As view_estado_proveedorRow = CType(Me.NewRow,view_estado_proveedorRow)
            rowview_estado_proveedorRow.ItemArray = New Object() {Nothing, fld_date, fld_description, fld_dr, fld_cr, fld_bce_proveedor, fld_proveedor_id, fld_tipo_doc, fld_tipo_doc_id, fld_usuario, Nothing, fldCompany, fldAddress, fldPhone, fldContact, fldLimiteCR, fldBalance, fld_Status, fldBy, fldfax, fldcel, fld_clasificacion, fld_cta_contable, fld_telefono, fld_correo, fld_banco}
            Me.Rows.Add(rowview_estado_proveedorRow)
            Return rowview_estado_proveedorRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As view_estado_proveedorDataTable = CType(MyBase.Clone,view_estado_proveedorDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New view_estado_proveedorDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id_ec_p = Me.Columns("fld_id_ec_p")
            Me.columnfld_date = Me.Columns("fld_date")
            Me.columnfld_description = Me.Columns("fld_description")
            Me.columnfld_dr = Me.Columns("fld_dr")
            Me.columnfld_cr = Me.Columns("fld_cr")
            Me.columnfld_bce_proveedor = Me.Columns("fld_bce_proveedor")
            Me.columnfld_proveedor_id = Me.Columns("fld_proveedor_id")
            Me.columnfld_tipo_doc = Me.Columns("fld_tipo_doc")
            Me.columnfld_tipo_doc_id = Me.Columns("fld_tipo_doc_id")
            Me.columnfld_usuario = Me.Columns("fld_usuario")
            Me.columnfldSupplierID = Me.Columns("fldSupplierID")
            Me.columnfldCompany = Me.Columns("fldCompany")
            Me.columnfldAddress = Me.Columns("fldAddress")
            Me.columnfldPhone = Me.Columns("fldPhone")
            Me.columnfldContact = Me.Columns("fldContact")
            Me.columnfldLimiteCR = Me.Columns("fldLimiteCR")
            Me.columnfldBalance = Me.Columns("fldBalance")
            Me.columnfld_Status = Me.Columns("fld_Status")
            Me.columnfldBy = Me.Columns("fldBy")
            Me.columnfldfax = Me.Columns("fldfax")
            Me.columnfldcel = Me.Columns("fldcel")
            Me.columnfld_clasificacion = Me.Columns("fld_clasificacion")
            Me.columnfld_cta_contable = Me.Columns("fld_cta_contable")
            Me.columnfld_telefono = Me.Columns("fld_telefono")
            Me.columnfld_correo = Me.Columns("fld_correo")
            Me.columnfld_banco = Me.Columns("fld_banco")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id_ec_p = New DataColumn("fld_id_ec_p", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_ec_p)
            Me.columnfld_date = New DataColumn("fld_date", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_date)
            Me.columnfld_description = New DataColumn("fld_description", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_description)
            Me.columnfld_dr = New DataColumn("fld_dr", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_dr)
            Me.columnfld_cr = New DataColumn("fld_cr", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cr)
            Me.columnfld_bce_proveedor = New DataColumn("fld_bce_proveedor", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce_proveedor)
            Me.columnfld_proveedor_id = New DataColumn("fld_proveedor_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_proveedor_id)
            Me.columnfld_tipo_doc = New DataColumn("fld_tipo_doc", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_tipo_doc)
            Me.columnfld_tipo_doc_id = New DataColumn("fld_tipo_doc_id", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_tipo_doc_id)
            Me.columnfld_usuario = New DataColumn("fld_usuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_usuario)
            Me.columnfldSupplierID = New DataColumn("fldSupplierID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldSupplierID)
            Me.columnfldCompany = New DataColumn("fldCompany", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldCompany)
            Me.columnfldAddress = New DataColumn("fldAddress", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldAddress)
            Me.columnfldPhone = New DataColumn("fldPhone", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldPhone)
            Me.columnfldContact = New DataColumn("fldContact", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldContact)
            Me.columnfldLimiteCR = New DataColumn("fldLimiteCR", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldLimiteCR)
            Me.columnfldBalance = New DataColumn("fldBalance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldBalance)
            Me.columnfld_Status = New DataColumn("fld_Status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Status)
            Me.columnfldBy = New DataColumn("fldBy", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldBy)
            Me.columnfldfax = New DataColumn("fldfax", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldfax)
            Me.columnfldcel = New DataColumn("fldcel", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldcel)
            Me.columnfld_clasificacion = New DataColumn("fld_clasificacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_clasificacion)
            Me.columnfld_cta_contable = New DataColumn("fld_cta_contable", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cta_contable)
            Me.columnfld_telefono = New DataColumn("fld_telefono", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono)
            Me.columnfld_correo = New DataColumn("fld_correo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_correo)
            Me.columnfld_banco = New DataColumn("fld_banco", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_banco)
            Me.columnfld_id_ec_p.AutoIncrement = true
            Me.columnfldSupplierID.AutoIncrement = true
        End Sub
        
        Public Function Newview_estado_proveedorRow() As view_estado_proveedorRow
            Return CType(Me.NewRow,view_estado_proveedorRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New view_estado_proveedorRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(view_estado_proveedorRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_estado_proveedorRowChangedEvent) Is Nothing) Then
                RaiseEvent view_estado_proveedorRowChanged(Me, New view_estado_proveedorRowChangeEvent(CType(e.Row,view_estado_proveedorRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_estado_proveedorRowChangingEvent) Is Nothing) Then
                RaiseEvent view_estado_proveedorRowChanging(Me, New view_estado_proveedorRowChangeEvent(CType(e.Row,view_estado_proveedorRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_estado_proveedorRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_estado_proveedorRowDeleted(Me, New view_estado_proveedorRowChangeEvent(CType(e.Row,view_estado_proveedorRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_estado_proveedorRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_estado_proveedorRowDeleting(Me, New view_estado_proveedorRowChangeEvent(CType(e.Row,view_estado_proveedorRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeview_estado_proveedorRow(ByVal row As view_estado_proveedorRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_estado_proveedorRow
        Inherits DataRow
        
        Private tableview_estado_proveedor As view_estado_proveedorDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_estado_proveedor = CType(Me.Table,view_estado_proveedorDataTable)
        End Sub
        
        Public Property fld_id_ec_p As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fld_id_ec_pColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fld_id_ec_pColumn) = value
            End Set
        End Property
        
        Public Property fld_date As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fld_dateColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fld_dateColumn) = value
            End Set
        End Property
        
        Public Property fld_description As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fld_descriptionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fld_descriptionColumn) = value
            End Set
        End Property
        
        Public Property fld_dr As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fld_drColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fld_drColumn) = value
            End Set
        End Property
        
        Public Property fld_cr As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fld_crColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fld_crColumn) = value
            End Set
        End Property
        
        Public Property fld_bce_proveedor As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fld_bce_proveedorColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fld_bce_proveedorColumn) = value
            End Set
        End Property
        
        Public Property fld_proveedor_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fld_proveedor_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fld_proveedor_idColumn) = value
            End Set
        End Property
        
        Public Property fld_tipo_doc As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fld_tipo_docColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fld_tipo_docColumn) = value
            End Set
        End Property
        
        Public Property fld_tipo_doc_id As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fld_tipo_doc_idColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fld_tipo_doc_idColumn) = value
            End Set
        End Property
        
        Public Property fld_usuario As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fld_usuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fld_usuarioColumn) = value
            End Set
        End Property
        
        Public Property fldSupplierID As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fldSupplierIDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fldSupplierIDColumn) = value
            End Set
        End Property
        
        Public Property fldCompany As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fldCompanyColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fldCompanyColumn) = value
            End Set
        End Property
        
        Public Property fldAddress As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fldAddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fldAddressColumn) = value
            End Set
        End Property
        
        Public Property fldPhone As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fldPhoneColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fldPhoneColumn) = value
            End Set
        End Property
        
        Public Property fldContact As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fldContactColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fldContactColumn) = value
            End Set
        End Property
        
        Public Property fldLimiteCR As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fldLimiteCRColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fldLimiteCRColumn) = value
            End Set
        End Property
        
        Public Property fldBalance As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fldBalanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fldBalanceColumn) = value
            End Set
        End Property
        
        Public Property fld_Status As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fld_StatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fld_StatusColumn) = value
            End Set
        End Property
        
        Public Property fldBy As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fldByColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fldByColumn) = value
            End Set
        End Property
        
        Public Property fldfax As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fldfaxColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fldfaxColumn) = value
            End Set
        End Property
        
        Public Property fldcel As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fldcelColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fldcelColumn) = value
            End Set
        End Property
        
        Public Property fld_clasificacion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fld_clasificacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fld_clasificacionColumn) = value
            End Set
        End Property
        
        Public Property fld_cta_contable As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fld_cta_contableColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fld_cta_contableColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fld_telefonoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fld_telefonoColumn) = value
            End Set
        End Property
        
        Public Property fld_correo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fld_correoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fld_correoColumn) = value
            End Set
        End Property
        
        Public Property fld_banco As String
            Get
                Try 
                    Return CType(Me(Me.tableview_estado_proveedor.fld_bancoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_estado_proveedor.fld_bancoColumn) = value
            End Set
        End Property
        
        Public Function Isfld_id_ec_pNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fld_id_ec_pColumn)
        End Function
        
        Public Sub Setfld_id_ec_pNull()
            Me(Me.tableview_estado_proveedor.fld_id_ec_pColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_dateNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fld_dateColumn)
        End Function
        
        Public Sub Setfld_dateNull()
            Me(Me.tableview_estado_proveedor.fld_dateColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_descriptionNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fld_descriptionColumn)
        End Function
        
        Public Sub Setfld_descriptionNull()
            Me(Me.tableview_estado_proveedor.fld_descriptionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_drNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fld_drColumn)
        End Function
        
        Public Sub Setfld_drNull()
            Me(Me.tableview_estado_proveedor.fld_drColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_crNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fld_crColumn)
        End Function
        
        Public Sub Setfld_crNull()
            Me(Me.tableview_estado_proveedor.fld_crColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bce_proveedorNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fld_bce_proveedorColumn)
        End Function
        
        Public Sub Setfld_bce_proveedorNull()
            Me(Me.tableview_estado_proveedor.fld_bce_proveedorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_proveedor_idNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fld_proveedor_idColumn)
        End Function
        
        Public Sub Setfld_proveedor_idNull()
            Me(Me.tableview_estado_proveedor.fld_proveedor_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_tipo_docNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fld_tipo_docColumn)
        End Function
        
        Public Sub Setfld_tipo_docNull()
            Me(Me.tableview_estado_proveedor.fld_tipo_docColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_tipo_doc_idNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fld_tipo_doc_idColumn)
        End Function
        
        Public Sub Setfld_tipo_doc_idNull()
            Me(Me.tableview_estado_proveedor.fld_tipo_doc_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_usuarioNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fld_usuarioColumn)
        End Function
        
        Public Sub Setfld_usuarioNull()
            Me(Me.tableview_estado_proveedor.fld_usuarioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldSupplierIDNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fldSupplierIDColumn)
        End Function
        
        Public Sub SetfldSupplierIDNull()
            Me(Me.tableview_estado_proveedor.fldSupplierIDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldCompanyNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fldCompanyColumn)
        End Function
        
        Public Sub SetfldCompanyNull()
            Me(Me.tableview_estado_proveedor.fldCompanyColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldAddressNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fldAddressColumn)
        End Function
        
        Public Sub SetfldAddressNull()
            Me(Me.tableview_estado_proveedor.fldAddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldPhoneNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fldPhoneColumn)
        End Function
        
        Public Sub SetfldPhoneNull()
            Me(Me.tableview_estado_proveedor.fldPhoneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldContactNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fldContactColumn)
        End Function
        
        Public Sub SetfldContactNull()
            Me(Me.tableview_estado_proveedor.fldContactColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldLimiteCRNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fldLimiteCRColumn)
        End Function
        
        Public Sub SetfldLimiteCRNull()
            Me(Me.tableview_estado_proveedor.fldLimiteCRColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldBalanceNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fldBalanceColumn)
        End Function
        
        Public Sub SetfldBalanceNull()
            Me(Me.tableview_estado_proveedor.fldBalanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_StatusNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fld_StatusColumn)
        End Function
        
        Public Sub Setfld_StatusNull()
            Me(Me.tableview_estado_proveedor.fld_StatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldByNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fldByColumn)
        End Function
        
        Public Sub SetfldByNull()
            Me(Me.tableview_estado_proveedor.fldByColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldfaxNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fldfaxColumn)
        End Function
        
        Public Sub SetfldfaxNull()
            Me(Me.tableview_estado_proveedor.fldfaxColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldcelNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fldcelColumn)
        End Function
        
        Public Sub SetfldcelNull()
            Me(Me.tableview_estado_proveedor.fldcelColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_clasificacionNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fld_clasificacionColumn)
        End Function
        
        Public Sub Setfld_clasificacionNull()
            Me(Me.tableview_estado_proveedor.fld_clasificacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cta_contableNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fld_cta_contableColumn)
        End Function
        
        Public Sub Setfld_cta_contableNull()
            Me(Me.tableview_estado_proveedor.fld_cta_contableColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefonoNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fld_telefonoColumn)
        End Function
        
        Public Sub Setfld_telefonoNull()
            Me(Me.tableview_estado_proveedor.fld_telefonoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_correoNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fld_correoColumn)
        End Function
        
        Public Sub Setfld_correoNull()
            Me(Me.tableview_estado_proveedor.fld_correoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bancoNull() As Boolean
            Return Me.IsNull(Me.tableview_estado_proveedor.fld_bancoColumn)
        End Function
        
        Public Sub Setfld_bancoNull()
            Me(Me.tableview_estado_proveedor.fld_bancoColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_estado_proveedorRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As view_estado_proveedorRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As view_estado_proveedorRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As view_estado_proveedorRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_nota_credito_cxpDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id As DataColumn
        
        Private columnfld_proveedor_id_nc As DataColumn
        
        Private columnfld_fecha As DataColumn
        
        Private columnfld_concepto As DataColumn
        
        Private columnfld_monto As DataColumn
        
        Private columnfld_abono As DataColumn
        
        Private columnfld_balance As DataColumn
        
        Private columnfld_user As DataColumn
        
        Private columnfldstatus As DataColumn
        
        Private columnfld_ncf_nc_cxp As DataColumn
        
        Private columnfld_ultimo_abono As DataColumn
        
        Private columnfld_chk As DataColumn
        
        Private columnfldSupplierID As DataColumn
        
        Private columnfldCompany As DataColumn
        
        Private columnfldAddress As DataColumn
        
        Private columnfldPhone As DataColumn
        
        Private columnfldContact As DataColumn
        
        Private columnfldLimiteCR As DataColumn
        
        Private columnfldBalance As DataColumn
        
        Private columnfld_Status As DataColumn
        
        Private columnfldBy As DataColumn
        
        Private columnfldfax As DataColumn
        
        Private columnfldcel As DataColumn
        
        Private columnfld_clasificacion As DataColumn
        
        Private columnfld_cta_contable As DataColumn
        
        Private columnfld_telefono As DataColumn
        
        Private columnfld_correo As DataColumn
        
        Private columnfld_banco As DataColumn
        
        Friend Sub New()
            MyBase.New("view_nota_credito_cxp")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_proveedor_id_ncColumn As DataColumn
            Get
                Return Me.columnfld_proveedor_id_nc
            End Get
        End Property
        
        Friend ReadOnly Property fld_fechaColumn As DataColumn
            Get
                Return Me.columnfld_fecha
            End Get
        End Property
        
        Friend ReadOnly Property fld_conceptoColumn As DataColumn
            Get
                Return Me.columnfld_concepto
            End Get
        End Property
        
        Friend ReadOnly Property fld_montoColumn As DataColumn
            Get
                Return Me.columnfld_monto
            End Get
        End Property
        
        Friend ReadOnly Property fld_abonoColumn As DataColumn
            Get
                Return Me.columnfld_abono
            End Get
        End Property
        
        Friend ReadOnly Property fld_balanceColumn As DataColumn
            Get
                Return Me.columnfld_balance
            End Get
        End Property
        
        Friend ReadOnly Property fld_userColumn As DataColumn
            Get
                Return Me.columnfld_user
            End Get
        End Property
        
        Friend ReadOnly Property fldstatusColumn As DataColumn
            Get
                Return Me.columnfldstatus
            End Get
        End Property
        
        Friend ReadOnly Property fld_ncf_nc_cxpColumn As DataColumn
            Get
                Return Me.columnfld_ncf_nc_cxp
            End Get
        End Property
        
        Friend ReadOnly Property fld_ultimo_abonoColumn As DataColumn
            Get
                Return Me.columnfld_ultimo_abono
            End Get
        End Property
        
        Friend ReadOnly Property fld_chkColumn As DataColumn
            Get
                Return Me.columnfld_chk
            End Get
        End Property
        
        Friend ReadOnly Property fldSupplierIDColumn As DataColumn
            Get
                Return Me.columnfldSupplierID
            End Get
        End Property
        
        Friend ReadOnly Property fldCompanyColumn As DataColumn
            Get
                Return Me.columnfldCompany
            End Get
        End Property
        
        Friend ReadOnly Property fldAddressColumn As DataColumn
            Get
                Return Me.columnfldAddress
            End Get
        End Property
        
        Friend ReadOnly Property fldPhoneColumn As DataColumn
            Get
                Return Me.columnfldPhone
            End Get
        End Property
        
        Friend ReadOnly Property fldContactColumn As DataColumn
            Get
                Return Me.columnfldContact
            End Get
        End Property
        
        Friend ReadOnly Property fldLimiteCRColumn As DataColumn
            Get
                Return Me.columnfldLimiteCR
            End Get
        End Property
        
        Friend ReadOnly Property fldBalanceColumn As DataColumn
            Get
                Return Me.columnfldBalance
            End Get
        End Property
        
        Friend ReadOnly Property fld_StatusColumn As DataColumn
            Get
                Return Me.columnfld_Status
            End Get
        End Property
        
        Friend ReadOnly Property fldByColumn As DataColumn
            Get
                Return Me.columnfldBy
            End Get
        End Property
        
        Friend ReadOnly Property fldfaxColumn As DataColumn
            Get
                Return Me.columnfldfax
            End Get
        End Property
        
        Friend ReadOnly Property fldcelColumn As DataColumn
            Get
                Return Me.columnfldcel
            End Get
        End Property
        
        Friend ReadOnly Property fld_clasificacionColumn As DataColumn
            Get
                Return Me.columnfld_clasificacion
            End Get
        End Property
        
        Friend ReadOnly Property fld_cta_contableColumn As DataColumn
            Get
                Return Me.columnfld_cta_contable
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefonoColumn As DataColumn
            Get
                Return Me.columnfld_telefono
            End Get
        End Property
        
        Friend ReadOnly Property fld_correoColumn As DataColumn
            Get
                Return Me.columnfld_correo
            End Get
        End Property
        
        Friend ReadOnly Property fld_bancoColumn As DataColumn
            Get
                Return Me.columnfld_banco
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_nota_credito_cxpRow
            Get
                Return CType(Me.Rows(index),view_nota_credito_cxpRow)
            End Get
        End Property
        
        Public Event view_nota_credito_cxpRowChanged As view_nota_credito_cxpRowChangeEventHandler
        
        Public Event view_nota_credito_cxpRowChanging As view_nota_credito_cxpRowChangeEventHandler
        
        Public Event view_nota_credito_cxpRowDeleted As view_nota_credito_cxpRowChangeEventHandler
        
        Public Event view_nota_credito_cxpRowDeleting As view_nota_credito_cxpRowChangeEventHandler
        
        Public Overloads Sub Addview_nota_credito_cxpRow(ByVal row As view_nota_credito_cxpRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addview_nota_credito_cxpRow( _
                    ByVal fld_id As Double,  _
                    ByVal fld_proveedor_id_nc As Integer,  _
                    ByVal fld_fecha As Date,  _
                    ByVal fld_concepto As String,  _
                    ByVal fld_monto As Double,  _
                    ByVal fld_abono As Double,  _
                    ByVal fld_balance As Double,  _
                    ByVal fld_user As String,  _
                    ByVal fldstatus As String,  _
                    ByVal fld_ncf_nc_cxp As String,  _
                    ByVal fld_ultimo_abono As Double,  _
                    ByVal fld_chk As String,  _
                    ByVal fldCompany As String,  _
                    ByVal fldAddress As String,  _
                    ByVal fldPhone As String,  _
                    ByVal fldContact As String,  _
                    ByVal fldLimiteCR As Double,  _
                    ByVal fldBalance As Double,  _
                    ByVal fld_Status As String,  _
                    ByVal fldBy As String,  _
                    ByVal fldfax As String,  _
                    ByVal fldcel As String,  _
                    ByVal fld_clasificacion As String,  _
                    ByVal fld_cta_contable As String,  _
                    ByVal fld_telefono As String,  _
                    ByVal fld_correo As String,  _
                    ByVal fld_banco As String) As view_nota_credito_cxpRow
            Dim rowview_nota_credito_cxpRow As view_nota_credito_cxpRow = CType(Me.NewRow,view_nota_credito_cxpRow)
            rowview_nota_credito_cxpRow.ItemArray = New Object() {fld_id, fld_proveedor_id_nc, fld_fecha, fld_concepto, fld_monto, fld_abono, fld_balance, fld_user, fldstatus, fld_ncf_nc_cxp, fld_ultimo_abono, fld_chk, Nothing, fldCompany, fldAddress, fldPhone, fldContact, fldLimiteCR, fldBalance, fld_Status, fldBy, fldfax, fldcel, fld_clasificacion, fld_cta_contable, fld_telefono, fld_correo, fld_banco}
            Me.Rows.Add(rowview_nota_credito_cxpRow)
            Return rowview_nota_credito_cxpRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As view_nota_credito_cxpDataTable = CType(MyBase.Clone,view_nota_credito_cxpDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New view_nota_credito_cxpDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnfld_proveedor_id_nc = Me.Columns("fld_proveedor_id_nc")
            Me.columnfld_fecha = Me.Columns("fld_fecha")
            Me.columnfld_concepto = Me.Columns("fld_concepto")
            Me.columnfld_monto = Me.Columns("fld_monto")
            Me.columnfld_abono = Me.Columns("fld_abono")
            Me.columnfld_balance = Me.Columns("fld_balance")
            Me.columnfld_user = Me.Columns("fld_user")
            Me.columnfldstatus = Me.Columns("fldstatus")
            Me.columnfld_ncf_nc_cxp = Me.Columns("fld_ncf_nc_cxp")
            Me.columnfld_ultimo_abono = Me.Columns("fld_ultimo_abono")
            Me.columnfld_chk = Me.Columns("fld_chk")
            Me.columnfldSupplierID = Me.Columns("fldSupplierID")
            Me.columnfldCompany = Me.Columns("fldCompany")
            Me.columnfldAddress = Me.Columns("fldAddress")
            Me.columnfldPhone = Me.Columns("fldPhone")
            Me.columnfldContact = Me.Columns("fldContact")
            Me.columnfldLimiteCR = Me.Columns("fldLimiteCR")
            Me.columnfldBalance = Me.Columns("fldBalance")
            Me.columnfld_Status = Me.Columns("fld_Status")
            Me.columnfldBy = Me.Columns("fldBy")
            Me.columnfldfax = Me.Columns("fldfax")
            Me.columnfldcel = Me.Columns("fldcel")
            Me.columnfld_clasificacion = Me.Columns("fld_clasificacion")
            Me.columnfld_cta_contable = Me.Columns("fld_cta_contable")
            Me.columnfld_telefono = Me.Columns("fld_telefono")
            Me.columnfld_correo = Me.Columns("fld_correo")
            Me.columnfld_banco = Me.Columns("fld_banco")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnfld_proveedor_id_nc = New DataColumn("fld_proveedor_id_nc", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_proveedor_id_nc)
            Me.columnfld_fecha = New DataColumn("fld_fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha)
            Me.columnfld_concepto = New DataColumn("fld_concepto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_concepto)
            Me.columnfld_monto = New DataColumn("fld_monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto)
            Me.columnfld_abono = New DataColumn("fld_abono", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_abono)
            Me.columnfld_balance = New DataColumn("fld_balance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_balance)
            Me.columnfld_user = New DataColumn("fld_user", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_user)
            Me.columnfldstatus = New DataColumn("fldstatus", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldstatus)
            Me.columnfld_ncf_nc_cxp = New DataColumn("fld_ncf_nc_cxp", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ncf_nc_cxp)
            Me.columnfld_ultimo_abono = New DataColumn("fld_ultimo_abono", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ultimo_abono)
            Me.columnfld_chk = New DataColumn("fld_chk", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_chk)
            Me.columnfldSupplierID = New DataColumn("fldSupplierID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldSupplierID)
            Me.columnfldCompany = New DataColumn("fldCompany", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldCompany)
            Me.columnfldAddress = New DataColumn("fldAddress", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldAddress)
            Me.columnfldPhone = New DataColumn("fldPhone", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldPhone)
            Me.columnfldContact = New DataColumn("fldContact", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldContact)
            Me.columnfldLimiteCR = New DataColumn("fldLimiteCR", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldLimiteCR)
            Me.columnfldBalance = New DataColumn("fldBalance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldBalance)
            Me.columnfld_Status = New DataColumn("fld_Status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Status)
            Me.columnfldBy = New DataColumn("fldBy", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldBy)
            Me.columnfldfax = New DataColumn("fldfax", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldfax)
            Me.columnfldcel = New DataColumn("fldcel", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldcel)
            Me.columnfld_clasificacion = New DataColumn("fld_clasificacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_clasificacion)
            Me.columnfld_cta_contable = New DataColumn("fld_cta_contable", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cta_contable)
            Me.columnfld_telefono = New DataColumn("fld_telefono", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono)
            Me.columnfld_correo = New DataColumn("fld_correo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_correo)
            Me.columnfld_banco = New DataColumn("fld_banco", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_banco)
            Me.columnfldSupplierID.AutoIncrement = true
        End Sub
        
        Public Function Newview_nota_credito_cxpRow() As view_nota_credito_cxpRow
            Return CType(Me.NewRow,view_nota_credito_cxpRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New view_nota_credito_cxpRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(view_nota_credito_cxpRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_nota_credito_cxpRowChangedEvent) Is Nothing) Then
                RaiseEvent view_nota_credito_cxpRowChanged(Me, New view_nota_credito_cxpRowChangeEvent(CType(e.Row,view_nota_credito_cxpRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_nota_credito_cxpRowChangingEvent) Is Nothing) Then
                RaiseEvent view_nota_credito_cxpRowChanging(Me, New view_nota_credito_cxpRowChangeEvent(CType(e.Row,view_nota_credito_cxpRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_nota_credito_cxpRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_nota_credito_cxpRowDeleted(Me, New view_nota_credito_cxpRowChangeEvent(CType(e.Row,view_nota_credito_cxpRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_nota_credito_cxpRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_nota_credito_cxpRowDeleting(Me, New view_nota_credito_cxpRowChangeEvent(CType(e.Row,view_nota_credito_cxpRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeview_nota_credito_cxpRow(ByVal row As view_nota_credito_cxpRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_nota_credito_cxpRow
        Inherits DataRow
        
        Private tableview_nota_credito_cxp As view_nota_credito_cxpDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_nota_credito_cxp = CType(Me.Table,view_nota_credito_cxpDataTable)
        End Sub
        
        Public Property fld_id As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fld_idColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fld_idColumn) = value
            End Set
        End Property
        
        Public Property fld_proveedor_id_nc As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fld_proveedor_id_ncColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fld_proveedor_id_ncColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fld_fechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fld_fechaColumn) = value
            End Set
        End Property
        
        Public Property fld_concepto As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fld_conceptoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fld_conceptoColumn) = value
            End Set
        End Property
        
        Public Property fld_monto As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fld_montoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fld_montoColumn) = value
            End Set
        End Property
        
        Public Property fld_abono As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fld_abonoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fld_abonoColumn) = value
            End Set
        End Property
        
        Public Property fld_balance As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fld_balanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fld_balanceColumn) = value
            End Set
        End Property
        
        Public Property fld_user As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fld_userColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fld_userColumn) = value
            End Set
        End Property
        
        Public Property fldstatus As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fldstatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fldstatusColumn) = value
            End Set
        End Property
        
        Public Property fld_ncf_nc_cxp As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fld_ncf_nc_cxpColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fld_ncf_nc_cxpColumn) = value
            End Set
        End Property
        
        Public Property fld_ultimo_abono As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fld_ultimo_abonoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fld_ultimo_abonoColumn) = value
            End Set
        End Property
        
        Public Property fld_chk As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fld_chkColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fld_chkColumn) = value
            End Set
        End Property
        
        Public Property fldSupplierID As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fldSupplierIDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fldSupplierIDColumn) = value
            End Set
        End Property
        
        Public Property fldCompany As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fldCompanyColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fldCompanyColumn) = value
            End Set
        End Property
        
        Public Property fldAddress As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fldAddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fldAddressColumn) = value
            End Set
        End Property
        
        Public Property fldPhone As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fldPhoneColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fldPhoneColumn) = value
            End Set
        End Property
        
        Public Property fldContact As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fldContactColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fldContactColumn) = value
            End Set
        End Property
        
        Public Property fldLimiteCR As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fldLimiteCRColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fldLimiteCRColumn) = value
            End Set
        End Property
        
        Public Property fldBalance As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fldBalanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fldBalanceColumn) = value
            End Set
        End Property
        
        Public Property fld_Status As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fld_StatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fld_StatusColumn) = value
            End Set
        End Property
        
        Public Property fldBy As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fldByColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fldByColumn) = value
            End Set
        End Property
        
        Public Property fldfax As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fldfaxColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fldfaxColumn) = value
            End Set
        End Property
        
        Public Property fldcel As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fldcelColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fldcelColumn) = value
            End Set
        End Property
        
        Public Property fld_clasificacion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fld_clasificacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fld_clasificacionColumn) = value
            End Set
        End Property
        
        Public Property fld_cta_contable As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fld_cta_contableColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fld_cta_contableColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fld_telefonoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fld_telefonoColumn) = value
            End Set
        End Property
        
        Public Property fld_correo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fld_correoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fld_correoColumn) = value
            End Set
        End Property
        
        Public Property fld_banco As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_credito_cxp.fld_bancoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_credito_cxp.fld_bancoColumn) = value
            End Set
        End Property
        
        Public Function Isfld_idNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fld_idColumn)
        End Function
        
        Public Sub Setfld_idNull()
            Me(Me.tableview_nota_credito_cxp.fld_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_proveedor_id_ncNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fld_proveedor_id_ncColumn)
        End Function
        
        Public Sub Setfld_proveedor_id_ncNull()
            Me(Me.tableview_nota_credito_cxp.fld_proveedor_id_ncColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fechaNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fld_fechaColumn)
        End Function
        
        Public Sub Setfld_fechaNull()
            Me(Me.tableview_nota_credito_cxp.fld_fechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_conceptoNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fld_conceptoColumn)
        End Function
        
        Public Sub Setfld_conceptoNull()
            Me(Me.tableview_nota_credito_cxp.fld_conceptoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_montoNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fld_montoColumn)
        End Function
        
        Public Sub Setfld_montoNull()
            Me(Me.tableview_nota_credito_cxp.fld_montoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_abonoNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fld_abonoColumn)
        End Function
        
        Public Sub Setfld_abonoNull()
            Me(Me.tableview_nota_credito_cxp.fld_abonoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_balanceNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fld_balanceColumn)
        End Function
        
        Public Sub Setfld_balanceNull()
            Me(Me.tableview_nota_credito_cxp.fld_balanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_userNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fld_userColumn)
        End Function
        
        Public Sub Setfld_userNull()
            Me(Me.tableview_nota_credito_cxp.fld_userColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldstatusNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fldstatusColumn)
        End Function
        
        Public Sub SetfldstatusNull()
            Me(Me.tableview_nota_credito_cxp.fldstatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ncf_nc_cxpNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fld_ncf_nc_cxpColumn)
        End Function
        
        Public Sub Setfld_ncf_nc_cxpNull()
            Me(Me.tableview_nota_credito_cxp.fld_ncf_nc_cxpColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ultimo_abonoNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fld_ultimo_abonoColumn)
        End Function
        
        Public Sub Setfld_ultimo_abonoNull()
            Me(Me.tableview_nota_credito_cxp.fld_ultimo_abonoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_chkNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fld_chkColumn)
        End Function
        
        Public Sub Setfld_chkNull()
            Me(Me.tableview_nota_credito_cxp.fld_chkColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldSupplierIDNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fldSupplierIDColumn)
        End Function
        
        Public Sub SetfldSupplierIDNull()
            Me(Me.tableview_nota_credito_cxp.fldSupplierIDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldCompanyNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fldCompanyColumn)
        End Function
        
        Public Sub SetfldCompanyNull()
            Me(Me.tableview_nota_credito_cxp.fldCompanyColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldAddressNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fldAddressColumn)
        End Function
        
        Public Sub SetfldAddressNull()
            Me(Me.tableview_nota_credito_cxp.fldAddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldPhoneNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fldPhoneColumn)
        End Function
        
        Public Sub SetfldPhoneNull()
            Me(Me.tableview_nota_credito_cxp.fldPhoneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldContactNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fldContactColumn)
        End Function
        
        Public Sub SetfldContactNull()
            Me(Me.tableview_nota_credito_cxp.fldContactColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldLimiteCRNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fldLimiteCRColumn)
        End Function
        
        Public Sub SetfldLimiteCRNull()
            Me(Me.tableview_nota_credito_cxp.fldLimiteCRColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldBalanceNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fldBalanceColumn)
        End Function
        
        Public Sub SetfldBalanceNull()
            Me(Me.tableview_nota_credito_cxp.fldBalanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_StatusNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fld_StatusColumn)
        End Function
        
        Public Sub Setfld_StatusNull()
            Me(Me.tableview_nota_credito_cxp.fld_StatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldByNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fldByColumn)
        End Function
        
        Public Sub SetfldByNull()
            Me(Me.tableview_nota_credito_cxp.fldByColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldfaxNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fldfaxColumn)
        End Function
        
        Public Sub SetfldfaxNull()
            Me(Me.tableview_nota_credito_cxp.fldfaxColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldcelNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fldcelColumn)
        End Function
        
        Public Sub SetfldcelNull()
            Me(Me.tableview_nota_credito_cxp.fldcelColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_clasificacionNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fld_clasificacionColumn)
        End Function
        
        Public Sub Setfld_clasificacionNull()
            Me(Me.tableview_nota_credito_cxp.fld_clasificacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cta_contableNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fld_cta_contableColumn)
        End Function
        
        Public Sub Setfld_cta_contableNull()
            Me(Me.tableview_nota_credito_cxp.fld_cta_contableColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefonoNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fld_telefonoColumn)
        End Function
        
        Public Sub Setfld_telefonoNull()
            Me(Me.tableview_nota_credito_cxp.fld_telefonoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_correoNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fld_correoColumn)
        End Function
        
        Public Sub Setfld_correoNull()
            Me(Me.tableview_nota_credito_cxp.fld_correoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bancoNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_credito_cxp.fld_bancoColumn)
        End Function
        
        Public Sub Setfld_bancoNull()
            Me(Me.tableview_nota_credito_cxp.fld_bancoColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_nota_credito_cxpRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As view_nota_credito_cxpRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As view_nota_credito_cxpRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As view_nota_credito_cxpRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_nota_debito_cxpDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id As DataColumn
        
        Private columnfld_proveedor_id_nd As DataColumn
        
        Private columnfld_fecha As DataColumn
        
        Private columnfld_concepto As DataColumn
        
        Private columnfld_monto As DataColumn
        
        Private columnfld_user As DataColumn
        
        Private columnfldstatus As DataColumn
        
        Private columnfld_doc_afectado As DataColumn
        
        Private columnfld_doc_afectado_id As DataColumn
        
        Private columnfld_ncf_nd_cxp As DataColumn
        
        Private columnfldSupplierID As DataColumn
        
        Private columnfldCompany As DataColumn
        
        Private columnfldAddress As DataColumn
        
        Private columnfldPhone As DataColumn
        
        Private columnfldContact As DataColumn
        
        Private columnfldLimiteCR As DataColumn
        
        Private columnfldBalance As DataColumn
        
        Private columnfld_Status As DataColumn
        
        Private columnfldBy As DataColumn
        
        Private columnfldfax As DataColumn
        
        Private columnfldcel As DataColumn
        
        Private columnfld_clasificacion As DataColumn
        
        Private columnfld_cta_contable As DataColumn
        
        Private columnfld_telefono As DataColumn
        
        Private columnfld_correo As DataColumn
        
        Private columnfld_banco As DataColumn
        
        Friend Sub New()
            MyBase.New("view_nota_debito_cxp")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_proveedor_id_ndColumn As DataColumn
            Get
                Return Me.columnfld_proveedor_id_nd
            End Get
        End Property
        
        Friend ReadOnly Property fld_fechaColumn As DataColumn
            Get
                Return Me.columnfld_fecha
            End Get
        End Property
        
        Friend ReadOnly Property fld_conceptoColumn As DataColumn
            Get
                Return Me.columnfld_concepto
            End Get
        End Property
        
        Friend ReadOnly Property fld_montoColumn As DataColumn
            Get
                Return Me.columnfld_monto
            End Get
        End Property
        
        Friend ReadOnly Property fld_userColumn As DataColumn
            Get
                Return Me.columnfld_user
            End Get
        End Property
        
        Friend ReadOnly Property fldstatusColumn As DataColumn
            Get
                Return Me.columnfldstatus
            End Get
        End Property
        
        Friend ReadOnly Property fld_doc_afectadoColumn As DataColumn
            Get
                Return Me.columnfld_doc_afectado
            End Get
        End Property
        
        Friend ReadOnly Property fld_doc_afectado_idColumn As DataColumn
            Get
                Return Me.columnfld_doc_afectado_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_ncf_nd_cxpColumn As DataColumn
            Get
                Return Me.columnfld_ncf_nd_cxp
            End Get
        End Property
        
        Friend ReadOnly Property fldSupplierIDColumn As DataColumn
            Get
                Return Me.columnfldSupplierID
            End Get
        End Property
        
        Friend ReadOnly Property fldCompanyColumn As DataColumn
            Get
                Return Me.columnfldCompany
            End Get
        End Property
        
        Friend ReadOnly Property fldAddressColumn As DataColumn
            Get
                Return Me.columnfldAddress
            End Get
        End Property
        
        Friend ReadOnly Property fldPhoneColumn As DataColumn
            Get
                Return Me.columnfldPhone
            End Get
        End Property
        
        Friend ReadOnly Property fldContactColumn As DataColumn
            Get
                Return Me.columnfldContact
            End Get
        End Property
        
        Friend ReadOnly Property fldLimiteCRColumn As DataColumn
            Get
                Return Me.columnfldLimiteCR
            End Get
        End Property
        
        Friend ReadOnly Property fldBalanceColumn As DataColumn
            Get
                Return Me.columnfldBalance
            End Get
        End Property
        
        Friend ReadOnly Property fld_StatusColumn As DataColumn
            Get
                Return Me.columnfld_Status
            End Get
        End Property
        
        Friend ReadOnly Property fldByColumn As DataColumn
            Get
                Return Me.columnfldBy
            End Get
        End Property
        
        Friend ReadOnly Property fldfaxColumn As DataColumn
            Get
                Return Me.columnfldfax
            End Get
        End Property
        
        Friend ReadOnly Property fldcelColumn As DataColumn
            Get
                Return Me.columnfldcel
            End Get
        End Property
        
        Friend ReadOnly Property fld_clasificacionColumn As DataColumn
            Get
                Return Me.columnfld_clasificacion
            End Get
        End Property
        
        Friend ReadOnly Property fld_cta_contableColumn As DataColumn
            Get
                Return Me.columnfld_cta_contable
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefonoColumn As DataColumn
            Get
                Return Me.columnfld_telefono
            End Get
        End Property
        
        Friend ReadOnly Property fld_correoColumn As DataColumn
            Get
                Return Me.columnfld_correo
            End Get
        End Property
        
        Friend ReadOnly Property fld_bancoColumn As DataColumn
            Get
                Return Me.columnfld_banco
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_nota_debito_cxpRow
            Get
                Return CType(Me.Rows(index),view_nota_debito_cxpRow)
            End Get
        End Property
        
        Public Event view_nota_debito_cxpRowChanged As view_nota_debito_cxpRowChangeEventHandler
        
        Public Event view_nota_debito_cxpRowChanging As view_nota_debito_cxpRowChangeEventHandler
        
        Public Event view_nota_debito_cxpRowDeleted As view_nota_debito_cxpRowChangeEventHandler
        
        Public Event view_nota_debito_cxpRowDeleting As view_nota_debito_cxpRowChangeEventHandler
        
        Public Overloads Sub Addview_nota_debito_cxpRow(ByVal row As view_nota_debito_cxpRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addview_nota_debito_cxpRow( _
                    ByVal fld_id As Double,  _
                    ByVal fld_proveedor_id_nd As Integer,  _
                    ByVal fld_fecha As Date,  _
                    ByVal fld_concepto As String,  _
                    ByVal fld_monto As Double,  _
                    ByVal fld_user As String,  _
                    ByVal fldstatus As String,  _
                    ByVal fld_doc_afectado As String,  _
                    ByVal fld_doc_afectado_id As Integer,  _
                    ByVal fld_ncf_nd_cxp As String,  _
                    ByVal fldCompany As String,  _
                    ByVal fldAddress As String,  _
                    ByVal fldPhone As String,  _
                    ByVal fldContact As String,  _
                    ByVal fldLimiteCR As Double,  _
                    ByVal fldBalance As Double,  _
                    ByVal fld_Status As String,  _
                    ByVal fldBy As String,  _
                    ByVal fldfax As String,  _
                    ByVal fldcel As String,  _
                    ByVal fld_clasificacion As String,  _
                    ByVal fld_cta_contable As String,  _
                    ByVal fld_telefono As String,  _
                    ByVal fld_correo As String,  _
                    ByVal fld_banco As String) As view_nota_debito_cxpRow
            Dim rowview_nota_debito_cxpRow As view_nota_debito_cxpRow = CType(Me.NewRow,view_nota_debito_cxpRow)
            rowview_nota_debito_cxpRow.ItemArray = New Object() {fld_id, fld_proveedor_id_nd, fld_fecha, fld_concepto, fld_monto, fld_user, fldstatus, fld_doc_afectado, fld_doc_afectado_id, fld_ncf_nd_cxp, Nothing, fldCompany, fldAddress, fldPhone, fldContact, fldLimiteCR, fldBalance, fld_Status, fldBy, fldfax, fldcel, fld_clasificacion, fld_cta_contable, fld_telefono, fld_correo, fld_banco}
            Me.Rows.Add(rowview_nota_debito_cxpRow)
            Return rowview_nota_debito_cxpRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As view_nota_debito_cxpDataTable = CType(MyBase.Clone,view_nota_debito_cxpDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New view_nota_debito_cxpDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnfld_proveedor_id_nd = Me.Columns("fld_proveedor_id_nd")
            Me.columnfld_fecha = Me.Columns("fld_fecha")
            Me.columnfld_concepto = Me.Columns("fld_concepto")
            Me.columnfld_monto = Me.Columns("fld_monto")
            Me.columnfld_user = Me.Columns("fld_user")
            Me.columnfldstatus = Me.Columns("fldstatus")
            Me.columnfld_doc_afectado = Me.Columns("fld_doc_afectado")
            Me.columnfld_doc_afectado_id = Me.Columns("fld_doc_afectado_id")
            Me.columnfld_ncf_nd_cxp = Me.Columns("fld_ncf_nd_cxp")
            Me.columnfldSupplierID = Me.Columns("fldSupplierID")
            Me.columnfldCompany = Me.Columns("fldCompany")
            Me.columnfldAddress = Me.Columns("fldAddress")
            Me.columnfldPhone = Me.Columns("fldPhone")
            Me.columnfldContact = Me.Columns("fldContact")
            Me.columnfldLimiteCR = Me.Columns("fldLimiteCR")
            Me.columnfldBalance = Me.Columns("fldBalance")
            Me.columnfld_Status = Me.Columns("fld_Status")
            Me.columnfldBy = Me.Columns("fldBy")
            Me.columnfldfax = Me.Columns("fldfax")
            Me.columnfldcel = Me.Columns("fldcel")
            Me.columnfld_clasificacion = Me.Columns("fld_clasificacion")
            Me.columnfld_cta_contable = Me.Columns("fld_cta_contable")
            Me.columnfld_telefono = Me.Columns("fld_telefono")
            Me.columnfld_correo = Me.Columns("fld_correo")
            Me.columnfld_banco = Me.Columns("fld_banco")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnfld_proveedor_id_nd = New DataColumn("fld_proveedor_id_nd", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_proveedor_id_nd)
            Me.columnfld_fecha = New DataColumn("fld_fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha)
            Me.columnfld_concepto = New DataColumn("fld_concepto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_concepto)
            Me.columnfld_monto = New DataColumn("fld_monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto)
            Me.columnfld_user = New DataColumn("fld_user", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_user)
            Me.columnfldstatus = New DataColumn("fldstatus", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldstatus)
            Me.columnfld_doc_afectado = New DataColumn("fld_doc_afectado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_doc_afectado)
            Me.columnfld_doc_afectado_id = New DataColumn("fld_doc_afectado_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_doc_afectado_id)
            Me.columnfld_ncf_nd_cxp = New DataColumn("fld_ncf_nd_cxp", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ncf_nd_cxp)
            Me.columnfldSupplierID = New DataColumn("fldSupplierID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldSupplierID)
            Me.columnfldCompany = New DataColumn("fldCompany", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldCompany)
            Me.columnfldAddress = New DataColumn("fldAddress", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldAddress)
            Me.columnfldPhone = New DataColumn("fldPhone", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldPhone)
            Me.columnfldContact = New DataColumn("fldContact", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldContact)
            Me.columnfldLimiteCR = New DataColumn("fldLimiteCR", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldLimiteCR)
            Me.columnfldBalance = New DataColumn("fldBalance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldBalance)
            Me.columnfld_Status = New DataColumn("fld_Status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Status)
            Me.columnfldBy = New DataColumn("fldBy", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldBy)
            Me.columnfldfax = New DataColumn("fldfax", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldfax)
            Me.columnfldcel = New DataColumn("fldcel", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldcel)
            Me.columnfld_clasificacion = New DataColumn("fld_clasificacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_clasificacion)
            Me.columnfld_cta_contable = New DataColumn("fld_cta_contable", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cta_contable)
            Me.columnfld_telefono = New DataColumn("fld_telefono", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono)
            Me.columnfld_correo = New DataColumn("fld_correo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_correo)
            Me.columnfld_banco = New DataColumn("fld_banco", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_banco)
            Me.columnfldSupplierID.AutoIncrement = true
        End Sub
        
        Public Function Newview_nota_debito_cxpRow() As view_nota_debito_cxpRow
            Return CType(Me.NewRow,view_nota_debito_cxpRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New view_nota_debito_cxpRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(view_nota_debito_cxpRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_nota_debito_cxpRowChangedEvent) Is Nothing) Then
                RaiseEvent view_nota_debito_cxpRowChanged(Me, New view_nota_debito_cxpRowChangeEvent(CType(e.Row,view_nota_debito_cxpRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_nota_debito_cxpRowChangingEvent) Is Nothing) Then
                RaiseEvent view_nota_debito_cxpRowChanging(Me, New view_nota_debito_cxpRowChangeEvent(CType(e.Row,view_nota_debito_cxpRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_nota_debito_cxpRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_nota_debito_cxpRowDeleted(Me, New view_nota_debito_cxpRowChangeEvent(CType(e.Row,view_nota_debito_cxpRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_nota_debito_cxpRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_nota_debito_cxpRowDeleting(Me, New view_nota_debito_cxpRowChangeEvent(CType(e.Row,view_nota_debito_cxpRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeview_nota_debito_cxpRow(ByVal row As view_nota_debito_cxpRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_nota_debito_cxpRow
        Inherits DataRow
        
        Private tableview_nota_debito_cxp As view_nota_debito_cxpDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_nota_debito_cxp = CType(Me.Table,view_nota_debito_cxpDataTable)
        End Sub
        
        Public Property fld_id As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fld_idColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fld_idColumn) = value
            End Set
        End Property
        
        Public Property fld_proveedor_id_nd As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fld_proveedor_id_ndColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fld_proveedor_id_ndColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fld_fechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fld_fechaColumn) = value
            End Set
        End Property
        
        Public Property fld_concepto As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fld_conceptoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fld_conceptoColumn) = value
            End Set
        End Property
        
        Public Property fld_monto As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fld_montoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fld_montoColumn) = value
            End Set
        End Property
        
        Public Property fld_user As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fld_userColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fld_userColumn) = value
            End Set
        End Property
        
        Public Property fldstatus As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fldstatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fldstatusColumn) = value
            End Set
        End Property
        
        Public Property fld_doc_afectado As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fld_doc_afectadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fld_doc_afectadoColumn) = value
            End Set
        End Property
        
        Public Property fld_doc_afectado_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fld_doc_afectado_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fld_doc_afectado_idColumn) = value
            End Set
        End Property
        
        Public Property fld_ncf_nd_cxp As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fld_ncf_nd_cxpColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fld_ncf_nd_cxpColumn) = value
            End Set
        End Property
        
        Public Property fldSupplierID As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fldSupplierIDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fldSupplierIDColumn) = value
            End Set
        End Property
        
        Public Property fldCompany As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fldCompanyColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fldCompanyColumn) = value
            End Set
        End Property
        
        Public Property fldAddress As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fldAddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fldAddressColumn) = value
            End Set
        End Property
        
        Public Property fldPhone As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fldPhoneColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fldPhoneColumn) = value
            End Set
        End Property
        
        Public Property fldContact As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fldContactColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fldContactColumn) = value
            End Set
        End Property
        
        Public Property fldLimiteCR As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fldLimiteCRColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fldLimiteCRColumn) = value
            End Set
        End Property
        
        Public Property fldBalance As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fldBalanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fldBalanceColumn) = value
            End Set
        End Property
        
        Public Property fld_Status As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fld_StatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fld_StatusColumn) = value
            End Set
        End Property
        
        Public Property fldBy As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fldByColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fldByColumn) = value
            End Set
        End Property
        
        Public Property fldfax As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fldfaxColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fldfaxColumn) = value
            End Set
        End Property
        
        Public Property fldcel As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fldcelColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fldcelColumn) = value
            End Set
        End Property
        
        Public Property fld_clasificacion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fld_clasificacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fld_clasificacionColumn) = value
            End Set
        End Property
        
        Public Property fld_cta_contable As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fld_cta_contableColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fld_cta_contableColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fld_telefonoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fld_telefonoColumn) = value
            End Set
        End Property
        
        Public Property fld_correo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fld_correoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fld_correoColumn) = value
            End Set
        End Property
        
        Public Property fld_banco As String
            Get
                Try 
                    Return CType(Me(Me.tableview_nota_debito_cxp.fld_bancoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_nota_debito_cxp.fld_bancoColumn) = value
            End Set
        End Property
        
        Public Function Isfld_idNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fld_idColumn)
        End Function
        
        Public Sub Setfld_idNull()
            Me(Me.tableview_nota_debito_cxp.fld_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_proveedor_id_ndNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fld_proveedor_id_ndColumn)
        End Function
        
        Public Sub Setfld_proveedor_id_ndNull()
            Me(Me.tableview_nota_debito_cxp.fld_proveedor_id_ndColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fechaNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fld_fechaColumn)
        End Function
        
        Public Sub Setfld_fechaNull()
            Me(Me.tableview_nota_debito_cxp.fld_fechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_conceptoNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fld_conceptoColumn)
        End Function
        
        Public Sub Setfld_conceptoNull()
            Me(Me.tableview_nota_debito_cxp.fld_conceptoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_montoNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fld_montoColumn)
        End Function
        
        Public Sub Setfld_montoNull()
            Me(Me.tableview_nota_debito_cxp.fld_montoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_userNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fld_userColumn)
        End Function
        
        Public Sub Setfld_userNull()
            Me(Me.tableview_nota_debito_cxp.fld_userColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldstatusNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fldstatusColumn)
        End Function
        
        Public Sub SetfldstatusNull()
            Me(Me.tableview_nota_debito_cxp.fldstatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_doc_afectadoNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fld_doc_afectadoColumn)
        End Function
        
        Public Sub Setfld_doc_afectadoNull()
            Me(Me.tableview_nota_debito_cxp.fld_doc_afectadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_doc_afectado_idNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fld_doc_afectado_idColumn)
        End Function
        
        Public Sub Setfld_doc_afectado_idNull()
            Me(Me.tableview_nota_debito_cxp.fld_doc_afectado_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ncf_nd_cxpNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fld_ncf_nd_cxpColumn)
        End Function
        
        Public Sub Setfld_ncf_nd_cxpNull()
            Me(Me.tableview_nota_debito_cxp.fld_ncf_nd_cxpColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldSupplierIDNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fldSupplierIDColumn)
        End Function
        
        Public Sub SetfldSupplierIDNull()
            Me(Me.tableview_nota_debito_cxp.fldSupplierIDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldCompanyNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fldCompanyColumn)
        End Function
        
        Public Sub SetfldCompanyNull()
            Me(Me.tableview_nota_debito_cxp.fldCompanyColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldAddressNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fldAddressColumn)
        End Function
        
        Public Sub SetfldAddressNull()
            Me(Me.tableview_nota_debito_cxp.fldAddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldPhoneNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fldPhoneColumn)
        End Function
        
        Public Sub SetfldPhoneNull()
            Me(Me.tableview_nota_debito_cxp.fldPhoneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldContactNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fldContactColumn)
        End Function
        
        Public Sub SetfldContactNull()
            Me(Me.tableview_nota_debito_cxp.fldContactColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldLimiteCRNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fldLimiteCRColumn)
        End Function
        
        Public Sub SetfldLimiteCRNull()
            Me(Me.tableview_nota_debito_cxp.fldLimiteCRColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldBalanceNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fldBalanceColumn)
        End Function
        
        Public Sub SetfldBalanceNull()
            Me(Me.tableview_nota_debito_cxp.fldBalanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_StatusNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fld_StatusColumn)
        End Function
        
        Public Sub Setfld_StatusNull()
            Me(Me.tableview_nota_debito_cxp.fld_StatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldByNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fldByColumn)
        End Function
        
        Public Sub SetfldByNull()
            Me(Me.tableview_nota_debito_cxp.fldByColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldfaxNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fldfaxColumn)
        End Function
        
        Public Sub SetfldfaxNull()
            Me(Me.tableview_nota_debito_cxp.fldfaxColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldcelNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fldcelColumn)
        End Function
        
        Public Sub SetfldcelNull()
            Me(Me.tableview_nota_debito_cxp.fldcelColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_clasificacionNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fld_clasificacionColumn)
        End Function
        
        Public Sub Setfld_clasificacionNull()
            Me(Me.tableview_nota_debito_cxp.fld_clasificacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cta_contableNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fld_cta_contableColumn)
        End Function
        
        Public Sub Setfld_cta_contableNull()
            Me(Me.tableview_nota_debito_cxp.fld_cta_contableColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefonoNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fld_telefonoColumn)
        End Function
        
        Public Sub Setfld_telefonoNull()
            Me(Me.tableview_nota_debito_cxp.fld_telefonoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_correoNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fld_correoColumn)
        End Function
        
        Public Sub Setfld_correoNull()
            Me(Me.tableview_nota_debito_cxp.fld_correoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bancoNull() As Boolean
            Return Me.IsNull(Me.tableview_nota_debito_cxp.fld_bancoColumn)
        End Function
        
        Public Sub Setfld_bancoNull()
            Me(Me.tableview_nota_debito_cxp.fld_bancoColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_nota_debito_cxpRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As view_nota_debito_cxpRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As view_nota_debito_cxpRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As view_nota_debito_cxpRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_ahorrosDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnID As DataColumn
        
        Private columnCuentaNo As DataColumn
        
        Private columnIDCliente As DataColumn
        
        Private columnCategoria As DataColumn
        
        Private columnFechaInicia As DataColumn
        
        Private columnFechaTermina As DataColumn
        
        Private columnTasaInteres As DataColumn
        
        Private columnMonto As DataColumn
        
        Private columnSaldo As DataColumn
        
        Private columnUsuario As DataColumn
        
        Private columnNotas As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_ahorros")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property IDColumn As DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        Friend ReadOnly Property CuentaNoColumn As DataColumn
            Get
                Return Me.columnCuentaNo
            End Get
        End Property
        
        Friend ReadOnly Property IDClienteColumn As DataColumn
            Get
                Return Me.columnIDCliente
            End Get
        End Property
        
        Friend ReadOnly Property CategoriaColumn As DataColumn
            Get
                Return Me.columnCategoria
            End Get
        End Property
        
        Friend ReadOnly Property FechaIniciaColumn As DataColumn
            Get
                Return Me.columnFechaInicia
            End Get
        End Property
        
        Friend ReadOnly Property FechaTerminaColumn As DataColumn
            Get
                Return Me.columnFechaTermina
            End Get
        End Property
        
        Friend ReadOnly Property TasaInteresColumn As DataColumn
            Get
                Return Me.columnTasaInteres
            End Get
        End Property
        
        Friend ReadOnly Property MontoColumn As DataColumn
            Get
                Return Me.columnMonto
            End Get
        End Property
        
        Friend ReadOnly Property SaldoColumn As DataColumn
            Get
                Return Me.columnSaldo
            End Get
        End Property
        
        Friend ReadOnly Property UsuarioColumn As DataColumn
            Get
                Return Me.columnUsuario
            End Get
        End Property
        
        Friend ReadOnly Property NotasColumn As DataColumn
            Get
                Return Me.columnNotas
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_ahorrosRow
            Get
                Return CType(Me.Rows(index),tbl_ahorrosRow)
            End Get
        End Property
        
        Public Event tbl_ahorrosRowChanged As tbl_ahorrosRowChangeEventHandler
        
        Public Event tbl_ahorrosRowChanging As tbl_ahorrosRowChangeEventHandler
        
        Public Event tbl_ahorrosRowDeleted As tbl_ahorrosRowChangeEventHandler
        
        Public Event tbl_ahorrosRowDeleting As tbl_ahorrosRowChangeEventHandler
        
        Public Overloads Sub Addtbl_ahorrosRow(ByVal row As tbl_ahorrosRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_ahorrosRow(ByVal CuentaNo As String, ByVal IDCliente As Integer, ByVal Categoria As Integer, ByVal FechaInicia As Date, ByVal FechaTermina As Date, ByVal TasaInteres As Double, ByVal Monto As Double, ByVal Saldo As Double, ByVal Usuario As String, ByVal Notas As String) As tbl_ahorrosRow
            Dim rowtbl_ahorrosRow As tbl_ahorrosRow = CType(Me.NewRow,tbl_ahorrosRow)
            rowtbl_ahorrosRow.ItemArray = New Object() {Nothing, CuentaNo, IDCliente, Categoria, FechaInicia, FechaTermina, TasaInteres, Monto, Saldo, Usuario, Notas}
            Me.Rows.Add(rowtbl_ahorrosRow)
            Return rowtbl_ahorrosRow
        End Function
        
        Public Function FindByID(ByVal ID As Integer) As tbl_ahorrosRow
            Return CType(Me.Rows.Find(New Object() {ID}),tbl_ahorrosRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_ahorrosDataTable = CType(MyBase.Clone,tbl_ahorrosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_ahorrosDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnID = Me.Columns("ID")
            Me.columnCuentaNo = Me.Columns("CuentaNo")
            Me.columnIDCliente = Me.Columns("IDCliente")
            Me.columnCategoria = Me.Columns("Categoria")
            Me.columnFechaInicia = Me.Columns("FechaInicia")
            Me.columnFechaTermina = Me.Columns("FechaTermina")
            Me.columnTasaInteres = Me.Columns("TasaInteres")
            Me.columnMonto = Me.Columns("Monto")
            Me.columnSaldo = Me.Columns("Saldo")
            Me.columnUsuario = Me.Columns("Usuario")
            Me.columnNotas = Me.Columns("Notas")
        End Sub
        
        Private Sub InitClass()
            Me.columnID = New DataColumn("ID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnID)
            Me.columnCuentaNo = New DataColumn("CuentaNo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCuentaNo)
            Me.columnIDCliente = New DataColumn("IDCliente", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnIDCliente)
            Me.columnCategoria = New DataColumn("Categoria", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCategoria)
            Me.columnFechaInicia = New DataColumn("FechaInicia", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaInicia)
            Me.columnFechaTermina = New DataColumn("FechaTermina", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaTermina)
            Me.columnTasaInteres = New DataColumn("TasaInteres", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTasaInteres)
            Me.columnMonto = New DataColumn("Monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMonto)
            Me.columnSaldo = New DataColumn("Saldo", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSaldo)
            Me.columnUsuario = New DataColumn("Usuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnUsuario)
            Me.columnNotas = New DataColumn("Notas", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNotas)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey18", New DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
        End Sub
        
        Public Function Newtbl_ahorrosRow() As tbl_ahorrosRow
            Return CType(Me.NewRow,tbl_ahorrosRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_ahorrosRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_ahorrosRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_ahorrosRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_ahorrosRowChanged(Me, New tbl_ahorrosRowChangeEvent(CType(e.Row,tbl_ahorrosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_ahorrosRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_ahorrosRowChanging(Me, New tbl_ahorrosRowChangeEvent(CType(e.Row,tbl_ahorrosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_ahorrosRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_ahorrosRowDeleted(Me, New tbl_ahorrosRowChangeEvent(CType(e.Row,tbl_ahorrosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_ahorrosRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_ahorrosRowDeleting(Me, New tbl_ahorrosRowChangeEvent(CType(e.Row,tbl_ahorrosRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_ahorrosRow(ByVal row As tbl_ahorrosRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_ahorrosRow
        Inherits DataRow
        
        Private tabletbl_ahorros As tbl_ahorrosDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_ahorros = CType(Me.Table,tbl_ahorrosDataTable)
        End Sub
        
        Public Property ID As Integer
            Get
                Return CType(Me(Me.tabletbl_ahorros.IDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_ahorros.IDColumn) = value
            End Set
        End Property
        
        Public Property CuentaNo As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ahorros.CuentaNoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ahorros.CuentaNoColumn) = value
            End Set
        End Property
        
        Public Property IDCliente As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ahorros.IDClienteColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ahorros.IDClienteColumn) = value
            End Set
        End Property
        
        Public Property Categoria As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ahorros.CategoriaColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ahorros.CategoriaColumn) = value
            End Set
        End Property
        
        Public Property FechaInicia As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ahorros.FechaIniciaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ahorros.FechaIniciaColumn) = value
            End Set
        End Property
        
        Public Property FechaTermina As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ahorros.FechaTerminaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ahorros.FechaTerminaColumn) = value
            End Set
        End Property
        
        Public Property TasaInteres As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ahorros.TasaInteresColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ahorros.TasaInteresColumn) = value
            End Set
        End Property
        
        Public Property Monto As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ahorros.MontoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ahorros.MontoColumn) = value
            End Set
        End Property
        
        Public Property Saldo As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ahorros.SaldoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ahorros.SaldoColumn) = value
            End Set
        End Property
        
        Public Property Usuario As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ahorros.UsuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ahorros.UsuarioColumn) = value
            End Set
        End Property
        
        Public Property Notas As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ahorros.NotasColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ahorros.NotasColumn) = value
            End Set
        End Property
        
        Public Function IsCuentaNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ahorros.CuentaNoColumn)
        End Function
        
        Public Sub SetCuentaNoNull()
            Me(Me.tabletbl_ahorros.CuentaNoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsIDClienteNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ahorros.IDClienteColumn)
        End Function
        
        Public Sub SetIDClienteNull()
            Me(Me.tabletbl_ahorros.IDClienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCategoriaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ahorros.CategoriaColumn)
        End Function
        
        Public Sub SetCategoriaNull()
            Me(Me.tabletbl_ahorros.CategoriaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaIniciaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ahorros.FechaIniciaColumn)
        End Function
        
        Public Sub SetFechaIniciaNull()
            Me(Me.tabletbl_ahorros.FechaIniciaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaTerminaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ahorros.FechaTerminaColumn)
        End Function
        
        Public Sub SetFechaTerminaNull()
            Me(Me.tabletbl_ahorros.FechaTerminaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTasaInteresNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ahorros.TasaInteresColumn)
        End Function
        
        Public Sub SetTasaInteresNull()
            Me(Me.tabletbl_ahorros.TasaInteresColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMontoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ahorros.MontoColumn)
        End Function
        
        Public Sub SetMontoNull()
            Me(Me.tabletbl_ahorros.MontoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSaldoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ahorros.SaldoColumn)
        End Function
        
        Public Sub SetSaldoNull()
            Me(Me.tabletbl_ahorros.SaldoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsUsuarioNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ahorros.UsuarioColumn)
        End Function
        
        Public Sub SetUsuarioNull()
            Me(Me.tabletbl_ahorros.UsuarioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNotasNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ahorros.NotasColumn)
        End Function
        
        Public Sub SetNotasNull()
            Me(Me.tabletbl_ahorros.NotasColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_ahorrosRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_ahorrosRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_ahorrosRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_ahorrosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_ahorros_categoriasDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnID As DataColumn
        
        Private columnDescripcion As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_ahorros_categorias")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property IDColumn As DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        Friend ReadOnly Property DescripcionColumn As DataColumn
            Get
                Return Me.columnDescripcion
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_ahorros_categoriasRow
            Get
                Return CType(Me.Rows(index),tbl_ahorros_categoriasRow)
            End Get
        End Property
        
        Public Event tbl_ahorros_categoriasRowChanged As tbl_ahorros_categoriasRowChangeEventHandler
        
        Public Event tbl_ahorros_categoriasRowChanging As tbl_ahorros_categoriasRowChangeEventHandler
        
        Public Event tbl_ahorros_categoriasRowDeleted As tbl_ahorros_categoriasRowChangeEventHandler
        
        Public Event tbl_ahorros_categoriasRowDeleting As tbl_ahorros_categoriasRowChangeEventHandler
        
        Public Overloads Sub Addtbl_ahorros_categoriasRow(ByVal row As tbl_ahorros_categoriasRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_ahorros_categoriasRow(ByVal Descripcion As String) As tbl_ahorros_categoriasRow
            Dim rowtbl_ahorros_categoriasRow As tbl_ahorros_categoriasRow = CType(Me.NewRow,tbl_ahorros_categoriasRow)
            rowtbl_ahorros_categoriasRow.ItemArray = New Object() {Nothing, Descripcion}
            Me.Rows.Add(rowtbl_ahorros_categoriasRow)
            Return rowtbl_ahorros_categoriasRow
        End Function
        
        Public Function FindByID(ByVal ID As Integer) As tbl_ahorros_categoriasRow
            Return CType(Me.Rows.Find(New Object() {ID}),tbl_ahorros_categoriasRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_ahorros_categoriasDataTable = CType(MyBase.Clone,tbl_ahorros_categoriasDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_ahorros_categoriasDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnID = Me.Columns("ID")
            Me.columnDescripcion = Me.Columns("Descripcion")
        End Sub
        
        Private Sub InitClass()
            Me.columnID = New DataColumn("ID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnID)
            Me.columnDescripcion = New DataColumn("Descripcion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDescripcion)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey19", New DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
        End Sub
        
        Public Function Newtbl_ahorros_categoriasRow() As tbl_ahorros_categoriasRow
            Return CType(Me.NewRow,tbl_ahorros_categoriasRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_ahorros_categoriasRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_ahorros_categoriasRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_ahorros_categoriasRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_ahorros_categoriasRowChanged(Me, New tbl_ahorros_categoriasRowChangeEvent(CType(e.Row,tbl_ahorros_categoriasRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_ahorros_categoriasRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_ahorros_categoriasRowChanging(Me, New tbl_ahorros_categoriasRowChangeEvent(CType(e.Row,tbl_ahorros_categoriasRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_ahorros_categoriasRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_ahorros_categoriasRowDeleted(Me, New tbl_ahorros_categoriasRowChangeEvent(CType(e.Row,tbl_ahorros_categoriasRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_ahorros_categoriasRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_ahorros_categoriasRowDeleting(Me, New tbl_ahorros_categoriasRowChangeEvent(CType(e.Row,tbl_ahorros_categoriasRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_ahorros_categoriasRow(ByVal row As tbl_ahorros_categoriasRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_ahorros_categoriasRow
        Inherits DataRow
        
        Private tabletbl_ahorros_categorias As tbl_ahorros_categoriasDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_ahorros_categorias = CType(Me.Table,tbl_ahorros_categoriasDataTable)
        End Sub
        
        Public Property ID As Integer
            Get
                Return CType(Me(Me.tabletbl_ahorros_categorias.IDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_ahorros_categorias.IDColumn) = value
            End Set
        End Property
        
        Public Property Descripcion As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ahorros_categorias.DescripcionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ahorros_categorias.DescripcionColumn) = value
            End Set
        End Property
        
        Public Function IsDescripcionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ahorros_categorias.DescripcionColumn)
        End Function
        
        Public Sub SetDescripcionNull()
            Me(Me.tabletbl_ahorros_categorias.DescripcionColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_ahorros_categoriasRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_ahorros_categoriasRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_ahorros_categoriasRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_ahorros_categoriasRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_ahorrosDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id As DataColumn
        
        Private columnTipoDocumento As DataColumn
        
        Private columnfld_FullName As DataColumn
        
        Private columnfld_apodo As DataColumn
        
        Private columnfld_Identity As DataColumn
        
        Private columnfld_Phone As DataColumn
        
        Private columnfld_Phone2 As DataColumn
        
        Private columnfld_Address As DataColumn
        
        Private columnfld_City As DataColumn
        
        Private columnfld_Status As DataColumn
        
        Private columnfld_bce As DataColumn
        
        Private columnfld_cod_zona As DataColumn
        
        Private columnfld_zona As DataColumn
        
        Private columnfld_nombre_con As DataColumn
        
        Private columnfld_apodo_con As DataColumn
        
        Private columnfld_cedula_con As DataColumn
        
        Private columnfld_telefono_con As DataColumn
        
        Private columnfld_celular_con As DataColumn
        
        Private columnfld_ref_personales_cliente As DataColumn
        
        Private columnfld_ref_comerciales_cliente As DataColumn
        
        Private columnfld_nombre_gar As DataColumn
        
        Private columnfld_apodo_gar As DataColumn
        
        Private columnfld_cedula_gar As DataColumn
        
        Private columnfld_telefono_gar As DataColumn
        
        Private columnfld_celular_gar As DataColumn
        
        Private columnfld_direccion_gar As DataColumn
        
        Private columnfld_ciudad_gar As DataColumn
        
        Private columnfld_ref_personales_gar As DataColumn
        
        Private columnfld_ref_comerciales_gar As DataColumn
        
        Private columnfld_ingresos_mesuales As DataColumn
        
        Private columnfld_nombre_banco1 As DataColumn
        
        Private columnfld_cuenta_banco1 As DataColumn
        
        Private columnfld_nombre_banco2 As DataColumn
        
        Private columnfld_cuenta_banco2 As DataColumn
        
        Private columnfld_otra_informacion As DataColumn
        
        Private columnfld_nombre_con_gar As DataColumn
        
        Private columnfld_apodo_con_gar As DataColumn
        
        Private columnfld_cedula_con_gar As DataColumn
        
        Private columnfld_telefono_con_gar As DataColumn
        
        Private columnfld_celular_con_gar As DataColumn
        
        Private columnfld_edad As DataColumn
        
        Private columnfld_estado_civil As DataColumn
        
        Private columnfld_edad_gar As DataColumn
        
        Private columnfld_estado_civil_gar As DataColumn
        
        Private columnfld_ocupacion_cliente As DataColumn
        
        Private columnfld_ocupacion_gar As DataColumn
        
        Private columnfld_sector As DataColumn
        
        Private columnfld_categoria As DataColumn
        
        Private columnfld_limite As DataColumn
        
        Private columnPuesto As DataColumn
        
        Private columnTimpoTrabajo As DataColumn
        
        Private columnReferidoPor As DataColumn
        
        Private columnOriundo As DataColumn
        
        Private columnID As DataColumn
        
        Private columnCuentaNo As DataColumn
        
        Private columnIDCliente As DataColumn
        
        Private columnCategoria As DataColumn
        
        Private columnFechaInicia As DataColumn
        
        Private columnMeses As DataColumn
        
        Private columnFechaTermina As DataColumn
        
        Private columnModoPagoInteres As DataColumn
        
        Private columnTasaInteres As DataColumn
        
        Private columnPenalizar As DataColumn
        
        Private columnPorcientoAPenalizar As DataColumn
        
        Private columnMonto As DataColumn
        
        Private columnSaldo As DataColumn
        
        Private columnUsuario As DataColumn
        
        Private columnNotas As DataColumn
        
        Private columnDescripcion As DataColumn
        
        Private columnSaldoInteres As DataColumn
        
        Friend Sub New()
            MyBase.New("view_ahorros")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property TipoDocumentoColumn As DataColumn
            Get
                Return Me.columnTipoDocumento
            End Get
        End Property
        
        Friend ReadOnly Property fld_FullNameColumn As DataColumn
            Get
                Return Me.columnfld_FullName
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodoColumn As DataColumn
            Get
                Return Me.columnfld_apodo
            End Get
        End Property
        
        Friend ReadOnly Property fld_IdentityColumn As DataColumn
            Get
                Return Me.columnfld_Identity
            End Get
        End Property
        
        Friend ReadOnly Property fld_PhoneColumn As DataColumn
            Get
                Return Me.columnfld_Phone
            End Get
        End Property
        
        Friend ReadOnly Property fld_Phone2Column As DataColumn
            Get
                Return Me.columnfld_Phone2
            End Get
        End Property
        
        Friend ReadOnly Property fld_AddressColumn As DataColumn
            Get
                Return Me.columnfld_Address
            End Get
        End Property
        
        Friend ReadOnly Property fld_CityColumn As DataColumn
            Get
                Return Me.columnfld_City
            End Get
        End Property
        
        Friend ReadOnly Property fld_StatusColumn As DataColumn
            Get
                Return Me.columnfld_Status
            End Get
        End Property
        
        Friend ReadOnly Property fld_bceColumn As DataColumn
            Get
                Return Me.columnfld_bce
            End Get
        End Property
        
        Friend ReadOnly Property fld_cod_zonaColumn As DataColumn
            Get
                Return Me.columnfld_cod_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_zonaColumn As DataColumn
            Get
                Return Me.columnfld_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_conColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_conColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_conColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_conColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_conColumn As DataColumn
            Get
                Return Me.columnfld_celular_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_direccion_garColumn As DataColumn
            Get
                Return Me.columnfld_direccion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ciudad_garColumn As DataColumn
            Get
                Return Me.columnfld_ciudad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ingresos_mesualesColumn As DataColumn
            Get
                Return Me.columnfld_ingresos_mesuales
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco1Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco1Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco2Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco2Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_otra_informacionColumn As DataColumn
            Get
                Return Me.columnfld_otra_informacion
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_con_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_con_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_con_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_con_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_con_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_edadColumn As DataColumn
            Get
                Return Me.columnfld_edad
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civilColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil
            End Get
        End Property
        
        Friend ReadOnly Property fld_edad_garColumn As DataColumn
            Get
                Return Me.columnfld_edad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civil_garColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ocupacion_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ocupacion_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ocupacion_garColumn As DataColumn
            Get
                Return Me.columnfld_ocupacion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_sectorColumn As DataColumn
            Get
                Return Me.columnfld_sector
            End Get
        End Property
        
        Friend ReadOnly Property fld_categoriaColumn As DataColumn
            Get
                Return Me.columnfld_categoria
            End Get
        End Property
        
        Friend ReadOnly Property fld_limiteColumn As DataColumn
            Get
                Return Me.columnfld_limite
            End Get
        End Property
        
        Friend ReadOnly Property PuestoColumn As DataColumn
            Get
                Return Me.columnPuesto
            End Get
        End Property
        
        Friend ReadOnly Property TimpoTrabajoColumn As DataColumn
            Get
                Return Me.columnTimpoTrabajo
            End Get
        End Property
        
        Friend ReadOnly Property ReferidoPorColumn As DataColumn
            Get
                Return Me.columnReferidoPor
            End Get
        End Property
        
        Friend ReadOnly Property OriundoColumn As DataColumn
            Get
                Return Me.columnOriundo
            End Get
        End Property
        
        Friend ReadOnly Property IDColumn As DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        Friend ReadOnly Property CuentaNoColumn As DataColumn
            Get
                Return Me.columnCuentaNo
            End Get
        End Property
        
        Friend ReadOnly Property IDClienteColumn As DataColumn
            Get
                Return Me.columnIDCliente
            End Get
        End Property
        
        Friend ReadOnly Property CategoriaColumn As DataColumn
            Get
                Return Me.columnCategoria
            End Get
        End Property
        
        Friend ReadOnly Property FechaIniciaColumn As DataColumn
            Get
                Return Me.columnFechaInicia
            End Get
        End Property
        
        Friend ReadOnly Property MesesColumn As DataColumn
            Get
                Return Me.columnMeses
            End Get
        End Property
        
        Friend ReadOnly Property FechaTerminaColumn As DataColumn
            Get
                Return Me.columnFechaTermina
            End Get
        End Property
        
        Friend ReadOnly Property ModoPagoInteresColumn As DataColumn
            Get
                Return Me.columnModoPagoInteres
            End Get
        End Property
        
        Friend ReadOnly Property TasaInteresColumn As DataColumn
            Get
                Return Me.columnTasaInteres
            End Get
        End Property
        
        Friend ReadOnly Property PenalizarColumn As DataColumn
            Get
                Return Me.columnPenalizar
            End Get
        End Property
        
        Friend ReadOnly Property PorcientoAPenalizarColumn As DataColumn
            Get
                Return Me.columnPorcientoAPenalizar
            End Get
        End Property
        
        Friend ReadOnly Property MontoColumn As DataColumn
            Get
                Return Me.columnMonto
            End Get
        End Property
        
        Friend ReadOnly Property SaldoColumn As DataColumn
            Get
                Return Me.columnSaldo
            End Get
        End Property
        
        Friend ReadOnly Property UsuarioColumn As DataColumn
            Get
                Return Me.columnUsuario
            End Get
        End Property
        
        Friend ReadOnly Property NotasColumn As DataColumn
            Get
                Return Me.columnNotas
            End Get
        End Property
        
        Friend ReadOnly Property DescripcionColumn As DataColumn
            Get
                Return Me.columnDescripcion
            End Get
        End Property
        
        Friend ReadOnly Property SaldoInteresColumn As DataColumn
            Get
                Return Me.columnSaldoInteres
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_ahorrosRow
            Get
                Return CType(Me.Rows(index),view_ahorrosRow)
            End Get
        End Property
        
        Public Event view_ahorrosRowChanged As view_ahorrosRowChangeEventHandler
        
        Public Event view_ahorrosRowChanging As view_ahorrosRowChangeEventHandler
        
        Public Event view_ahorrosRowDeleted As view_ahorrosRowChangeEventHandler
        
        Public Event view_ahorrosRowDeleting As view_ahorrosRowChangeEventHandler
        
        Public Overloads Sub Addview_ahorrosRow(ByVal row As view_ahorrosRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addview_ahorrosRow( _
                    ByVal TipoDocumento As Integer,  _
                    ByVal fld_FullName As String,  _
                    ByVal fld_apodo As String,  _
                    ByVal fld_Identity As String,  _
                    ByVal fld_Phone As String,  _
                    ByVal fld_Phone2 As String,  _
                    ByVal fld_Address As String,  _
                    ByVal fld_City As String,  _
                    ByVal fld_Status As String,  _
                    ByVal fld_bce As Double,  _
                    ByVal fld_cod_zona As Integer,  _
                    ByVal fld_zona As String,  _
                    ByVal fld_nombre_con As String,  _
                    ByVal fld_apodo_con As String,  _
                    ByVal fld_cedula_con As String,  _
                    ByVal fld_telefono_con As String,  _
                    ByVal fld_celular_con As String,  _
                    ByVal fld_ref_personales_cliente As String,  _
                    ByVal fld_ref_comerciales_cliente As String,  _
                    ByVal fld_nombre_gar As String,  _
                    ByVal fld_apodo_gar As String,  _
                    ByVal fld_cedula_gar As String,  _
                    ByVal fld_telefono_gar As String,  _
                    ByVal fld_celular_gar As String,  _
                    ByVal fld_direccion_gar As String,  _
                    ByVal fld_ciudad_gar As String,  _
                    ByVal fld_ref_personales_gar As String,  _
                    ByVal fld_ref_comerciales_gar As String,  _
                    ByVal fld_ingresos_mesuales As Double,  _
                    ByVal fld_nombre_banco1 As String,  _
                    ByVal fld_cuenta_banco1 As String,  _
                    ByVal fld_nombre_banco2 As String,  _
                    ByVal fld_cuenta_banco2 As String,  _
                    ByVal fld_otra_informacion As String,  _
                    ByVal fld_nombre_con_gar As String,  _
                    ByVal fld_apodo_con_gar As String,  _
                    ByVal fld_cedula_con_gar As String,  _
                    ByVal fld_telefono_con_gar As String,  _
                    ByVal fld_celular_con_gar As String,  _
                    ByVal fld_edad As Integer,  _
                    ByVal fld_estado_civil As String,  _
                    ByVal fld_edad_gar As Integer,  _
                    ByVal fld_estado_civil_gar As String,  _
                    ByVal fld_ocupacion_cliente As String,  _
                    ByVal fld_ocupacion_gar As String,  _
                    ByVal fld_sector As String,  _
                    ByVal fld_categoria As String,  _
                    ByVal fld_limite As Double,  _
                    ByVal Puesto As String,  _
                    ByVal TimpoTrabajo As String,  _
                    ByVal ReferidoPor As String,  _
                    ByVal Oriundo As String,  _
                    ByVal CuentaNo As String,  _
                    ByVal IDCliente As Integer,  _
                    ByVal Categoria As Integer,  _
                    ByVal FechaInicia As Date,  _
                    ByVal Meses As Double,  _
                    ByVal FechaTermina As Date,  _
                    ByVal ModoPagoInteres As String,  _
                    ByVal TasaInteres As Double,  _
                    ByVal Penalizar As String,  _
                    ByVal PorcientoAPenalizar As Double,  _
                    ByVal Monto As Double,  _
                    ByVal Saldo As Double,  _
                    ByVal Usuario As String,  _
                    ByVal Notas As String,  _
                    ByVal Descripcion As String,  _
                    ByVal SaldoInteres As Decimal) As view_ahorrosRow
            Dim rowview_ahorrosRow As view_ahorrosRow = CType(Me.NewRow,view_ahorrosRow)
            rowview_ahorrosRow.ItemArray = New Object() {Nothing, TipoDocumento, fld_FullName, fld_apodo, fld_Identity, fld_Phone, fld_Phone2, fld_Address, fld_City, fld_Status, fld_bce, fld_cod_zona, fld_zona, fld_nombre_con, fld_apodo_con, fld_cedula_con, fld_telefono_con, fld_celular_con, fld_ref_personales_cliente, fld_ref_comerciales_cliente, fld_nombre_gar, fld_apodo_gar, fld_cedula_gar, fld_telefono_gar, fld_celular_gar, fld_direccion_gar, fld_ciudad_gar, fld_ref_personales_gar, fld_ref_comerciales_gar, fld_ingresos_mesuales, fld_nombre_banco1, fld_cuenta_banco1, fld_nombre_banco2, fld_cuenta_banco2, fld_otra_informacion, fld_nombre_con_gar, fld_apodo_con_gar, fld_cedula_con_gar, fld_telefono_con_gar, fld_celular_con_gar, fld_edad, fld_estado_civil, fld_edad_gar, fld_estado_civil_gar, fld_ocupacion_cliente, fld_ocupacion_gar, fld_sector, fld_categoria, fld_limite, Puesto, TimpoTrabajo, ReferidoPor, Oriundo, Nothing, CuentaNo, IDCliente, Categoria, FechaInicia, Meses, FechaTermina, ModoPagoInteres, TasaInteres, Penalizar, PorcientoAPenalizar, Monto, Saldo, Usuario, Notas, Descripcion, SaldoInteres}
            Me.Rows.Add(rowview_ahorrosRow)
            Return rowview_ahorrosRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As view_ahorrosDataTable = CType(MyBase.Clone,view_ahorrosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New view_ahorrosDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnTipoDocumento = Me.Columns("TipoDocumento")
            Me.columnfld_FullName = Me.Columns("fld_FullName")
            Me.columnfld_apodo = Me.Columns("fld_apodo")
            Me.columnfld_Identity = Me.Columns("fld_Identity")
            Me.columnfld_Phone = Me.Columns("fld_Phone")
            Me.columnfld_Phone2 = Me.Columns("fld_Phone2")
            Me.columnfld_Address = Me.Columns("fld_Address")
            Me.columnfld_City = Me.Columns("fld_City")
            Me.columnfld_Status = Me.Columns("fld_Status")
            Me.columnfld_bce = Me.Columns("fld_bce")
            Me.columnfld_cod_zona = Me.Columns("fld_cod_zona")
            Me.columnfld_zona = Me.Columns("fld_zona")
            Me.columnfld_nombre_con = Me.Columns("fld_nombre_con")
            Me.columnfld_apodo_con = Me.Columns("fld_apodo_con")
            Me.columnfld_cedula_con = Me.Columns("fld_cedula_con")
            Me.columnfld_telefono_con = Me.Columns("fld_telefono_con")
            Me.columnfld_celular_con = Me.Columns("fld_celular_con")
            Me.columnfld_ref_personales_cliente = Me.Columns("fld_ref_personales_cliente")
            Me.columnfld_ref_comerciales_cliente = Me.Columns("fld_ref_comerciales_cliente")
            Me.columnfld_nombre_gar = Me.Columns("fld_nombre_gar")
            Me.columnfld_apodo_gar = Me.Columns("fld_apodo_gar")
            Me.columnfld_cedula_gar = Me.Columns("fld_cedula_gar")
            Me.columnfld_telefono_gar = Me.Columns("fld_telefono_gar")
            Me.columnfld_celular_gar = Me.Columns("fld_celular_gar")
            Me.columnfld_direccion_gar = Me.Columns("fld_direccion_gar")
            Me.columnfld_ciudad_gar = Me.Columns("fld_ciudad_gar")
            Me.columnfld_ref_personales_gar = Me.Columns("fld_ref_personales_gar")
            Me.columnfld_ref_comerciales_gar = Me.Columns("fld_ref_comerciales_gar")
            Me.columnfld_ingresos_mesuales = Me.Columns("fld_ingresos_mesuales")
            Me.columnfld_nombre_banco1 = Me.Columns("fld_nombre_banco1")
            Me.columnfld_cuenta_banco1 = Me.Columns("fld_cuenta_banco1")
            Me.columnfld_nombre_banco2 = Me.Columns("fld_nombre_banco2")
            Me.columnfld_cuenta_banco2 = Me.Columns("fld_cuenta_banco2")
            Me.columnfld_otra_informacion = Me.Columns("fld_otra_informacion")
            Me.columnfld_nombre_con_gar = Me.Columns("fld_nombre_con_gar")
            Me.columnfld_apodo_con_gar = Me.Columns("fld_apodo_con_gar")
            Me.columnfld_cedula_con_gar = Me.Columns("fld_cedula_con_gar")
            Me.columnfld_telefono_con_gar = Me.Columns("fld_telefono_con_gar")
            Me.columnfld_celular_con_gar = Me.Columns("fld_celular_con_gar")
            Me.columnfld_edad = Me.Columns("fld_edad")
            Me.columnfld_estado_civil = Me.Columns("fld_estado_civil")
            Me.columnfld_edad_gar = Me.Columns("fld_edad_gar")
            Me.columnfld_estado_civil_gar = Me.Columns("fld_estado_civil_gar")
            Me.columnfld_ocupacion_cliente = Me.Columns("fld_ocupacion_cliente")
            Me.columnfld_ocupacion_gar = Me.Columns("fld_ocupacion_gar")
            Me.columnfld_sector = Me.Columns("fld_sector")
            Me.columnfld_categoria = Me.Columns("fld_categoria")
            Me.columnfld_limite = Me.Columns("fld_limite")
            Me.columnPuesto = Me.Columns("Puesto")
            Me.columnTimpoTrabajo = Me.Columns("TimpoTrabajo")
            Me.columnReferidoPor = Me.Columns("ReferidoPor")
            Me.columnOriundo = Me.Columns("Oriundo")
            Me.columnID = Me.Columns("ID")
            Me.columnCuentaNo = Me.Columns("CuentaNo")
            Me.columnIDCliente = Me.Columns("IDCliente")
            Me.columnCategoria = Me.Columns("Categoria")
            Me.columnFechaInicia = Me.Columns("FechaInicia")
            Me.columnMeses = Me.Columns("Meses")
            Me.columnFechaTermina = Me.Columns("FechaTermina")
            Me.columnModoPagoInteres = Me.Columns("ModoPagoInteres")
            Me.columnTasaInteres = Me.Columns("TasaInteres")
            Me.columnPenalizar = Me.Columns("Penalizar")
            Me.columnPorcientoAPenalizar = Me.Columns("PorcientoAPenalizar")
            Me.columnMonto = Me.Columns("Monto")
            Me.columnSaldo = Me.Columns("Saldo")
            Me.columnUsuario = Me.Columns("Usuario")
            Me.columnNotas = Me.Columns("Notas")
            Me.columnDescripcion = Me.Columns("Descripcion")
            Me.columnSaldoInteres = Me.Columns("SaldoInteres")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnTipoDocumento = New DataColumn("TipoDocumento", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTipoDocumento)
            Me.columnfld_FullName = New DataColumn("fld_FullName", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_FullName)
            Me.columnfld_apodo = New DataColumn("fld_apodo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo)
            Me.columnfld_Identity = New DataColumn("fld_Identity", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Identity)
            Me.columnfld_Phone = New DataColumn("fld_Phone", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone)
            Me.columnfld_Phone2 = New DataColumn("fld_Phone2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone2)
            Me.columnfld_Address = New DataColumn("fld_Address", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Address)
            Me.columnfld_City = New DataColumn("fld_City", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_City)
            Me.columnfld_Status = New DataColumn("fld_Status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Status)
            Me.columnfld_bce = New DataColumn("fld_bce", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce)
            Me.columnfld_cod_zona = New DataColumn("fld_cod_zona", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cod_zona)
            Me.columnfld_zona = New DataColumn("fld_zona", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_zona)
            Me.columnfld_nombre_con = New DataColumn("fld_nombre_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con)
            Me.columnfld_apodo_con = New DataColumn("fld_apodo_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con)
            Me.columnfld_cedula_con = New DataColumn("fld_cedula_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con)
            Me.columnfld_telefono_con = New DataColumn("fld_telefono_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con)
            Me.columnfld_celular_con = New DataColumn("fld_celular_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con)
            Me.columnfld_ref_personales_cliente = New DataColumn("fld_ref_personales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_cliente)
            Me.columnfld_ref_comerciales_cliente = New DataColumn("fld_ref_comerciales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_cliente)
            Me.columnfld_nombre_gar = New DataColumn("fld_nombre_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_gar)
            Me.columnfld_apodo_gar = New DataColumn("fld_apodo_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_gar)
            Me.columnfld_cedula_gar = New DataColumn("fld_cedula_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_gar)
            Me.columnfld_telefono_gar = New DataColumn("fld_telefono_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_gar)
            Me.columnfld_celular_gar = New DataColumn("fld_celular_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_gar)
            Me.columnfld_direccion_gar = New DataColumn("fld_direccion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_direccion_gar)
            Me.columnfld_ciudad_gar = New DataColumn("fld_ciudad_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ciudad_gar)
            Me.columnfld_ref_personales_gar = New DataColumn("fld_ref_personales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_gar)
            Me.columnfld_ref_comerciales_gar = New DataColumn("fld_ref_comerciales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_gar)
            Me.columnfld_ingresos_mesuales = New DataColumn("fld_ingresos_mesuales", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ingresos_mesuales)
            Me.columnfld_nombre_banco1 = New DataColumn("fld_nombre_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco1)
            Me.columnfld_cuenta_banco1 = New DataColumn("fld_cuenta_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco1)
            Me.columnfld_nombre_banco2 = New DataColumn("fld_nombre_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco2)
            Me.columnfld_cuenta_banco2 = New DataColumn("fld_cuenta_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco2)
            Me.columnfld_otra_informacion = New DataColumn("fld_otra_informacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_otra_informacion)
            Me.columnfld_nombre_con_gar = New DataColumn("fld_nombre_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con_gar)
            Me.columnfld_apodo_con_gar = New DataColumn("fld_apodo_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con_gar)
            Me.columnfld_cedula_con_gar = New DataColumn("fld_cedula_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con_gar)
            Me.columnfld_telefono_con_gar = New DataColumn("fld_telefono_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con_gar)
            Me.columnfld_celular_con_gar = New DataColumn("fld_celular_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con_gar)
            Me.columnfld_edad = New DataColumn("fld_edad", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad)
            Me.columnfld_estado_civil = New DataColumn("fld_estado_civil", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil)
            Me.columnfld_edad_gar = New DataColumn("fld_edad_gar", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad_gar)
            Me.columnfld_estado_civil_gar = New DataColumn("fld_estado_civil_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil_gar)
            Me.columnfld_ocupacion_cliente = New DataColumn("fld_ocupacion_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ocupacion_cliente)
            Me.columnfld_ocupacion_gar = New DataColumn("fld_ocupacion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ocupacion_gar)
            Me.columnfld_sector = New DataColumn("fld_sector", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_sector)
            Me.columnfld_categoria = New DataColumn("fld_categoria", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_categoria)
            Me.columnfld_limite = New DataColumn("fld_limite", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_limite)
            Me.columnPuesto = New DataColumn("Puesto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPuesto)
            Me.columnTimpoTrabajo = New DataColumn("TimpoTrabajo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTimpoTrabajo)
            Me.columnReferidoPor = New DataColumn("ReferidoPor", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnReferidoPor)
            Me.columnOriundo = New DataColumn("Oriundo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnOriundo)
            Me.columnID = New DataColumn("ID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnID)
            Me.columnCuentaNo = New DataColumn("CuentaNo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCuentaNo)
            Me.columnIDCliente = New DataColumn("IDCliente", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnIDCliente)
            Me.columnCategoria = New DataColumn("Categoria", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCategoria)
            Me.columnFechaInicia = New DataColumn("FechaInicia", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaInicia)
            Me.columnMeses = New DataColumn("Meses", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMeses)
            Me.columnFechaTermina = New DataColumn("FechaTermina", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaTermina)
            Me.columnModoPagoInteres = New DataColumn("ModoPagoInteres", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnModoPagoInteres)
            Me.columnTasaInteres = New DataColumn("TasaInteres", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTasaInteres)
            Me.columnPenalizar = New DataColumn("Penalizar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPenalizar)
            Me.columnPorcientoAPenalizar = New DataColumn("PorcientoAPenalizar", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPorcientoAPenalizar)
            Me.columnMonto = New DataColumn("Monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMonto)
            Me.columnSaldo = New DataColumn("Saldo", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSaldo)
            Me.columnUsuario = New DataColumn("Usuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnUsuario)
            Me.columnNotas = New DataColumn("Notas", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNotas)
            Me.columnDescripcion = New DataColumn("Descripcion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDescripcion)
            Me.columnSaldoInteres = New DataColumn("SaldoInteres", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSaldoInteres)
            Me.columnfld_id.AutoIncrement = true
            Me.columnID.AutoIncrement = true
        End Sub
        
        Public Function Newview_ahorrosRow() As view_ahorrosRow
            Return CType(Me.NewRow,view_ahorrosRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New view_ahorrosRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(view_ahorrosRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_ahorrosRowChangedEvent) Is Nothing) Then
                RaiseEvent view_ahorrosRowChanged(Me, New view_ahorrosRowChangeEvent(CType(e.Row,view_ahorrosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_ahorrosRowChangingEvent) Is Nothing) Then
                RaiseEvent view_ahorrosRowChanging(Me, New view_ahorrosRowChangeEvent(CType(e.Row,view_ahorrosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_ahorrosRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_ahorrosRowDeleted(Me, New view_ahorrosRowChangeEvent(CType(e.Row,view_ahorrosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_ahorrosRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_ahorrosRowDeleting(Me, New view_ahorrosRowChangeEvent(CType(e.Row,view_ahorrosRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeview_ahorrosRow(ByVal row As view_ahorrosRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_ahorrosRow
        Inherits DataRow
        
        Private tableview_ahorros As view_ahorrosDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_ahorros = CType(Me.Table,view_ahorrosDataTable)
        End Sub
        
        Public Property fld_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_idColumn) = value
            End Set
        End Property
        
        Public Property TipoDocumento As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.TipoDocumentoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.TipoDocumentoColumn) = value
            End Set
        End Property
        
        Public Property fld_FullName As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_FullNameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_FullNameColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_apodoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_apodoColumn) = value
            End Set
        End Property
        
        Public Property fld_Identity As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_IdentityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_IdentityColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_PhoneColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_PhoneColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_Phone2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_Phone2Column) = value
            End Set
        End Property
        
        Public Property fld_Address As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_AddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_AddressColumn) = value
            End Set
        End Property
        
        Public Property fld_City As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_CityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_CityColumn) = value
            End Set
        End Property
        
        Public Property fld_Status As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_StatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_StatusColumn) = value
            End Set
        End Property
        
        Public Property fld_bce As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_bceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_bceColumn) = value
            End Set
        End Property
        
        Public Property fld_cod_zona As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_cod_zonaColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_cod_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_zona As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_zonaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_nombre_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_nombre_conColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_apodo_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_apodo_conColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_cedula_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_cedula_conColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_telefono_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_telefono_conColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_celular_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_celular_conColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_ref_personales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_ref_personales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_ref_comerciales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_ref_comerciales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_nombre_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_nombre_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_apodo_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_apodo_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_cedula_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_cedula_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_telefono_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_telefono_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_celular_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_celular_garColumn) = value
            End Set
        End Property
        
        Public Property fld_direccion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_direccion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_direccion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ciudad_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_ciudad_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_ciudad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_ref_personales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_ref_personales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_ref_comerciales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_ref_comerciales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ingresos_mesuales As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_ingresos_mesualesColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_ingresos_mesualesColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_nombre_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_nombre_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_cuenta_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_cuenta_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_nombre_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_nombre_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_cuenta_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_cuenta_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_otra_informacion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_otra_informacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_otra_informacionColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_nombre_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_nombre_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_apodo_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_apodo_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_cedula_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_cedula_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_telefono_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_telefono_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_celular_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_celular_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_edad As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_edadColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_edadColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_estado_civilColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_estado_civilColumn) = value
            End Set
        End Property
        
        Public Property fld_edad_gar As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_edad_garColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_edad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_estado_civil_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_estado_civil_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ocupacion_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_ocupacion_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_ocupacion_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ocupacion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_ocupacion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_ocupacion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_sector As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_sectorColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_sectorColumn) = value
            End Set
        End Property
        
        Public Property fld_categoria As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_categoriaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_categoriaColumn) = value
            End Set
        End Property
        
        Public Property fld_limite As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_limiteColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_limiteColumn) = value
            End Set
        End Property
        
        Public Property Puesto As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.PuestoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.PuestoColumn) = value
            End Set
        End Property
        
        Public Property TimpoTrabajo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.TimpoTrabajoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.TimpoTrabajoColumn) = value
            End Set
        End Property
        
        Public Property ReferidoPor As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.ReferidoPorColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.ReferidoPorColumn) = value
            End Set
        End Property
        
        Public Property Oriundo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.OriundoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.OriundoColumn) = value
            End Set
        End Property
        
        Public Property ID As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.IDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.IDColumn) = value
            End Set
        End Property
        
        Public Property CuentaNo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.CuentaNoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.CuentaNoColumn) = value
            End Set
        End Property
        
        Public Property IDCliente As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.IDClienteColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.IDClienteColumn) = value
            End Set
        End Property
        
        Public Property Categoria As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.CategoriaColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.CategoriaColumn) = value
            End Set
        End Property
        
        Public Property FechaInicia As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.FechaIniciaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.FechaIniciaColumn) = value
            End Set
        End Property
        
        Public Property Meses As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.MesesColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.MesesColumn) = value
            End Set
        End Property
        
        Public Property FechaTermina As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.FechaTerminaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.FechaTerminaColumn) = value
            End Set
        End Property
        
        Public Property ModoPagoInteres As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.ModoPagoInteresColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.ModoPagoInteresColumn) = value
            End Set
        End Property
        
        Public Property TasaInteres As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.TasaInteresColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.TasaInteresColumn) = value
            End Set
        End Property
        
        Public Property Penalizar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.PenalizarColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.PenalizarColumn) = value
            End Set
        End Property
        
        Public Property PorcientoAPenalizar As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.PorcientoAPenalizarColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.PorcientoAPenalizarColumn) = value
            End Set
        End Property
        
        Public Property Monto As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.MontoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.MontoColumn) = value
            End Set
        End Property
        
        Public Property Saldo As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.SaldoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.SaldoColumn) = value
            End Set
        End Property
        
        Public Property Usuario As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.UsuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.UsuarioColumn) = value
            End Set
        End Property
        
        Public Property Notas As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.NotasColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.NotasColumn) = value
            End Set
        End Property
        
        Public Property Descripcion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.DescripcionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.DescripcionColumn) = value
            End Set
        End Property
        
        Public Property SaldoInteres As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.SaldoInteresColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.SaldoInteresColumn) = value
            End Set
        End Property
        
        Public Function Isfld_idNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_idColumn)
        End Function
        
        Public Sub Setfld_idNull()
            Me(Me.tableview_ahorros.fld_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTipoDocumentoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.TipoDocumentoColumn)
        End Function
        
        Public Sub SetTipoDocumentoNull()
            Me(Me.tableview_ahorros.TipoDocumentoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_FullNameNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_FullNameColumn)
        End Function
        
        Public Sub Setfld_FullNameNull()
            Me(Me.tableview_ahorros.fld_FullNameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_apodoColumn)
        End Function
        
        Public Sub Setfld_apodoNull()
            Me(Me.tableview_ahorros.fld_apodoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_IdentityNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_IdentityColumn)
        End Function
        
        Public Sub Setfld_IdentityNull()
            Me(Me.tableview_ahorros.fld_IdentityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_PhoneNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_PhoneColumn)
        End Function
        
        Public Sub Setfld_PhoneNull()
            Me(Me.tableview_ahorros.fld_PhoneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_Phone2Null() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_Phone2Column)
        End Function
        
        Public Sub Setfld_Phone2Null()
            Me(Me.tableview_ahorros.fld_Phone2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_AddressNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_AddressColumn)
        End Function
        
        Public Sub Setfld_AddressNull()
            Me(Me.tableview_ahorros.fld_AddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_CityNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_CityColumn)
        End Function
        
        Public Sub Setfld_CityNull()
            Me(Me.tableview_ahorros.fld_CityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_StatusNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_StatusColumn)
        End Function
        
        Public Sub Setfld_StatusNull()
            Me(Me.tableview_ahorros.fld_StatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bceNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_bceColumn)
        End Function
        
        Public Sub Setfld_bceNull()
            Me(Me.tableview_ahorros.fld_bceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cod_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_cod_zonaColumn)
        End Function
        
        Public Sub Setfld_cod_zonaNull()
            Me(Me.tableview_ahorros.fld_cod_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_zonaColumn)
        End Function
        
        Public Sub Setfld_zonaNull()
            Me(Me.tableview_ahorros.fld_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_nombre_conColumn)
        End Function
        
        Public Sub Setfld_nombre_conNull()
            Me(Me.tableview_ahorros.fld_nombre_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_apodo_conColumn)
        End Function
        
        Public Sub Setfld_apodo_conNull()
            Me(Me.tableview_ahorros.fld_apodo_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_cedula_conColumn)
        End Function
        
        Public Sub Setfld_cedula_conNull()
            Me(Me.tableview_ahorros.fld_cedula_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_telefono_conColumn)
        End Function
        
        Public Sub Setfld_telefono_conNull()
            Me(Me.tableview_ahorros.fld_telefono_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_celular_conColumn)
        End Function
        
        Public Sub Setfld_celular_conNull()
            Me(Me.tableview_ahorros.fld_celular_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_ref_personales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_personales_clienteNull()
            Me(Me.tableview_ahorros.fld_ref_personales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_ref_comerciales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_clienteNull()
            Me(Me.tableview_ahorros.fld_ref_comerciales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_nombre_garColumn)
        End Function
        
        Public Sub Setfld_nombre_garNull()
            Me(Me.tableview_ahorros.fld_nombre_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_apodo_garColumn)
        End Function
        
        Public Sub Setfld_apodo_garNull()
            Me(Me.tableview_ahorros.fld_apodo_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_cedula_garColumn)
        End Function
        
        Public Sub Setfld_cedula_garNull()
            Me(Me.tableview_ahorros.fld_cedula_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_telefono_garColumn)
        End Function
        
        Public Sub Setfld_telefono_garNull()
            Me(Me.tableview_ahorros.fld_telefono_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_celular_garColumn)
        End Function
        
        Public Sub Setfld_celular_garNull()
            Me(Me.tableview_ahorros.fld_celular_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_direccion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_direccion_garColumn)
        End Function
        
        Public Sub Setfld_direccion_garNull()
            Me(Me.tableview_ahorros.fld_direccion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ciudad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_ciudad_garColumn)
        End Function
        
        Public Sub Setfld_ciudad_garNull()
            Me(Me.tableview_ahorros.fld_ciudad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_ref_personales_garColumn)
        End Function
        
        Public Sub Setfld_ref_personales_garNull()
            Me(Me.tableview_ahorros.fld_ref_personales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_ref_comerciales_garColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_garNull()
            Me(Me.tableview_ahorros.fld_ref_comerciales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ingresos_mesualesNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_ingresos_mesualesColumn)
        End Function
        
        Public Sub Setfld_ingresos_mesualesNull()
            Me(Me.tableview_ahorros.fld_ingresos_mesualesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_nombre_banco1Column)
        End Function
        
        Public Sub Setfld_nombre_banco1Null()
            Me(Me.tableview_ahorros.fld_nombre_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_cuenta_banco1Column)
        End Function
        
        Public Sub Setfld_cuenta_banco1Null()
            Me(Me.tableview_ahorros.fld_cuenta_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_nombre_banco2Column)
        End Function
        
        Public Sub Setfld_nombre_banco2Null()
            Me(Me.tableview_ahorros.fld_nombre_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_cuenta_banco2Column)
        End Function
        
        Public Sub Setfld_cuenta_banco2Null()
            Me(Me.tableview_ahorros.fld_cuenta_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_otra_informacionNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_otra_informacionColumn)
        End Function
        
        Public Sub Setfld_otra_informacionNull()
            Me(Me.tableview_ahorros.fld_otra_informacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_nombre_con_garColumn)
        End Function
        
        Public Sub Setfld_nombre_con_garNull()
            Me(Me.tableview_ahorros.fld_nombre_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_apodo_con_garColumn)
        End Function
        
        Public Sub Setfld_apodo_con_garNull()
            Me(Me.tableview_ahorros.fld_apodo_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_cedula_con_garColumn)
        End Function
        
        Public Sub Setfld_cedula_con_garNull()
            Me(Me.tableview_ahorros.fld_cedula_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_telefono_con_garColumn)
        End Function
        
        Public Sub Setfld_telefono_con_garNull()
            Me(Me.tableview_ahorros.fld_telefono_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_celular_con_garColumn)
        End Function
        
        Public Sub Setfld_celular_con_garNull()
            Me(Me.tableview_ahorros.fld_celular_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edadNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_edadColumn)
        End Function
        
        Public Sub Setfld_edadNull()
            Me(Me.tableview_ahorros.fld_edadColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civilNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_estado_civilColumn)
        End Function
        
        Public Sub Setfld_estado_civilNull()
            Me(Me.tableview_ahorros.fld_estado_civilColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_edad_garColumn)
        End Function
        
        Public Sub Setfld_edad_garNull()
            Me(Me.tableview_ahorros.fld_edad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civil_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_estado_civil_garColumn)
        End Function
        
        Public Sub Setfld_estado_civil_garNull()
            Me(Me.tableview_ahorros.fld_estado_civil_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ocupacion_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_ocupacion_clienteColumn)
        End Function
        
        Public Sub Setfld_ocupacion_clienteNull()
            Me(Me.tableview_ahorros.fld_ocupacion_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ocupacion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_ocupacion_garColumn)
        End Function
        
        Public Sub Setfld_ocupacion_garNull()
            Me(Me.tableview_ahorros.fld_ocupacion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_sectorNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_sectorColumn)
        End Function
        
        Public Sub Setfld_sectorNull()
            Me(Me.tableview_ahorros.fld_sectorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_categoriaNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_categoriaColumn)
        End Function
        
        Public Sub Setfld_categoriaNull()
            Me(Me.tableview_ahorros.fld_categoriaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_limiteNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_limiteColumn)
        End Function
        
        Public Sub Setfld_limiteNull()
            Me(Me.tableview_ahorros.fld_limiteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsPuestoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.PuestoColumn)
        End Function
        
        Public Sub SetPuestoNull()
            Me(Me.tableview_ahorros.PuestoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTimpoTrabajoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.TimpoTrabajoColumn)
        End Function
        
        Public Sub SetTimpoTrabajoNull()
            Me(Me.tableview_ahorros.TimpoTrabajoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsReferidoPorNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.ReferidoPorColumn)
        End Function
        
        Public Sub SetReferidoPorNull()
            Me(Me.tableview_ahorros.ReferidoPorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsOriundoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.OriundoColumn)
        End Function
        
        Public Sub SetOriundoNull()
            Me(Me.tableview_ahorros.OriundoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.IDColumn)
        End Function
        
        Public Sub SetIDNull()
            Me(Me.tableview_ahorros.IDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCuentaNoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.CuentaNoColumn)
        End Function
        
        Public Sub SetCuentaNoNull()
            Me(Me.tableview_ahorros.CuentaNoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsIDClienteNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.IDClienteColumn)
        End Function
        
        Public Sub SetIDClienteNull()
            Me(Me.tableview_ahorros.IDClienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCategoriaNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.CategoriaColumn)
        End Function
        
        Public Sub SetCategoriaNull()
            Me(Me.tableview_ahorros.CategoriaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaIniciaNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.FechaIniciaColumn)
        End Function
        
        Public Sub SetFechaIniciaNull()
            Me(Me.tableview_ahorros.FechaIniciaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMesesNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.MesesColumn)
        End Function
        
        Public Sub SetMesesNull()
            Me(Me.tableview_ahorros.MesesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaTerminaNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.FechaTerminaColumn)
        End Function
        
        Public Sub SetFechaTerminaNull()
            Me(Me.tableview_ahorros.FechaTerminaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsModoPagoInteresNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.ModoPagoInteresColumn)
        End Function
        
        Public Sub SetModoPagoInteresNull()
            Me(Me.tableview_ahorros.ModoPagoInteresColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTasaInteresNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.TasaInteresColumn)
        End Function
        
        Public Sub SetTasaInteresNull()
            Me(Me.tableview_ahorros.TasaInteresColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsPenalizarNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.PenalizarColumn)
        End Function
        
        Public Sub SetPenalizarNull()
            Me(Me.tableview_ahorros.PenalizarColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsPorcientoAPenalizarNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.PorcientoAPenalizarColumn)
        End Function
        
        Public Sub SetPorcientoAPenalizarNull()
            Me(Me.tableview_ahorros.PorcientoAPenalizarColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMontoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.MontoColumn)
        End Function
        
        Public Sub SetMontoNull()
            Me(Me.tableview_ahorros.MontoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSaldoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.SaldoColumn)
        End Function
        
        Public Sub SetSaldoNull()
            Me(Me.tableview_ahorros.SaldoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsUsuarioNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.UsuarioColumn)
        End Function
        
        Public Sub SetUsuarioNull()
            Me(Me.tableview_ahorros.UsuarioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNotasNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.NotasColumn)
        End Function
        
        Public Sub SetNotasNull()
            Me(Me.tableview_ahorros.NotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDescripcionNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.DescripcionColumn)
        End Function
        
        Public Sub SetDescripcionNull()
            Me(Me.tableview_ahorros.DescripcionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSaldoInteresNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.SaldoInteresColumn)
        End Function
        
        Public Sub SetSaldoInteresNull()
            Me(Me.tableview_ahorros.SaldoInteresColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_ahorrosRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As view_ahorrosRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As view_ahorrosRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As view_ahorrosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_tabla_prestamosDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id_cuotas As DataColumn
        
        Private columnfld_no_cuotas As DataColumn
        
        Private columnfld_id_del_cliente_cuotas As DataColumn
        
        Private columnfld_id_del_prestamo As DataColumn
        
        Private columnfld_fecha_entrega_cuotas As DataColumn
        
        Private columnfld_fecha_termina_cuotas As DataColumn
        
        Private columnfld_fecha_ultimo_abono_cuotas As DataColumn
        
        Private columnfld_capital_cuota As DataColumn
        
        Private columnfld_interes_cuota As DataColumn
        
        Private columnfld_monto_cuotas As DataColumn
        
        Private columnfld_abono_cuotas As DataColumn
        
        Private columnfld_balance_cuotas As DataColumn
        
        Private columnfld_usuario_cuotas As DataColumn
        
        Private columnfld_status_cuotas As DataColumn
        
        Private columnfld_pendiente_amortizar As DataColumn
        
        Private columnfld_total_amortizado As DataColumn
        
        Private columnfld_capital_cuota_abono As DataColumn
        
        Private columnfld_capital_cuota_balance As DataColumn
        
        Private columnfld_interes_cuota_abono As DataColumn
        
        Private columnfld_interes_cuota_balance As DataColumn
        
        Private columnfld_ultimo_abono_interes As DataColumn
        
        Private columnfld_ultimo_abono_capital As DataColumn
        
        Private columnfld_monto_mora As DataColumn
        
        Private columnfld_abono_mora As DataColumn
        
        Private columnfld_balance_mora As DataColumn
        
        Private columnfld_ultimo_abono_mora As DataColumn
        
        Private columnfld_dias_vencimiento As DataColumn
        
        Private columnfld_socio As DataColumn
        
        Private columnfld_atraso_cuotas As DataColumn
        
        Private columnfld_tipo_cuotas As DataColumn
        
        Private columnfld_bce_prestamo As DataColumn
        
        Private columnfld_cant_cuotas As DataColumn
        
        Private columnfldchk As DataColumn
        
        Private columnfld_termina_calculo_interes As DataColumn
        
        Private columnfld_fecha_calculo_interes As DataColumn
        
        Private columnfld_id_prestamos As DataColumn
        
        Private columnfld_id_del_cliente As DataColumn
        
        Private columnfld_clasificacion As DataColumn
        
        Private columnfld_fecha_entrega As DataColumn
        
        Private columnfld_fecha_termina As DataColumn
        
        Private columnfld_fecha_calcula_interes As DataColumn
        
        Private columnfld_cantidad_cuotas As DataColumn
        
        Private columnfld_monto_cuotas_a As DataColumn
        
        Private columnfld_capital_prestamo As DataColumn
        
        Private columnfld_monto As DataColumn
        
        Private columnfld_abono As DataColumn
        
        Private columnfld_balance As DataColumn
        
        Private columnfld_usuario As DataColumn
        
        Private columnfld_fecha_ultimo_abono As DataColumn
        
        Private columnfld_status_prestamos As DataColumn
        
        Private columnfld_anos As DataColumn
        
        Private columnfld_interes_p As DataColumn
        
        Private columnfld_tipo_prestamo As DataColumn
        
        Private columnfld_ck_no As DataColumn
        
        Private columnfld_tipo_garantia As DataColumn
        
        Private columnfld_garantia As DataColumn
        
        Private columnfldFinanciamiento As DataColumn
        
        Private columnfldMontoFinan As DataColumn
        
        Private columnfldMontoInicial As DataColumn
        
        Private columnfldCodInm As DataColumn
        
        Private columnfldDescInm As DataColumn
        
        Private columnfldMetros As DataColumn
        
        Private columnfldPrecioMetro As DataColumn
        
        Private columnfldTazaMora As DataColumn
        
        Private columnfldNota As DataColumn
        
        Private columnfld_socio_rnc As DataColumn
        
        Friend Sub New()
            MyBase.New("view_tabla_prestamos")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_id_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_no_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_no_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_del_cliente_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_id_del_cliente_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_del_prestamoColumn As DataColumn
            Get
                Return Me.columnfld_id_del_prestamo
            End Get
        End Property
        
        Friend ReadOnly Property fld_fecha_entrega_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_fecha_entrega_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_fecha_termina_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_fecha_termina_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_fecha_ultimo_abono_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_fecha_ultimo_abono_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_capital_cuotaColumn As DataColumn
            Get
                Return Me.columnfld_capital_cuota
            End Get
        End Property
        
        Friend ReadOnly Property fld_interes_cuotaColumn As DataColumn
            Get
                Return Me.columnfld_interes_cuota
            End Get
        End Property
        
        Friend ReadOnly Property fld_monto_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_monto_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_abono_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_abono_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_balance_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_balance_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_usuario_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_usuario_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_status_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_status_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_pendiente_amortizarColumn As DataColumn
            Get
                Return Me.columnfld_pendiente_amortizar
            End Get
        End Property
        
        Friend ReadOnly Property fld_total_amortizadoColumn As DataColumn
            Get
                Return Me.columnfld_total_amortizado
            End Get
        End Property
        
        Friend ReadOnly Property fld_capital_cuota_abonoColumn As DataColumn
            Get
                Return Me.columnfld_capital_cuota_abono
            End Get
        End Property
        
        Friend ReadOnly Property fld_capital_cuota_balanceColumn As DataColumn
            Get
                Return Me.columnfld_capital_cuota_balance
            End Get
        End Property
        
        Friend ReadOnly Property fld_interes_cuota_abonoColumn As DataColumn
            Get
                Return Me.columnfld_interes_cuota_abono
            End Get
        End Property
        
        Friend ReadOnly Property fld_interes_cuota_balanceColumn As DataColumn
            Get
                Return Me.columnfld_interes_cuota_balance
            End Get
        End Property
        
        Friend ReadOnly Property fld_ultimo_abono_interesColumn As DataColumn
            Get
                Return Me.columnfld_ultimo_abono_interes
            End Get
        End Property
        
        Friend ReadOnly Property fld_ultimo_abono_capitalColumn As DataColumn
            Get
                Return Me.columnfld_ultimo_abono_capital
            End Get
        End Property
        
        Friend ReadOnly Property fld_monto_moraColumn As DataColumn
            Get
                Return Me.columnfld_monto_mora
            End Get
        End Property
        
        Friend ReadOnly Property fld_abono_moraColumn As DataColumn
            Get
                Return Me.columnfld_abono_mora
            End Get
        End Property
        
        Friend ReadOnly Property fld_balance_moraColumn As DataColumn
            Get
                Return Me.columnfld_balance_mora
            End Get
        End Property
        
        Friend ReadOnly Property fld_ultimo_abono_moraColumn As DataColumn
            Get
                Return Me.columnfld_ultimo_abono_mora
            End Get
        End Property
        
        Friend ReadOnly Property fld_dias_vencimientoColumn As DataColumn
            Get
                Return Me.columnfld_dias_vencimiento
            End Get
        End Property
        
        Friend ReadOnly Property fld_socioColumn As DataColumn
            Get
                Return Me.columnfld_socio
            End Get
        End Property
        
        Friend ReadOnly Property fld_atraso_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_atraso_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_tipo_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_tipo_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_bce_prestamoColumn As DataColumn
            Get
                Return Me.columnfld_bce_prestamo
            End Get
        End Property
        
        Friend ReadOnly Property fld_cant_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_cant_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fldchkColumn As DataColumn
            Get
                Return Me.columnfldchk
            End Get
        End Property
        
        Friend ReadOnly Property fld_termina_calculo_interesColumn As DataColumn
            Get
                Return Me.columnfld_termina_calculo_interes
            End Get
        End Property
        
        Friend ReadOnly Property fld_fecha_calculo_interesColumn As DataColumn
            Get
                Return Me.columnfld_fecha_calculo_interes
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_prestamosColumn As DataColumn
            Get
                Return Me.columnfld_id_prestamos
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_del_clienteColumn As DataColumn
            Get
                Return Me.columnfld_id_del_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_clasificacionColumn As DataColumn
            Get
                Return Me.columnfld_clasificacion
            End Get
        End Property
        
        Friend ReadOnly Property fld_fecha_entregaColumn As DataColumn
            Get
                Return Me.columnfld_fecha_entrega
            End Get
        End Property
        
        Friend ReadOnly Property fld_fecha_terminaColumn As DataColumn
            Get
                Return Me.columnfld_fecha_termina
            End Get
        End Property
        
        Friend ReadOnly Property fld_fecha_calcula_interesColumn As DataColumn
            Get
                Return Me.columnfld_fecha_calcula_interes
            End Get
        End Property
        
        Friend ReadOnly Property fld_cantidad_cuotasColumn As DataColumn
            Get
                Return Me.columnfld_cantidad_cuotas
            End Get
        End Property
        
        Friend ReadOnly Property fld_monto_cuotas_aColumn As DataColumn
            Get
                Return Me.columnfld_monto_cuotas_a
            End Get
        End Property
        
        Friend ReadOnly Property fld_capital_prestamoColumn As DataColumn
            Get
                Return Me.columnfld_capital_prestamo
            End Get
        End Property
        
        Friend ReadOnly Property fld_montoColumn As DataColumn
            Get
                Return Me.columnfld_monto
            End Get
        End Property
        
        Friend ReadOnly Property fld_abonoColumn As DataColumn
            Get
                Return Me.columnfld_abono
            End Get
        End Property
        
        Friend ReadOnly Property fld_balanceColumn As DataColumn
            Get
                Return Me.columnfld_balance
            End Get
        End Property
        
        Friend ReadOnly Property fld_usuarioColumn As DataColumn
            Get
                Return Me.columnfld_usuario
            End Get
        End Property
        
        Friend ReadOnly Property fld_fecha_ultimo_abonoColumn As DataColumn
            Get
                Return Me.columnfld_fecha_ultimo_abono
            End Get
        End Property
        
        Friend ReadOnly Property fld_status_prestamosColumn As DataColumn
            Get
                Return Me.columnfld_status_prestamos
            End Get
        End Property
        
        Friend ReadOnly Property fld_anosColumn As DataColumn
            Get
                Return Me.columnfld_anos
            End Get
        End Property
        
        Friend ReadOnly Property fld_interes_pColumn As DataColumn
            Get
                Return Me.columnfld_interes_p
            End Get
        End Property
        
        Friend ReadOnly Property fld_tipo_prestamoColumn As DataColumn
            Get
                Return Me.columnfld_tipo_prestamo
            End Get
        End Property
        
        Friend ReadOnly Property fld_ck_noColumn As DataColumn
            Get
                Return Me.columnfld_ck_no
            End Get
        End Property
        
        Friend ReadOnly Property fld_tipo_garantiaColumn As DataColumn
            Get
                Return Me.columnfld_tipo_garantia
            End Get
        End Property
        
        Friend ReadOnly Property fld_garantiaColumn As DataColumn
            Get
                Return Me.columnfld_garantia
            End Get
        End Property
        
        Friend ReadOnly Property fldFinanciamientoColumn As DataColumn
            Get
                Return Me.columnfldFinanciamiento
            End Get
        End Property
        
        Friend ReadOnly Property fldMontoFinanColumn As DataColumn
            Get
                Return Me.columnfldMontoFinan
            End Get
        End Property
        
        Friend ReadOnly Property fldMontoInicialColumn As DataColumn
            Get
                Return Me.columnfldMontoInicial
            End Get
        End Property
        
        Friend ReadOnly Property fldCodInmColumn As DataColumn
            Get
                Return Me.columnfldCodInm
            End Get
        End Property
        
        Friend ReadOnly Property fldDescInmColumn As DataColumn
            Get
                Return Me.columnfldDescInm
            End Get
        End Property
        
        Friend ReadOnly Property fldMetrosColumn As DataColumn
            Get
                Return Me.columnfldMetros
            End Get
        End Property
        
        Friend ReadOnly Property fldPrecioMetroColumn As DataColumn
            Get
                Return Me.columnfldPrecioMetro
            End Get
        End Property
        
        Friend ReadOnly Property fldTazaMoraColumn As DataColumn
            Get
                Return Me.columnfldTazaMora
            End Get
        End Property
        
        Friend ReadOnly Property fldNotaColumn As DataColumn
            Get
                Return Me.columnfldNota
            End Get
        End Property
        
        Friend ReadOnly Property fld_socio_rncColumn As DataColumn
            Get
                Return Me.columnfld_socio_rnc
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_tabla_prestamosRow
            Get
                Return CType(Me.Rows(index),view_tabla_prestamosRow)
            End Get
        End Property
        
        Public Event view_tabla_prestamosRowChanged As view_tabla_prestamosRowChangeEventHandler
        
        Public Event view_tabla_prestamosRowChanging As view_tabla_prestamosRowChangeEventHandler
        
        Public Event view_tabla_prestamosRowDeleted As view_tabla_prestamosRowChangeEventHandler
        
        Public Event view_tabla_prestamosRowDeleting As view_tabla_prestamosRowChangeEventHandler
        
        Public Overloads Sub Addview_tabla_prestamosRow(ByVal row As view_tabla_prestamosRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addview_tabla_prestamosRow( _
                    ByVal fld_no_cuotas As String,  _
                    ByVal fld_id_del_cliente_cuotas As Integer,  _
                    ByVal fld_id_del_prestamo As Integer,  _
                    ByVal fld_fecha_entrega_cuotas As Date,  _
                    ByVal fld_fecha_termina_cuotas As Date,  _
                    ByVal fld_fecha_ultimo_abono_cuotas As Date,  _
                    ByVal fld_capital_cuota As Double,  _
                    ByVal fld_interes_cuota As Double,  _
                    ByVal fld_monto_cuotas As Double,  _
                    ByVal fld_abono_cuotas As Double,  _
                    ByVal fld_balance_cuotas As Double,  _
                    ByVal fld_usuario_cuotas As String,  _
                    ByVal fld_status_cuotas As String,  _
                    ByVal fld_pendiente_amortizar As Double,  _
                    ByVal fld_total_amortizado As Double,  _
                    ByVal fld_capital_cuota_abono As Double,  _
                    ByVal fld_capital_cuota_balance As Double,  _
                    ByVal fld_interes_cuota_abono As Double,  _
                    ByVal fld_interes_cuota_balance As Double,  _
                    ByVal fld_ultimo_abono_interes As Double,  _
                    ByVal fld_ultimo_abono_capital As Double,  _
                    ByVal fld_monto_mora As Double,  _
                    ByVal fld_abono_mora As Double,  _
                    ByVal fld_balance_mora As Double,  _
                    ByVal fld_ultimo_abono_mora As Double,  _
                    ByVal fld_dias_vencimiento As Integer,  _
                    ByVal fld_socio As String,  _
                    ByVal fld_atraso_cuotas As Double,  _
                    ByVal fld_tipo_cuotas As String,  _
                    ByVal fld_bce_prestamo As Double,  _
                    ByVal fld_cant_cuotas As Double,  _
                    ByVal fldchk As String,  _
                    ByVal fld_termina_calculo_interes As String,  _
                    ByVal fld_fecha_calculo_interes As Date,  _
                    ByVal fld_id_del_cliente As Integer,  _
                    ByVal fld_clasificacion As String,  _
                    ByVal fld_fecha_entrega As Date,  _
                    ByVal fld_fecha_termina As Date,  _
                    ByVal fld_fecha_calcula_interes As Date,  _
                    ByVal fld_cantidad_cuotas As Integer,  _
                    ByVal fld_monto_cuotas_a As Double,  _
                    ByVal fld_capital_prestamo As Double,  _
                    ByVal fld_monto As Double,  _
                    ByVal fld_abono As Double,  _
                    ByVal fld_balance As Double,  _
                    ByVal fld_usuario As String,  _
                    ByVal fld_fecha_ultimo_abono As Date,  _
                    ByVal fld_status_prestamos As String,  _
                    ByVal fld_anos As Double,  _
                    ByVal fld_interes_p As Double,  _
                    ByVal fld_tipo_prestamo As String,  _
                    ByVal fld_ck_no As String,  _
                    ByVal fld_tipo_garantia As String,  _
                    ByVal fld_garantia As String,  _
                    ByVal fldFinanciamiento As String,  _
                    ByVal fldMontoFinan As Double,  _
                    ByVal fldMontoInicial As Double,  _
                    ByVal fldCodInm As Integer,  _
                    ByVal fldDescInm As String,  _
                    ByVal fldMetros As Double,  _
                    ByVal fldPrecioMetro As Double,  _
                    ByVal fldTazaMora As Double,  _
                    ByVal fldNota As String,  _
                    ByVal fld_socio_rnc As String) As view_tabla_prestamosRow
            Dim rowview_tabla_prestamosRow As view_tabla_prestamosRow = CType(Me.NewRow,view_tabla_prestamosRow)
            rowview_tabla_prestamosRow.ItemArray = New Object() {Nothing, fld_no_cuotas, fld_id_del_cliente_cuotas, fld_id_del_prestamo, fld_fecha_entrega_cuotas, fld_fecha_termina_cuotas, fld_fecha_ultimo_abono_cuotas, fld_capital_cuota, fld_interes_cuota, fld_monto_cuotas, fld_abono_cuotas, fld_balance_cuotas, fld_usuario_cuotas, fld_status_cuotas, fld_pendiente_amortizar, fld_total_amortizado, fld_capital_cuota_abono, fld_capital_cuota_balance, fld_interes_cuota_abono, fld_interes_cuota_balance, fld_ultimo_abono_interes, fld_ultimo_abono_capital, fld_monto_mora, fld_abono_mora, fld_balance_mora, fld_ultimo_abono_mora, fld_dias_vencimiento, fld_socio, fld_atraso_cuotas, fld_tipo_cuotas, fld_bce_prestamo, fld_cant_cuotas, fldchk, fld_termina_calculo_interes, fld_fecha_calculo_interes, Nothing, fld_id_del_cliente, fld_clasificacion, fld_fecha_entrega, fld_fecha_termina, fld_fecha_calcula_interes, fld_cantidad_cuotas, fld_monto_cuotas_a, fld_capital_prestamo, fld_monto, fld_abono, fld_balance, fld_usuario, fld_fecha_ultimo_abono, fld_status_prestamos, fld_anos, fld_interes_p, fld_tipo_prestamo, fld_ck_no, fld_tipo_garantia, fld_garantia, fldFinanciamiento, fldMontoFinan, fldMontoInicial, fldCodInm, fldDescInm, fldMetros, fldPrecioMetro, fldTazaMora, fldNota, fld_socio_rnc}
            Me.Rows.Add(rowview_tabla_prestamosRow)
            Return rowview_tabla_prestamosRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As view_tabla_prestamosDataTable = CType(MyBase.Clone,view_tabla_prestamosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New view_tabla_prestamosDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id_cuotas = Me.Columns("fld_id_cuotas")
            Me.columnfld_no_cuotas = Me.Columns("fld_no_cuotas")
            Me.columnfld_id_del_cliente_cuotas = Me.Columns("fld_id_del_cliente_cuotas")
            Me.columnfld_id_del_prestamo = Me.Columns("fld_id_del_prestamo")
            Me.columnfld_fecha_entrega_cuotas = Me.Columns("fld_fecha_entrega_cuotas")
            Me.columnfld_fecha_termina_cuotas = Me.Columns("fld_fecha_termina_cuotas")
            Me.columnfld_fecha_ultimo_abono_cuotas = Me.Columns("fld_fecha_ultimo_abono_cuotas")
            Me.columnfld_capital_cuota = Me.Columns("fld_capital_cuota")
            Me.columnfld_interes_cuota = Me.Columns("fld_interes_cuota")
            Me.columnfld_monto_cuotas = Me.Columns("fld_monto_cuotas")
            Me.columnfld_abono_cuotas = Me.Columns("fld_abono_cuotas")
            Me.columnfld_balance_cuotas = Me.Columns("fld_balance_cuotas")
            Me.columnfld_usuario_cuotas = Me.Columns("fld_usuario_cuotas")
            Me.columnfld_status_cuotas = Me.Columns("fld_status_cuotas")
            Me.columnfld_pendiente_amortizar = Me.Columns("fld_pendiente_amortizar")
            Me.columnfld_total_amortizado = Me.Columns("fld_total_amortizado")
            Me.columnfld_capital_cuota_abono = Me.Columns("fld_capital_cuota_abono")
            Me.columnfld_capital_cuota_balance = Me.Columns("fld_capital_cuota_balance")
            Me.columnfld_interes_cuota_abono = Me.Columns("fld_interes_cuota_abono")
            Me.columnfld_interes_cuota_balance = Me.Columns("fld_interes_cuota_balance")
            Me.columnfld_ultimo_abono_interes = Me.Columns("fld_ultimo_abono_interes")
            Me.columnfld_ultimo_abono_capital = Me.Columns("fld_ultimo_abono_capital")
            Me.columnfld_monto_mora = Me.Columns("fld_monto_mora")
            Me.columnfld_abono_mora = Me.Columns("fld_abono_mora")
            Me.columnfld_balance_mora = Me.Columns("fld_balance_mora")
            Me.columnfld_ultimo_abono_mora = Me.Columns("fld_ultimo_abono_mora")
            Me.columnfld_dias_vencimiento = Me.Columns("fld_dias_vencimiento")
            Me.columnfld_socio = Me.Columns("fld_socio")
            Me.columnfld_atraso_cuotas = Me.Columns("fld_atraso_cuotas")
            Me.columnfld_tipo_cuotas = Me.Columns("fld_tipo_cuotas")
            Me.columnfld_bce_prestamo = Me.Columns("fld_bce_prestamo")
            Me.columnfld_cant_cuotas = Me.Columns("fld_cant_cuotas")
            Me.columnfldchk = Me.Columns("fldchk")
            Me.columnfld_termina_calculo_interes = Me.Columns("fld_termina_calculo_interes")
            Me.columnfld_fecha_calculo_interes = Me.Columns("fld_fecha_calculo_interes")
            Me.columnfld_id_prestamos = Me.Columns("fld_id_prestamos")
            Me.columnfld_id_del_cliente = Me.Columns("fld_id_del_cliente")
            Me.columnfld_clasificacion = Me.Columns("fld_clasificacion")
            Me.columnfld_fecha_entrega = Me.Columns("fld_fecha_entrega")
            Me.columnfld_fecha_termina = Me.Columns("fld_fecha_termina")
            Me.columnfld_fecha_calcula_interes = Me.Columns("fld_fecha_calcula_interes")
            Me.columnfld_cantidad_cuotas = Me.Columns("fld_cantidad_cuotas")
            Me.columnfld_monto_cuotas_a = Me.Columns("fld_monto_cuotas_a")
            Me.columnfld_capital_prestamo = Me.Columns("fld_capital_prestamo")
            Me.columnfld_monto = Me.Columns("fld_monto")
            Me.columnfld_abono = Me.Columns("fld_abono")
            Me.columnfld_balance = Me.Columns("fld_balance")
            Me.columnfld_usuario = Me.Columns("fld_usuario")
            Me.columnfld_fecha_ultimo_abono = Me.Columns("fld_fecha_ultimo_abono")
            Me.columnfld_status_prestamos = Me.Columns("fld_status_prestamos")
            Me.columnfld_anos = Me.Columns("fld_anos")
            Me.columnfld_interes_p = Me.Columns("fld_interes_p")
            Me.columnfld_tipo_prestamo = Me.Columns("fld_tipo_prestamo")
            Me.columnfld_ck_no = Me.Columns("fld_ck_no")
            Me.columnfld_tipo_garantia = Me.Columns("fld_tipo_garantia")
            Me.columnfld_garantia = Me.Columns("fld_garantia")
            Me.columnfldFinanciamiento = Me.Columns("fldFinanciamiento")
            Me.columnfldMontoFinan = Me.Columns("fldMontoFinan")
            Me.columnfldMontoInicial = Me.Columns("fldMontoInicial")
            Me.columnfldCodInm = Me.Columns("fldCodInm")
            Me.columnfldDescInm = Me.Columns("fldDescInm")
            Me.columnfldMetros = Me.Columns("fldMetros")
            Me.columnfldPrecioMetro = Me.Columns("fldPrecioMetro")
            Me.columnfldTazaMora = Me.Columns("fldTazaMora")
            Me.columnfldNota = Me.Columns("fldNota")
            Me.columnfld_socio_rnc = Me.Columns("fld_socio_rnc")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id_cuotas = New DataColumn("fld_id_cuotas", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_cuotas)
            Me.columnfld_no_cuotas = New DataColumn("fld_no_cuotas", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_no_cuotas)
            Me.columnfld_id_del_cliente_cuotas = New DataColumn("fld_id_del_cliente_cuotas", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_del_cliente_cuotas)
            Me.columnfld_id_del_prestamo = New DataColumn("fld_id_del_prestamo", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_del_prestamo)
            Me.columnfld_fecha_entrega_cuotas = New DataColumn("fld_fecha_entrega_cuotas", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha_entrega_cuotas)
            Me.columnfld_fecha_termina_cuotas = New DataColumn("fld_fecha_termina_cuotas", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha_termina_cuotas)
            Me.columnfld_fecha_ultimo_abono_cuotas = New DataColumn("fld_fecha_ultimo_abono_cuotas", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha_ultimo_abono_cuotas)
            Me.columnfld_capital_cuota = New DataColumn("fld_capital_cuota", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_capital_cuota)
            Me.columnfld_interes_cuota = New DataColumn("fld_interes_cuota", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_interes_cuota)
            Me.columnfld_monto_cuotas = New DataColumn("fld_monto_cuotas", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto_cuotas)
            Me.columnfld_abono_cuotas = New DataColumn("fld_abono_cuotas", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_abono_cuotas)
            Me.columnfld_balance_cuotas = New DataColumn("fld_balance_cuotas", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_balance_cuotas)
            Me.columnfld_usuario_cuotas = New DataColumn("fld_usuario_cuotas", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_usuario_cuotas)
            Me.columnfld_status_cuotas = New DataColumn("fld_status_cuotas", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_status_cuotas)
            Me.columnfld_pendiente_amortizar = New DataColumn("fld_pendiente_amortizar", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_pendiente_amortizar)
            Me.columnfld_total_amortizado = New DataColumn("fld_total_amortizado", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_total_amortizado)
            Me.columnfld_capital_cuota_abono = New DataColumn("fld_capital_cuota_abono", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_capital_cuota_abono)
            Me.columnfld_capital_cuota_balance = New DataColumn("fld_capital_cuota_balance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_capital_cuota_balance)
            Me.columnfld_interes_cuota_abono = New DataColumn("fld_interes_cuota_abono", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_interes_cuota_abono)
            Me.columnfld_interes_cuota_balance = New DataColumn("fld_interes_cuota_balance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_interes_cuota_balance)
            Me.columnfld_ultimo_abono_interes = New DataColumn("fld_ultimo_abono_interes", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ultimo_abono_interes)
            Me.columnfld_ultimo_abono_capital = New DataColumn("fld_ultimo_abono_capital", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ultimo_abono_capital)
            Me.columnfld_monto_mora = New DataColumn("fld_monto_mora", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto_mora)
            Me.columnfld_abono_mora = New DataColumn("fld_abono_mora", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_abono_mora)
            Me.columnfld_balance_mora = New DataColumn("fld_balance_mora", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_balance_mora)
            Me.columnfld_ultimo_abono_mora = New DataColumn("fld_ultimo_abono_mora", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ultimo_abono_mora)
            Me.columnfld_dias_vencimiento = New DataColumn("fld_dias_vencimiento", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_dias_vencimiento)
            Me.columnfld_socio = New DataColumn("fld_socio", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_socio)
            Me.columnfld_atraso_cuotas = New DataColumn("fld_atraso_cuotas", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_atraso_cuotas)
            Me.columnfld_tipo_cuotas = New DataColumn("fld_tipo_cuotas", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_tipo_cuotas)
            Me.columnfld_bce_prestamo = New DataColumn("fld_bce_prestamo", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce_prestamo)
            Me.columnfld_cant_cuotas = New DataColumn("fld_cant_cuotas", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cant_cuotas)
            Me.columnfldchk = New DataColumn("fldchk", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldchk)
            Me.columnfld_termina_calculo_interes = New DataColumn("fld_termina_calculo_interes", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_termina_calculo_interes)
            Me.columnfld_fecha_calculo_interes = New DataColumn("fld_fecha_calculo_interes", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha_calculo_interes)
            Me.columnfld_id_prestamos = New DataColumn("fld_id_prestamos", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_prestamos)
            Me.columnfld_id_del_cliente = New DataColumn("fld_id_del_cliente", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_del_cliente)
            Me.columnfld_clasificacion = New DataColumn("fld_clasificacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_clasificacion)
            Me.columnfld_fecha_entrega = New DataColumn("fld_fecha_entrega", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha_entrega)
            Me.columnfld_fecha_termina = New DataColumn("fld_fecha_termina", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha_termina)
            Me.columnfld_fecha_calcula_interes = New DataColumn("fld_fecha_calcula_interes", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha_calcula_interes)
            Me.columnfld_cantidad_cuotas = New DataColumn("fld_cantidad_cuotas", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cantidad_cuotas)
            Me.columnfld_monto_cuotas_a = New DataColumn("fld_monto_cuotas_a", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto_cuotas_a)
            Me.columnfld_capital_prestamo = New DataColumn("fld_capital_prestamo", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_capital_prestamo)
            Me.columnfld_monto = New DataColumn("fld_monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto)
            Me.columnfld_abono = New DataColumn("fld_abono", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_abono)
            Me.columnfld_balance = New DataColumn("fld_balance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_balance)
            Me.columnfld_usuario = New DataColumn("fld_usuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_usuario)
            Me.columnfld_fecha_ultimo_abono = New DataColumn("fld_fecha_ultimo_abono", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha_ultimo_abono)
            Me.columnfld_status_prestamos = New DataColumn("fld_status_prestamos", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_status_prestamos)
            Me.columnfld_anos = New DataColumn("fld_anos", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_anos)
            Me.columnfld_interes_p = New DataColumn("fld_interes_p", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_interes_p)
            Me.columnfld_tipo_prestamo = New DataColumn("fld_tipo_prestamo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_tipo_prestamo)
            Me.columnfld_ck_no = New DataColumn("fld_ck_no", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ck_no)
            Me.columnfld_tipo_garantia = New DataColumn("fld_tipo_garantia", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_tipo_garantia)
            Me.columnfld_garantia = New DataColumn("fld_garantia", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_garantia)
            Me.columnfldFinanciamiento = New DataColumn("fldFinanciamiento", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldFinanciamiento)
            Me.columnfldMontoFinan = New DataColumn("fldMontoFinan", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldMontoFinan)
            Me.columnfldMontoInicial = New DataColumn("fldMontoInicial", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldMontoInicial)
            Me.columnfldCodInm = New DataColumn("fldCodInm", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldCodInm)
            Me.columnfldDescInm = New DataColumn("fldDescInm", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldDescInm)
            Me.columnfldMetros = New DataColumn("fldMetros", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldMetros)
            Me.columnfldPrecioMetro = New DataColumn("fldPrecioMetro", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldPrecioMetro)
            Me.columnfldTazaMora = New DataColumn("fldTazaMora", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldTazaMora)
            Me.columnfldNota = New DataColumn("fldNota", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldNota)
            Me.columnfld_socio_rnc = New DataColumn("fld_socio_rnc", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_socio_rnc)
            Me.columnfld_id_cuotas.AutoIncrement = true
            Me.columnfld_id_prestamos.AutoIncrement = true
        End Sub
        
        Public Function Newview_tabla_prestamosRow() As view_tabla_prestamosRow
            Return CType(Me.NewRow,view_tabla_prestamosRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New view_tabla_prestamosRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(view_tabla_prestamosRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_tabla_prestamosRowChangedEvent) Is Nothing) Then
                RaiseEvent view_tabla_prestamosRowChanged(Me, New view_tabla_prestamosRowChangeEvent(CType(e.Row,view_tabla_prestamosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_tabla_prestamosRowChangingEvent) Is Nothing) Then
                RaiseEvent view_tabla_prestamosRowChanging(Me, New view_tabla_prestamosRowChangeEvent(CType(e.Row,view_tabla_prestamosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_tabla_prestamosRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_tabla_prestamosRowDeleted(Me, New view_tabla_prestamosRowChangeEvent(CType(e.Row,view_tabla_prestamosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_tabla_prestamosRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_tabla_prestamosRowDeleting(Me, New view_tabla_prestamosRowChangeEvent(CType(e.Row,view_tabla_prestamosRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeview_tabla_prestamosRow(ByVal row As view_tabla_prestamosRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_tabla_prestamosRow
        Inherits DataRow
        
        Private tableview_tabla_prestamos As view_tabla_prestamosDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_tabla_prestamos = CType(Me.Table,view_tabla_prestamosDataTable)
        End Sub
        
        Public Property fld_id_cuotas As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_id_cuotasColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_id_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_no_cuotas As String
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_no_cuotasColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_no_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_id_del_cliente_cuotas As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_id_del_cliente_cuotasColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_id_del_cliente_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_id_del_prestamo As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_id_del_prestamoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_id_del_prestamoColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha_entrega_cuotas As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_fecha_entrega_cuotasColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_fecha_entrega_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha_termina_cuotas As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_fecha_termina_cuotasColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_fecha_termina_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha_ultimo_abono_cuotas As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_fecha_ultimo_abono_cuotasColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_fecha_ultimo_abono_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_capital_cuota As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_capital_cuotaColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_capital_cuotaColumn) = value
            End Set
        End Property
        
        Public Property fld_interes_cuota As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_interes_cuotaColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_interes_cuotaColumn) = value
            End Set
        End Property
        
        Public Property fld_monto_cuotas As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_monto_cuotasColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_monto_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_abono_cuotas As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_abono_cuotasColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_abono_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_balance_cuotas As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_balance_cuotasColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_balance_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_usuario_cuotas As String
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_usuario_cuotasColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_usuario_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_status_cuotas As String
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_status_cuotasColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_status_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_pendiente_amortizar As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_pendiente_amortizarColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_pendiente_amortizarColumn) = value
            End Set
        End Property
        
        Public Property fld_total_amortizado As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_total_amortizadoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_total_amortizadoColumn) = value
            End Set
        End Property
        
        Public Property fld_capital_cuota_abono As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_capital_cuota_abonoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_capital_cuota_abonoColumn) = value
            End Set
        End Property
        
        Public Property fld_capital_cuota_balance As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_capital_cuota_balanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_capital_cuota_balanceColumn) = value
            End Set
        End Property
        
        Public Property fld_interes_cuota_abono As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_interes_cuota_abonoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_interes_cuota_abonoColumn) = value
            End Set
        End Property
        
        Public Property fld_interes_cuota_balance As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_interes_cuota_balanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_interes_cuota_balanceColumn) = value
            End Set
        End Property
        
        Public Property fld_ultimo_abono_interes As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_ultimo_abono_interesColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_ultimo_abono_interesColumn) = value
            End Set
        End Property
        
        Public Property fld_ultimo_abono_capital As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_ultimo_abono_capitalColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_ultimo_abono_capitalColumn) = value
            End Set
        End Property
        
        Public Property fld_monto_mora As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_monto_moraColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_monto_moraColumn) = value
            End Set
        End Property
        
        Public Property fld_abono_mora As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_abono_moraColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_abono_moraColumn) = value
            End Set
        End Property
        
        Public Property fld_balance_mora As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_balance_moraColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_balance_moraColumn) = value
            End Set
        End Property
        
        Public Property fld_ultimo_abono_mora As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_ultimo_abono_moraColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_ultimo_abono_moraColumn) = value
            End Set
        End Property
        
        Public Property fld_dias_vencimiento As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_dias_vencimientoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_dias_vencimientoColumn) = value
            End Set
        End Property
        
        Public Property fld_socio As String
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_socioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_socioColumn) = value
            End Set
        End Property
        
        Public Property fld_atraso_cuotas As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_atraso_cuotasColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_atraso_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_tipo_cuotas As String
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_tipo_cuotasColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_tipo_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_bce_prestamo As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_bce_prestamoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_bce_prestamoColumn) = value
            End Set
        End Property
        
        Public Property fld_cant_cuotas As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_cant_cuotasColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_cant_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fldchk As String
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fldchkColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fldchkColumn) = value
            End Set
        End Property
        
        Public Property fld_termina_calculo_interes As String
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_termina_calculo_interesColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_termina_calculo_interesColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha_calculo_interes As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_fecha_calculo_interesColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_fecha_calculo_interesColumn) = value
            End Set
        End Property
        
        Public Property fld_id_prestamos As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_id_prestamosColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_id_prestamosColumn) = value
            End Set
        End Property
        
        Public Property fld_id_del_cliente As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_id_del_clienteColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_id_del_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_clasificacion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_clasificacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_clasificacionColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha_entrega As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_fecha_entregaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_fecha_entregaColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha_termina As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_fecha_terminaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_fecha_terminaColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha_calcula_interes As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_fecha_calcula_interesColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_fecha_calcula_interesColumn) = value
            End Set
        End Property
        
        Public Property fld_cantidad_cuotas As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_cantidad_cuotasColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_cantidad_cuotasColumn) = value
            End Set
        End Property
        
        Public Property fld_monto_cuotas_a As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_monto_cuotas_aColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_monto_cuotas_aColumn) = value
            End Set
        End Property
        
        Public Property fld_capital_prestamo As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_capital_prestamoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_capital_prestamoColumn) = value
            End Set
        End Property
        
        Public Property fld_monto As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_montoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_montoColumn) = value
            End Set
        End Property
        
        Public Property fld_abono As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_abonoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_abonoColumn) = value
            End Set
        End Property
        
        Public Property fld_balance As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_balanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_balanceColumn) = value
            End Set
        End Property
        
        Public Property fld_usuario As String
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_usuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_usuarioColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha_ultimo_abono As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_fecha_ultimo_abonoColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_fecha_ultimo_abonoColumn) = value
            End Set
        End Property
        
        Public Property fld_status_prestamos As String
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_status_prestamosColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_status_prestamosColumn) = value
            End Set
        End Property
        
        Public Property fld_anos As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_anosColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_anosColumn) = value
            End Set
        End Property
        
        Public Property fld_interes_p As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_interes_pColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_interes_pColumn) = value
            End Set
        End Property
        
        Public Property fld_tipo_prestamo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_tipo_prestamoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_tipo_prestamoColumn) = value
            End Set
        End Property
        
        Public Property fld_ck_no As String
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_ck_noColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_ck_noColumn) = value
            End Set
        End Property
        
        Public Property fld_tipo_garantia As String
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_tipo_garantiaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_tipo_garantiaColumn) = value
            End Set
        End Property
        
        Public Property fld_garantia As String
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_garantiaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_garantiaColumn) = value
            End Set
        End Property
        
        Public Property fldFinanciamiento As String
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fldFinanciamientoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fldFinanciamientoColumn) = value
            End Set
        End Property
        
        Public Property fldMontoFinan As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fldMontoFinanColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fldMontoFinanColumn) = value
            End Set
        End Property
        
        Public Property fldMontoInicial As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fldMontoInicialColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fldMontoInicialColumn) = value
            End Set
        End Property
        
        Public Property fldCodInm As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fldCodInmColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fldCodInmColumn) = value
            End Set
        End Property
        
        Public Property fldDescInm As String
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fldDescInmColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fldDescInmColumn) = value
            End Set
        End Property
        
        Public Property fldMetros As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fldMetrosColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fldMetrosColumn) = value
            End Set
        End Property
        
        Public Property fldPrecioMetro As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fldPrecioMetroColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fldPrecioMetroColumn) = value
            End Set
        End Property
        
        Public Property fldTazaMora As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fldTazaMoraColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fldTazaMoraColumn) = value
            End Set
        End Property
        
        Public Property fldNota As String
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fldNotaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fldNotaColumn) = value
            End Set
        End Property
        
        Public Property fld_socio_rnc As String
            Get
                Try 
                    Return CType(Me(Me.tableview_tabla_prestamos.fld_socio_rncColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_tabla_prestamos.fld_socio_rncColumn) = value
            End Set
        End Property
        
        Public Function Isfld_id_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_id_cuotasColumn)
        End Function
        
        Public Sub Setfld_id_cuotasNull()
            Me(Me.tableview_tabla_prestamos.fld_id_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_no_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_no_cuotasColumn)
        End Function
        
        Public Sub Setfld_no_cuotasNull()
            Me(Me.tableview_tabla_prestamos.fld_no_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_del_cliente_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_id_del_cliente_cuotasColumn)
        End Function
        
        Public Sub Setfld_id_del_cliente_cuotasNull()
            Me(Me.tableview_tabla_prestamos.fld_id_del_cliente_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_del_prestamoNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_id_del_prestamoColumn)
        End Function
        
        Public Sub Setfld_id_del_prestamoNull()
            Me(Me.tableview_tabla_prestamos.fld_id_del_prestamoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fecha_entrega_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_fecha_entrega_cuotasColumn)
        End Function
        
        Public Sub Setfld_fecha_entrega_cuotasNull()
            Me(Me.tableview_tabla_prestamos.fld_fecha_entrega_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fecha_termina_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_fecha_termina_cuotasColumn)
        End Function
        
        Public Sub Setfld_fecha_termina_cuotasNull()
            Me(Me.tableview_tabla_prestamos.fld_fecha_termina_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fecha_ultimo_abono_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_fecha_ultimo_abono_cuotasColumn)
        End Function
        
        Public Sub Setfld_fecha_ultimo_abono_cuotasNull()
            Me(Me.tableview_tabla_prestamos.fld_fecha_ultimo_abono_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_capital_cuotaNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_capital_cuotaColumn)
        End Function
        
        Public Sub Setfld_capital_cuotaNull()
            Me(Me.tableview_tabla_prestamos.fld_capital_cuotaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_interes_cuotaNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_interes_cuotaColumn)
        End Function
        
        Public Sub Setfld_interes_cuotaNull()
            Me(Me.tableview_tabla_prestamos.fld_interes_cuotaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_monto_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_monto_cuotasColumn)
        End Function
        
        Public Sub Setfld_monto_cuotasNull()
            Me(Me.tableview_tabla_prestamos.fld_monto_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_abono_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_abono_cuotasColumn)
        End Function
        
        Public Sub Setfld_abono_cuotasNull()
            Me(Me.tableview_tabla_prestamos.fld_abono_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_balance_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_balance_cuotasColumn)
        End Function
        
        Public Sub Setfld_balance_cuotasNull()
            Me(Me.tableview_tabla_prestamos.fld_balance_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_usuario_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_usuario_cuotasColumn)
        End Function
        
        Public Sub Setfld_usuario_cuotasNull()
            Me(Me.tableview_tabla_prestamos.fld_usuario_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_status_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_status_cuotasColumn)
        End Function
        
        Public Sub Setfld_status_cuotasNull()
            Me(Me.tableview_tabla_prestamos.fld_status_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_pendiente_amortizarNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_pendiente_amortizarColumn)
        End Function
        
        Public Sub Setfld_pendiente_amortizarNull()
            Me(Me.tableview_tabla_prestamos.fld_pendiente_amortizarColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_total_amortizadoNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_total_amortizadoColumn)
        End Function
        
        Public Sub Setfld_total_amortizadoNull()
            Me(Me.tableview_tabla_prestamos.fld_total_amortizadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_capital_cuota_abonoNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_capital_cuota_abonoColumn)
        End Function
        
        Public Sub Setfld_capital_cuota_abonoNull()
            Me(Me.tableview_tabla_prestamos.fld_capital_cuota_abonoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_capital_cuota_balanceNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_capital_cuota_balanceColumn)
        End Function
        
        Public Sub Setfld_capital_cuota_balanceNull()
            Me(Me.tableview_tabla_prestamos.fld_capital_cuota_balanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_interes_cuota_abonoNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_interes_cuota_abonoColumn)
        End Function
        
        Public Sub Setfld_interes_cuota_abonoNull()
            Me(Me.tableview_tabla_prestamos.fld_interes_cuota_abonoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_interes_cuota_balanceNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_interes_cuota_balanceColumn)
        End Function
        
        Public Sub Setfld_interes_cuota_balanceNull()
            Me(Me.tableview_tabla_prestamos.fld_interes_cuota_balanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ultimo_abono_interesNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_ultimo_abono_interesColumn)
        End Function
        
        Public Sub Setfld_ultimo_abono_interesNull()
            Me(Me.tableview_tabla_prestamos.fld_ultimo_abono_interesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ultimo_abono_capitalNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_ultimo_abono_capitalColumn)
        End Function
        
        Public Sub Setfld_ultimo_abono_capitalNull()
            Me(Me.tableview_tabla_prestamos.fld_ultimo_abono_capitalColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_monto_moraNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_monto_moraColumn)
        End Function
        
        Public Sub Setfld_monto_moraNull()
            Me(Me.tableview_tabla_prestamos.fld_monto_moraColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_abono_moraNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_abono_moraColumn)
        End Function
        
        Public Sub Setfld_abono_moraNull()
            Me(Me.tableview_tabla_prestamos.fld_abono_moraColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_balance_moraNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_balance_moraColumn)
        End Function
        
        Public Sub Setfld_balance_moraNull()
            Me(Me.tableview_tabla_prestamos.fld_balance_moraColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ultimo_abono_moraNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_ultimo_abono_moraColumn)
        End Function
        
        Public Sub Setfld_ultimo_abono_moraNull()
            Me(Me.tableview_tabla_prestamos.fld_ultimo_abono_moraColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_dias_vencimientoNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_dias_vencimientoColumn)
        End Function
        
        Public Sub Setfld_dias_vencimientoNull()
            Me(Me.tableview_tabla_prestamos.fld_dias_vencimientoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_socioNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_socioColumn)
        End Function
        
        Public Sub Setfld_socioNull()
            Me(Me.tableview_tabla_prestamos.fld_socioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_atraso_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_atraso_cuotasColumn)
        End Function
        
        Public Sub Setfld_atraso_cuotasNull()
            Me(Me.tableview_tabla_prestamos.fld_atraso_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_tipo_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_tipo_cuotasColumn)
        End Function
        
        Public Sub Setfld_tipo_cuotasNull()
            Me(Me.tableview_tabla_prestamos.fld_tipo_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bce_prestamoNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_bce_prestamoColumn)
        End Function
        
        Public Sub Setfld_bce_prestamoNull()
            Me(Me.tableview_tabla_prestamos.fld_bce_prestamoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cant_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_cant_cuotasColumn)
        End Function
        
        Public Sub Setfld_cant_cuotasNull()
            Me(Me.tableview_tabla_prestamos.fld_cant_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldchkNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fldchkColumn)
        End Function
        
        Public Sub SetfldchkNull()
            Me(Me.tableview_tabla_prestamos.fldchkColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_termina_calculo_interesNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_termina_calculo_interesColumn)
        End Function
        
        Public Sub Setfld_termina_calculo_interesNull()
            Me(Me.tableview_tabla_prestamos.fld_termina_calculo_interesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fecha_calculo_interesNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_fecha_calculo_interesColumn)
        End Function
        
        Public Sub Setfld_fecha_calculo_interesNull()
            Me(Me.tableview_tabla_prestamos.fld_fecha_calculo_interesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_prestamosNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_id_prestamosColumn)
        End Function
        
        Public Sub Setfld_id_prestamosNull()
            Me(Me.tableview_tabla_prestamos.fld_id_prestamosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_del_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_id_del_clienteColumn)
        End Function
        
        Public Sub Setfld_id_del_clienteNull()
            Me(Me.tableview_tabla_prestamos.fld_id_del_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_clasificacionNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_clasificacionColumn)
        End Function
        
        Public Sub Setfld_clasificacionNull()
            Me(Me.tableview_tabla_prestamos.fld_clasificacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fecha_entregaNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_fecha_entregaColumn)
        End Function
        
        Public Sub Setfld_fecha_entregaNull()
            Me(Me.tableview_tabla_prestamos.fld_fecha_entregaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fecha_terminaNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_fecha_terminaColumn)
        End Function
        
        Public Sub Setfld_fecha_terminaNull()
            Me(Me.tableview_tabla_prestamos.fld_fecha_terminaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fecha_calcula_interesNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_fecha_calcula_interesColumn)
        End Function
        
        Public Sub Setfld_fecha_calcula_interesNull()
            Me(Me.tableview_tabla_prestamos.fld_fecha_calcula_interesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cantidad_cuotasNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_cantidad_cuotasColumn)
        End Function
        
        Public Sub Setfld_cantidad_cuotasNull()
            Me(Me.tableview_tabla_prestamos.fld_cantidad_cuotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_monto_cuotas_aNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_monto_cuotas_aColumn)
        End Function
        
        Public Sub Setfld_monto_cuotas_aNull()
            Me(Me.tableview_tabla_prestamos.fld_monto_cuotas_aColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_capital_prestamoNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_capital_prestamoColumn)
        End Function
        
        Public Sub Setfld_capital_prestamoNull()
            Me(Me.tableview_tabla_prestamos.fld_capital_prestamoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_montoNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_montoColumn)
        End Function
        
        Public Sub Setfld_montoNull()
            Me(Me.tableview_tabla_prestamos.fld_montoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_abonoNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_abonoColumn)
        End Function
        
        Public Sub Setfld_abonoNull()
            Me(Me.tableview_tabla_prestamos.fld_abonoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_balanceNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_balanceColumn)
        End Function
        
        Public Sub Setfld_balanceNull()
            Me(Me.tableview_tabla_prestamos.fld_balanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_usuarioNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_usuarioColumn)
        End Function
        
        Public Sub Setfld_usuarioNull()
            Me(Me.tableview_tabla_prestamos.fld_usuarioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fecha_ultimo_abonoNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_fecha_ultimo_abonoColumn)
        End Function
        
        Public Sub Setfld_fecha_ultimo_abonoNull()
            Me(Me.tableview_tabla_prestamos.fld_fecha_ultimo_abonoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_status_prestamosNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_status_prestamosColumn)
        End Function
        
        Public Sub Setfld_status_prestamosNull()
            Me(Me.tableview_tabla_prestamos.fld_status_prestamosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_anosNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_anosColumn)
        End Function
        
        Public Sub Setfld_anosNull()
            Me(Me.tableview_tabla_prestamos.fld_anosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_interes_pNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_interes_pColumn)
        End Function
        
        Public Sub Setfld_interes_pNull()
            Me(Me.tableview_tabla_prestamos.fld_interes_pColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_tipo_prestamoNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_tipo_prestamoColumn)
        End Function
        
        Public Sub Setfld_tipo_prestamoNull()
            Me(Me.tableview_tabla_prestamos.fld_tipo_prestamoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ck_noNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_ck_noColumn)
        End Function
        
        Public Sub Setfld_ck_noNull()
            Me(Me.tableview_tabla_prestamos.fld_ck_noColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_tipo_garantiaNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_tipo_garantiaColumn)
        End Function
        
        Public Sub Setfld_tipo_garantiaNull()
            Me(Me.tableview_tabla_prestamos.fld_tipo_garantiaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_garantiaNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_garantiaColumn)
        End Function
        
        Public Sub Setfld_garantiaNull()
            Me(Me.tableview_tabla_prestamos.fld_garantiaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldFinanciamientoNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fldFinanciamientoColumn)
        End Function
        
        Public Sub SetfldFinanciamientoNull()
            Me(Me.tableview_tabla_prestamos.fldFinanciamientoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldMontoFinanNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fldMontoFinanColumn)
        End Function
        
        Public Sub SetfldMontoFinanNull()
            Me(Me.tableview_tabla_prestamos.fldMontoFinanColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldMontoInicialNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fldMontoInicialColumn)
        End Function
        
        Public Sub SetfldMontoInicialNull()
            Me(Me.tableview_tabla_prestamos.fldMontoInicialColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldCodInmNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fldCodInmColumn)
        End Function
        
        Public Sub SetfldCodInmNull()
            Me(Me.tableview_tabla_prestamos.fldCodInmColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldDescInmNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fldDescInmColumn)
        End Function
        
        Public Sub SetfldDescInmNull()
            Me(Me.tableview_tabla_prestamos.fldDescInmColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldMetrosNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fldMetrosColumn)
        End Function
        
        Public Sub SetfldMetrosNull()
            Me(Me.tableview_tabla_prestamos.fldMetrosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldPrecioMetroNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fldPrecioMetroColumn)
        End Function
        
        Public Sub SetfldPrecioMetroNull()
            Me(Me.tableview_tabla_prestamos.fldPrecioMetroColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldTazaMoraNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fldTazaMoraColumn)
        End Function
        
        Public Sub SetfldTazaMoraNull()
            Me(Me.tableview_tabla_prestamos.fldTazaMoraColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldNotaNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fldNotaColumn)
        End Function
        
        Public Sub SetfldNotaNull()
            Me(Me.tableview_tabla_prestamos.fldNotaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_socio_rncNull() As Boolean
            Return Me.IsNull(Me.tableview_tabla_prestamos.fld_socio_rncColumn)
        End Function
        
        Public Sub Setfld_socio_rncNull()
            Me(Me.tableview_tabla_prestamos.fld_socio_rncColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_tabla_prestamosRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As view_tabla_prestamosRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As view_tabla_prestamosRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As view_tabla_prestamosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_retirosDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnID As DataColumn
        
        Private columnIDAhorro As DataColumn
        
        Private columnIDCliente As DataColumn
        
        Private columnFecha As DataColumn
        
        Private columnTipo As DataColumn
        
        Private columnConcepto As DataColumn
        
        Private columnMonto As DataColumn
        
        Private columnUsuario As DataColumn
        
        Private columnfld_id As DataColumn
        
        Private columnTipoDocumento As DataColumn
        
        Private columnfld_FullName As DataColumn
        
        Private columnfld_apodo As DataColumn
        
        Private columnfld_Identity As DataColumn
        
        Private columnfld_Phone As DataColumn
        
        Private columnfld_Phone2 As DataColumn
        
        Private columnfld_Address As DataColumn
        
        Private columnfld_City_id As DataColumn
        
        Private columnfld_City As DataColumn
        
        Private columnfld_Status As DataColumn
        
        Private columnfld_bce As DataColumn
        
        Private columnfld_cod_zona As DataColumn
        
        Private columnfld_zona As DataColumn
        
        Private columnfld_nombre_con As DataColumn
        
        Private columnfld_apodo_con As DataColumn
        
        Private columnfld_cedula_con As DataColumn
        
        Private columnfld_telefono_con As DataColumn
        
        Private columnfld_celular_con As DataColumn
        
        Private columnfld_ref_personales_cliente As DataColumn
        
        Private columnfld_ref_comerciales_cliente As DataColumn
        
        Private columnfld_nombre_gar As DataColumn
        
        Private columnfld_apodo_gar As DataColumn
        
        Private columnfld_cedula_gar As DataColumn
        
        Private columnfld_telefono_gar As DataColumn
        
        Private columnfld_celular_gar As DataColumn
        
        Private columnfld_direccion_gar As DataColumn
        
        Private columnfld_ciudad_gar As DataColumn
        
        Private columnfld_ref_personales_gar As DataColumn
        
        Private columnfld_ref_comerciales_gar As DataColumn
        
        Private columnfld_ingresos_mesuales As DataColumn
        
        Private columnfld_nombre_banco1 As DataColumn
        
        Private columnfld_cuenta_banco1 As DataColumn
        
        Private columnfld_nombre_banco2 As DataColumn
        
        Private columnfld_cuenta_banco2 As DataColumn
        
        Private columnfld_otra_informacion As DataColumn
        
        Private columnfld_nombre_con_gar As DataColumn
        
        Private columnfld_apodo_con_gar As DataColumn
        
        Private columnfld_cedula_con_gar As DataColumn
        
        Private columnfld_telefono_con_gar As DataColumn
        
        Private columnfld_celular_con_gar As DataColumn
        
        Private columnfld_edad As DataColumn
        
        Private columnfld_estado_civil As DataColumn
        
        Private columnfld_edad_gar As DataColumn
        
        Private columnfld_estado_civil_gar As DataColumn
        
        Private columnfld_ocupacion_cliente As DataColumn
        
        Private columnfld_ocupacion_gar As DataColumn
        
        Private columnfld_sector_id As DataColumn
        
        Private columnfld_sector As DataColumn
        
        Private columnfld_categoria As DataColumn
        
        Private columnfld_limite As DataColumn
        
        Private columnPuesto As DataColumn
        
        Private columnTimpoTrabajo As DataColumn
        
        Private columnReferidoPor As DataColumn
        
        Private columnOriundo As DataColumn
        
        Private columnDataCredito As DataColumn
        
        Friend Sub New()
            MyBase.New("view_retiros")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property IDColumn As DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        Friend ReadOnly Property IDAhorroColumn As DataColumn
            Get
                Return Me.columnIDAhorro
            End Get
        End Property
        
        Friend ReadOnly Property IDClienteColumn As DataColumn
            Get
                Return Me.columnIDCliente
            End Get
        End Property
        
        Friend ReadOnly Property FechaColumn As DataColumn
            Get
                Return Me.columnFecha
            End Get
        End Property
        
        Friend ReadOnly Property TipoColumn As DataColumn
            Get
                Return Me.columnTipo
            End Get
        End Property
        
        Friend ReadOnly Property ConceptoColumn As DataColumn
            Get
                Return Me.columnConcepto
            End Get
        End Property
        
        Friend ReadOnly Property MontoColumn As DataColumn
            Get
                Return Me.columnMonto
            End Get
        End Property
        
        Friend ReadOnly Property UsuarioColumn As DataColumn
            Get
                Return Me.columnUsuario
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property TipoDocumentoColumn As DataColumn
            Get
                Return Me.columnTipoDocumento
            End Get
        End Property
        
        Friend ReadOnly Property fld_FullNameColumn As DataColumn
            Get
                Return Me.columnfld_FullName
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodoColumn As DataColumn
            Get
                Return Me.columnfld_apodo
            End Get
        End Property
        
        Friend ReadOnly Property fld_IdentityColumn As DataColumn
            Get
                Return Me.columnfld_Identity
            End Get
        End Property
        
        Friend ReadOnly Property fld_PhoneColumn As DataColumn
            Get
                Return Me.columnfld_Phone
            End Get
        End Property
        
        Friend ReadOnly Property fld_Phone2Column As DataColumn
            Get
                Return Me.columnfld_Phone2
            End Get
        End Property
        
        Friend ReadOnly Property fld_AddressColumn As DataColumn
            Get
                Return Me.columnfld_Address
            End Get
        End Property
        
        Friend ReadOnly Property fld_City_idColumn As DataColumn
            Get
                Return Me.columnfld_City_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_CityColumn As DataColumn
            Get
                Return Me.columnfld_City
            End Get
        End Property
        
        Friend ReadOnly Property fld_StatusColumn As DataColumn
            Get
                Return Me.columnfld_Status
            End Get
        End Property
        
        Friend ReadOnly Property fld_bceColumn As DataColumn
            Get
                Return Me.columnfld_bce
            End Get
        End Property
        
        Friend ReadOnly Property fld_cod_zonaColumn As DataColumn
            Get
                Return Me.columnfld_cod_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_zonaColumn As DataColumn
            Get
                Return Me.columnfld_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_conColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_conColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_conColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_conColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_conColumn As DataColumn
            Get
                Return Me.columnfld_celular_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_direccion_garColumn As DataColumn
            Get
                Return Me.columnfld_direccion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ciudad_garColumn As DataColumn
            Get
                Return Me.columnfld_ciudad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ingresos_mesualesColumn As DataColumn
            Get
                Return Me.columnfld_ingresos_mesuales
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco1Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco1Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco2Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco2Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_otra_informacionColumn As DataColumn
            Get
                Return Me.columnfld_otra_informacion
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_con_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_con_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_con_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_con_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_con_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_edadColumn As DataColumn
            Get
                Return Me.columnfld_edad
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civilColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil
            End Get
        End Property
        
        Friend ReadOnly Property fld_edad_garColumn As DataColumn
            Get
                Return Me.columnfld_edad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civil_garColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ocupacion_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ocupacion_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ocupacion_garColumn As DataColumn
            Get
                Return Me.columnfld_ocupacion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_sector_idColumn As DataColumn
            Get
                Return Me.columnfld_sector_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_sectorColumn As DataColumn
            Get
                Return Me.columnfld_sector
            End Get
        End Property
        
        Friend ReadOnly Property fld_categoriaColumn As DataColumn
            Get
                Return Me.columnfld_categoria
            End Get
        End Property
        
        Friend ReadOnly Property fld_limiteColumn As DataColumn
            Get
                Return Me.columnfld_limite
            End Get
        End Property
        
        Friend ReadOnly Property PuestoColumn As DataColumn
            Get
                Return Me.columnPuesto
            End Get
        End Property
        
        Friend ReadOnly Property TimpoTrabajoColumn As DataColumn
            Get
                Return Me.columnTimpoTrabajo
            End Get
        End Property
        
        Friend ReadOnly Property ReferidoPorColumn As DataColumn
            Get
                Return Me.columnReferidoPor
            End Get
        End Property
        
        Friend ReadOnly Property OriundoColumn As DataColumn
            Get
                Return Me.columnOriundo
            End Get
        End Property
        
        Friend ReadOnly Property DataCreditoColumn As DataColumn
            Get
                Return Me.columnDataCredito
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_retirosRow
            Get
                Return CType(Me.Rows(index),view_retirosRow)
            End Get
        End Property
        
        Public Event view_retirosRowChanged As view_retirosRowChangeEventHandler
        
        Public Event view_retirosRowChanging As view_retirosRowChangeEventHandler
        
        Public Event view_retirosRowDeleted As view_retirosRowChangeEventHandler
        
        Public Event view_retirosRowDeleting As view_retirosRowChangeEventHandler
        
        Public Overloads Sub Addview_retirosRow(ByVal row As view_retirosRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addview_retirosRow( _
                    ByVal IDAhorro As Integer,  _
                    ByVal IDCliente As Integer,  _
                    ByVal Fecha As Date,  _
                    ByVal Tipo As String,  _
                    ByVal Concepto As String,  _
                    ByVal Monto As Double,  _
                    ByVal Usuario As String,  _
                    ByVal TipoDocumento As Integer,  _
                    ByVal fld_FullName As String,  _
                    ByVal fld_apodo As String,  _
                    ByVal fld_Identity As String,  _
                    ByVal fld_Phone As String,  _
                    ByVal fld_Phone2 As String,  _
                    ByVal fld_Address As String,  _
                    ByVal fld_City_id As Integer,  _
                    ByVal fld_City As String,  _
                    ByVal fld_Status As String,  _
                    ByVal fld_bce As Double,  _
                    ByVal fld_cod_zona As Integer,  _
                    ByVal fld_zona As String,  _
                    ByVal fld_nombre_con As String,  _
                    ByVal fld_apodo_con As String,  _
                    ByVal fld_cedula_con As String,  _
                    ByVal fld_telefono_con As String,  _
                    ByVal fld_celular_con As String,  _
                    ByVal fld_ref_personales_cliente As String,  _
                    ByVal fld_ref_comerciales_cliente As String,  _
                    ByVal fld_nombre_gar As String,  _
                    ByVal fld_apodo_gar As String,  _
                    ByVal fld_cedula_gar As String,  _
                    ByVal fld_telefono_gar As String,  _
                    ByVal fld_celular_gar As String,  _
                    ByVal fld_direccion_gar As String,  _
                    ByVal fld_ciudad_gar As String,  _
                    ByVal fld_ref_personales_gar As String,  _
                    ByVal fld_ref_comerciales_gar As String,  _
                    ByVal fld_ingresos_mesuales As Double,  _
                    ByVal fld_nombre_banco1 As String,  _
                    ByVal fld_cuenta_banco1 As String,  _
                    ByVal fld_nombre_banco2 As String,  _
                    ByVal fld_cuenta_banco2 As String,  _
                    ByVal fld_otra_informacion As String,  _
                    ByVal fld_nombre_con_gar As String,  _
                    ByVal fld_apodo_con_gar As String,  _
                    ByVal fld_cedula_con_gar As String,  _
                    ByVal fld_telefono_con_gar As String,  _
                    ByVal fld_celular_con_gar As String,  _
                    ByVal fld_edad As Integer,  _
                    ByVal fld_estado_civil As String,  _
                    ByVal fld_edad_gar As Integer,  _
                    ByVal fld_estado_civil_gar As String,  _
                    ByVal fld_ocupacion_cliente As String,  _
                    ByVal fld_ocupacion_gar As String,  _
                    ByVal fld_sector_id As Integer,  _
                    ByVal fld_sector As String,  _
                    ByVal fld_categoria As String,  _
                    ByVal fld_limite As Double,  _
                    ByVal Puesto As String,  _
                    ByVal TimpoTrabajo As String,  _
                    ByVal ReferidoPor As String,  _
                    ByVal Oriundo As String,  _
                    ByVal DataCredito As Integer) As view_retirosRow
            Dim rowview_retirosRow As view_retirosRow = CType(Me.NewRow,view_retirosRow)
            rowview_retirosRow.ItemArray = New Object() {Nothing, IDAhorro, IDCliente, Fecha, Tipo, Concepto, Monto, Usuario, Nothing, TipoDocumento, fld_FullName, fld_apodo, fld_Identity, fld_Phone, fld_Phone2, fld_Address, fld_City_id, fld_City, fld_Status, fld_bce, fld_cod_zona, fld_zona, fld_nombre_con, fld_apodo_con, fld_cedula_con, fld_telefono_con, fld_celular_con, fld_ref_personales_cliente, fld_ref_comerciales_cliente, fld_nombre_gar, fld_apodo_gar, fld_cedula_gar, fld_telefono_gar, fld_celular_gar, fld_direccion_gar, fld_ciudad_gar, fld_ref_personales_gar, fld_ref_comerciales_gar, fld_ingresos_mesuales, fld_nombre_banco1, fld_cuenta_banco1, fld_nombre_banco2, fld_cuenta_banco2, fld_otra_informacion, fld_nombre_con_gar, fld_apodo_con_gar, fld_cedula_con_gar, fld_telefono_con_gar, fld_celular_con_gar, fld_edad, fld_estado_civil, fld_edad_gar, fld_estado_civil_gar, fld_ocupacion_cliente, fld_ocupacion_gar, fld_sector_id, fld_sector, fld_categoria, fld_limite, Puesto, TimpoTrabajo, ReferidoPor, Oriundo, DataCredito}
            Me.Rows.Add(rowview_retirosRow)
            Return rowview_retirosRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As view_retirosDataTable = CType(MyBase.Clone,view_retirosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New view_retirosDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnID = Me.Columns("ID")
            Me.columnIDAhorro = Me.Columns("IDAhorro")
            Me.columnIDCliente = Me.Columns("IDCliente")
            Me.columnFecha = Me.Columns("Fecha")
            Me.columnTipo = Me.Columns("Tipo")
            Me.columnConcepto = Me.Columns("Concepto")
            Me.columnMonto = Me.Columns("Monto")
            Me.columnUsuario = Me.Columns("Usuario")
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnTipoDocumento = Me.Columns("TipoDocumento")
            Me.columnfld_FullName = Me.Columns("fld_FullName")
            Me.columnfld_apodo = Me.Columns("fld_apodo")
            Me.columnfld_Identity = Me.Columns("fld_Identity")
            Me.columnfld_Phone = Me.Columns("fld_Phone")
            Me.columnfld_Phone2 = Me.Columns("fld_Phone2")
            Me.columnfld_Address = Me.Columns("fld_Address")
            Me.columnfld_City_id = Me.Columns("fld_City_id")
            Me.columnfld_City = Me.Columns("fld_City")
            Me.columnfld_Status = Me.Columns("fld_Status")
            Me.columnfld_bce = Me.Columns("fld_bce")
            Me.columnfld_cod_zona = Me.Columns("fld_cod_zona")
            Me.columnfld_zona = Me.Columns("fld_zona")
            Me.columnfld_nombre_con = Me.Columns("fld_nombre_con")
            Me.columnfld_apodo_con = Me.Columns("fld_apodo_con")
            Me.columnfld_cedula_con = Me.Columns("fld_cedula_con")
            Me.columnfld_telefono_con = Me.Columns("fld_telefono_con")
            Me.columnfld_celular_con = Me.Columns("fld_celular_con")
            Me.columnfld_ref_personales_cliente = Me.Columns("fld_ref_personales_cliente")
            Me.columnfld_ref_comerciales_cliente = Me.Columns("fld_ref_comerciales_cliente")
            Me.columnfld_nombre_gar = Me.Columns("fld_nombre_gar")
            Me.columnfld_apodo_gar = Me.Columns("fld_apodo_gar")
            Me.columnfld_cedula_gar = Me.Columns("fld_cedula_gar")
            Me.columnfld_telefono_gar = Me.Columns("fld_telefono_gar")
            Me.columnfld_celular_gar = Me.Columns("fld_celular_gar")
            Me.columnfld_direccion_gar = Me.Columns("fld_direccion_gar")
            Me.columnfld_ciudad_gar = Me.Columns("fld_ciudad_gar")
            Me.columnfld_ref_personales_gar = Me.Columns("fld_ref_personales_gar")
            Me.columnfld_ref_comerciales_gar = Me.Columns("fld_ref_comerciales_gar")
            Me.columnfld_ingresos_mesuales = Me.Columns("fld_ingresos_mesuales")
            Me.columnfld_nombre_banco1 = Me.Columns("fld_nombre_banco1")
            Me.columnfld_cuenta_banco1 = Me.Columns("fld_cuenta_banco1")
            Me.columnfld_nombre_banco2 = Me.Columns("fld_nombre_banco2")
            Me.columnfld_cuenta_banco2 = Me.Columns("fld_cuenta_banco2")
            Me.columnfld_otra_informacion = Me.Columns("fld_otra_informacion")
            Me.columnfld_nombre_con_gar = Me.Columns("fld_nombre_con_gar")
            Me.columnfld_apodo_con_gar = Me.Columns("fld_apodo_con_gar")
            Me.columnfld_cedula_con_gar = Me.Columns("fld_cedula_con_gar")
            Me.columnfld_telefono_con_gar = Me.Columns("fld_telefono_con_gar")
            Me.columnfld_celular_con_gar = Me.Columns("fld_celular_con_gar")
            Me.columnfld_edad = Me.Columns("fld_edad")
            Me.columnfld_estado_civil = Me.Columns("fld_estado_civil")
            Me.columnfld_edad_gar = Me.Columns("fld_edad_gar")
            Me.columnfld_estado_civil_gar = Me.Columns("fld_estado_civil_gar")
            Me.columnfld_ocupacion_cliente = Me.Columns("fld_ocupacion_cliente")
            Me.columnfld_ocupacion_gar = Me.Columns("fld_ocupacion_gar")
            Me.columnfld_sector_id = Me.Columns("fld_sector_id")
            Me.columnfld_sector = Me.Columns("fld_sector")
            Me.columnfld_categoria = Me.Columns("fld_categoria")
            Me.columnfld_limite = Me.Columns("fld_limite")
            Me.columnPuesto = Me.Columns("Puesto")
            Me.columnTimpoTrabajo = Me.Columns("TimpoTrabajo")
            Me.columnReferidoPor = Me.Columns("ReferidoPor")
            Me.columnOriundo = Me.Columns("Oriundo")
            Me.columnDataCredito = Me.Columns("DataCredito")
        End Sub
        
        Private Sub InitClass()
            Me.columnID = New DataColumn("ID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnID)
            Me.columnIDAhorro = New DataColumn("IDAhorro", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnIDAhorro)
            Me.columnIDCliente = New DataColumn("IDCliente", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnIDCliente)
            Me.columnFecha = New DataColumn("Fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFecha)
            Me.columnTipo = New DataColumn("Tipo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTipo)
            Me.columnConcepto = New DataColumn("Concepto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnConcepto)
            Me.columnMonto = New DataColumn("Monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMonto)
            Me.columnUsuario = New DataColumn("Usuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnUsuario)
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnTipoDocumento = New DataColumn("TipoDocumento", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTipoDocumento)
            Me.columnfld_FullName = New DataColumn("fld_FullName", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_FullName)
            Me.columnfld_apodo = New DataColumn("fld_apodo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo)
            Me.columnfld_Identity = New DataColumn("fld_Identity", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Identity)
            Me.columnfld_Phone = New DataColumn("fld_Phone", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone)
            Me.columnfld_Phone2 = New DataColumn("fld_Phone2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone2)
            Me.columnfld_Address = New DataColumn("fld_Address", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Address)
            Me.columnfld_City_id = New DataColumn("fld_City_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_City_id)
            Me.columnfld_City = New DataColumn("fld_City", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_City)
            Me.columnfld_Status = New DataColumn("fld_Status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Status)
            Me.columnfld_bce = New DataColumn("fld_bce", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce)
            Me.columnfld_cod_zona = New DataColumn("fld_cod_zona", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cod_zona)
            Me.columnfld_zona = New DataColumn("fld_zona", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_zona)
            Me.columnfld_nombre_con = New DataColumn("fld_nombre_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con)
            Me.columnfld_apodo_con = New DataColumn("fld_apodo_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con)
            Me.columnfld_cedula_con = New DataColumn("fld_cedula_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con)
            Me.columnfld_telefono_con = New DataColumn("fld_telefono_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con)
            Me.columnfld_celular_con = New DataColumn("fld_celular_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con)
            Me.columnfld_ref_personales_cliente = New DataColumn("fld_ref_personales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_cliente)
            Me.columnfld_ref_comerciales_cliente = New DataColumn("fld_ref_comerciales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_cliente)
            Me.columnfld_nombre_gar = New DataColumn("fld_nombre_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_gar)
            Me.columnfld_apodo_gar = New DataColumn("fld_apodo_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_gar)
            Me.columnfld_cedula_gar = New DataColumn("fld_cedula_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_gar)
            Me.columnfld_telefono_gar = New DataColumn("fld_telefono_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_gar)
            Me.columnfld_celular_gar = New DataColumn("fld_celular_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_gar)
            Me.columnfld_direccion_gar = New DataColumn("fld_direccion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_direccion_gar)
            Me.columnfld_ciudad_gar = New DataColumn("fld_ciudad_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ciudad_gar)
            Me.columnfld_ref_personales_gar = New DataColumn("fld_ref_personales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_gar)
            Me.columnfld_ref_comerciales_gar = New DataColumn("fld_ref_comerciales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_gar)
            Me.columnfld_ingresos_mesuales = New DataColumn("fld_ingresos_mesuales", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ingresos_mesuales)
            Me.columnfld_nombre_banco1 = New DataColumn("fld_nombre_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco1)
            Me.columnfld_cuenta_banco1 = New DataColumn("fld_cuenta_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco1)
            Me.columnfld_nombre_banco2 = New DataColumn("fld_nombre_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco2)
            Me.columnfld_cuenta_banco2 = New DataColumn("fld_cuenta_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco2)
            Me.columnfld_otra_informacion = New DataColumn("fld_otra_informacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_otra_informacion)
            Me.columnfld_nombre_con_gar = New DataColumn("fld_nombre_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con_gar)
            Me.columnfld_apodo_con_gar = New DataColumn("fld_apodo_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con_gar)
            Me.columnfld_cedula_con_gar = New DataColumn("fld_cedula_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con_gar)
            Me.columnfld_telefono_con_gar = New DataColumn("fld_telefono_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con_gar)
            Me.columnfld_celular_con_gar = New DataColumn("fld_celular_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con_gar)
            Me.columnfld_edad = New DataColumn("fld_edad", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad)
            Me.columnfld_estado_civil = New DataColumn("fld_estado_civil", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil)
            Me.columnfld_edad_gar = New DataColumn("fld_edad_gar", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad_gar)
            Me.columnfld_estado_civil_gar = New DataColumn("fld_estado_civil_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil_gar)
            Me.columnfld_ocupacion_cliente = New DataColumn("fld_ocupacion_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ocupacion_cliente)
            Me.columnfld_ocupacion_gar = New DataColumn("fld_ocupacion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ocupacion_gar)
            Me.columnfld_sector_id = New DataColumn("fld_sector_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_sector_id)
            Me.columnfld_sector = New DataColumn("fld_sector", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_sector)
            Me.columnfld_categoria = New DataColumn("fld_categoria", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_categoria)
            Me.columnfld_limite = New DataColumn("fld_limite", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_limite)
            Me.columnPuesto = New DataColumn("Puesto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPuesto)
            Me.columnTimpoTrabajo = New DataColumn("TimpoTrabajo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTimpoTrabajo)
            Me.columnReferidoPor = New DataColumn("ReferidoPor", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnReferidoPor)
            Me.columnOriundo = New DataColumn("Oriundo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnOriundo)
            Me.columnDataCredito = New DataColumn("DataCredito", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDataCredito)
            Me.columnID.AutoIncrement = true
            Me.columnfld_id.AutoIncrement = true
        End Sub
        
        Public Function Newview_retirosRow() As view_retirosRow
            Return CType(Me.NewRow,view_retirosRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New view_retirosRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(view_retirosRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_retirosRowChangedEvent) Is Nothing) Then
                RaiseEvent view_retirosRowChanged(Me, New view_retirosRowChangeEvent(CType(e.Row,view_retirosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_retirosRowChangingEvent) Is Nothing) Then
                RaiseEvent view_retirosRowChanging(Me, New view_retirosRowChangeEvent(CType(e.Row,view_retirosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_retirosRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_retirosRowDeleted(Me, New view_retirosRowChangeEvent(CType(e.Row,view_retirosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_retirosRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_retirosRowDeleting(Me, New view_retirosRowChangeEvent(CType(e.Row,view_retirosRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeview_retirosRow(ByVal row As view_retirosRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_retirosRow
        Inherits DataRow
        
        Private tableview_retiros As view_retirosDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_retiros = CType(Me.Table,view_retirosDataTable)
        End Sub
        
        Public Property ID As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.IDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.IDColumn) = value
            End Set
        End Property
        
        Public Property IDAhorro As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.IDAhorroColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.IDAhorroColumn) = value
            End Set
        End Property
        
        Public Property IDCliente As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.IDClienteColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.IDClienteColumn) = value
            End Set
        End Property
        
        Public Property Fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.FechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.FechaColumn) = value
            End Set
        End Property
        
        Public Property Tipo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.TipoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.TipoColumn) = value
            End Set
        End Property
        
        Public Property Concepto As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.ConceptoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.ConceptoColumn) = value
            End Set
        End Property
        
        Public Property Monto As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.MontoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.MontoColumn) = value
            End Set
        End Property
        
        Public Property Usuario As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.UsuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.UsuarioColumn) = value
            End Set
        End Property
        
        Public Property fld_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_idColumn) = value
            End Set
        End Property
        
        Public Property TipoDocumento As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.TipoDocumentoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.TipoDocumentoColumn) = value
            End Set
        End Property
        
        Public Property fld_FullName As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_FullNameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_FullNameColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_apodoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_apodoColumn) = value
            End Set
        End Property
        
        Public Property fld_Identity As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_IdentityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_IdentityColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_PhoneColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_PhoneColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_Phone2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_Phone2Column) = value
            End Set
        End Property
        
        Public Property fld_Address As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_AddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_AddressColumn) = value
            End Set
        End Property
        
        Public Property fld_City_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_City_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_City_idColumn) = value
            End Set
        End Property
        
        Public Property fld_City As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_CityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_CityColumn) = value
            End Set
        End Property
        
        Public Property fld_Status As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_StatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_StatusColumn) = value
            End Set
        End Property
        
        Public Property fld_bce As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_bceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_bceColumn) = value
            End Set
        End Property
        
        Public Property fld_cod_zona As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_cod_zonaColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_cod_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_zona As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_zonaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_nombre_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_nombre_conColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_apodo_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_apodo_conColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_cedula_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_cedula_conColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_telefono_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_telefono_conColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_celular_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_celular_conColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_ref_personales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_ref_personales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_ref_comerciales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_ref_comerciales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_nombre_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_nombre_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_apodo_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_apodo_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_cedula_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_cedula_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_telefono_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_telefono_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_celular_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_celular_garColumn) = value
            End Set
        End Property
        
        Public Property fld_direccion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_direccion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_direccion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ciudad_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_ciudad_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_ciudad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_ref_personales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_ref_personales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_ref_comerciales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_ref_comerciales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ingresos_mesuales As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_ingresos_mesualesColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_ingresos_mesualesColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_nombre_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_nombre_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_cuenta_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_cuenta_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_nombre_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_nombre_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_cuenta_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_cuenta_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_otra_informacion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_otra_informacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_otra_informacionColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_nombre_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_nombre_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_apodo_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_apodo_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_cedula_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_cedula_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_telefono_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_telefono_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_celular_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_celular_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_edad As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_edadColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_edadColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_estado_civilColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_estado_civilColumn) = value
            End Set
        End Property
        
        Public Property fld_edad_gar As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_edad_garColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_edad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_estado_civil_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_estado_civil_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ocupacion_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_ocupacion_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_ocupacion_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ocupacion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_ocupacion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_ocupacion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_sector_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_sector_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_sector_idColumn) = value
            End Set
        End Property
        
        Public Property fld_sector As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_sectorColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_sectorColumn) = value
            End Set
        End Property
        
        Public Property fld_categoria As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_categoriaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_categoriaColumn) = value
            End Set
        End Property
        
        Public Property fld_limite As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.fld_limiteColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.fld_limiteColumn) = value
            End Set
        End Property
        
        Public Property Puesto As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.PuestoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.PuestoColumn) = value
            End Set
        End Property
        
        Public Property TimpoTrabajo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.TimpoTrabajoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.TimpoTrabajoColumn) = value
            End Set
        End Property
        
        Public Property ReferidoPor As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.ReferidoPorColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.ReferidoPorColumn) = value
            End Set
        End Property
        
        Public Property Oriundo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.OriundoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.OriundoColumn) = value
            End Set
        End Property
        
        Public Property DataCredito As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_retiros.DataCreditoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_retiros.DataCreditoColumn) = value
            End Set
        End Property
        
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.IDColumn)
        End Function
        
        Public Sub SetIDNull()
            Me(Me.tableview_retiros.IDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsIDAhorroNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.IDAhorroColumn)
        End Function
        
        Public Sub SetIDAhorroNull()
            Me(Me.tableview_retiros.IDAhorroColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsIDClienteNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.IDClienteColumn)
        End Function
        
        Public Sub SetIDClienteNull()
            Me(Me.tableview_retiros.IDClienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.FechaColumn)
        End Function
        
        Public Sub SetFechaNull()
            Me(Me.tableview_retiros.FechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTipoNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.TipoColumn)
        End Function
        
        Public Sub SetTipoNull()
            Me(Me.tableview_retiros.TipoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsConceptoNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.ConceptoColumn)
        End Function
        
        Public Sub SetConceptoNull()
            Me(Me.tableview_retiros.ConceptoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMontoNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.MontoColumn)
        End Function
        
        Public Sub SetMontoNull()
            Me(Me.tableview_retiros.MontoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsUsuarioNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.UsuarioColumn)
        End Function
        
        Public Sub SetUsuarioNull()
            Me(Me.tableview_retiros.UsuarioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_idNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_idColumn)
        End Function
        
        Public Sub Setfld_idNull()
            Me(Me.tableview_retiros.fld_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTipoDocumentoNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.TipoDocumentoColumn)
        End Function
        
        Public Sub SetTipoDocumentoNull()
            Me(Me.tableview_retiros.TipoDocumentoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_FullNameNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_FullNameColumn)
        End Function
        
        Public Sub Setfld_FullNameNull()
            Me(Me.tableview_retiros.fld_FullNameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodoNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_apodoColumn)
        End Function
        
        Public Sub Setfld_apodoNull()
            Me(Me.tableview_retiros.fld_apodoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_IdentityNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_IdentityColumn)
        End Function
        
        Public Sub Setfld_IdentityNull()
            Me(Me.tableview_retiros.fld_IdentityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_PhoneNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_PhoneColumn)
        End Function
        
        Public Sub Setfld_PhoneNull()
            Me(Me.tableview_retiros.fld_PhoneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_Phone2Null() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_Phone2Column)
        End Function
        
        Public Sub Setfld_Phone2Null()
            Me(Me.tableview_retiros.fld_Phone2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_AddressNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_AddressColumn)
        End Function
        
        Public Sub Setfld_AddressNull()
            Me(Me.tableview_retiros.fld_AddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_City_idNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_City_idColumn)
        End Function
        
        Public Sub Setfld_City_idNull()
            Me(Me.tableview_retiros.fld_City_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_CityNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_CityColumn)
        End Function
        
        Public Sub Setfld_CityNull()
            Me(Me.tableview_retiros.fld_CityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_StatusNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_StatusColumn)
        End Function
        
        Public Sub Setfld_StatusNull()
            Me(Me.tableview_retiros.fld_StatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bceNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_bceColumn)
        End Function
        
        Public Sub Setfld_bceNull()
            Me(Me.tableview_retiros.fld_bceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cod_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_cod_zonaColumn)
        End Function
        
        Public Sub Setfld_cod_zonaNull()
            Me(Me.tableview_retiros.fld_cod_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_zonaColumn)
        End Function
        
        Public Sub Setfld_zonaNull()
            Me(Me.tableview_retiros.fld_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_conNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_nombre_conColumn)
        End Function
        
        Public Sub Setfld_nombre_conNull()
            Me(Me.tableview_retiros.fld_nombre_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_conNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_apodo_conColumn)
        End Function
        
        Public Sub Setfld_apodo_conNull()
            Me(Me.tableview_retiros.fld_apodo_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_conNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_cedula_conColumn)
        End Function
        
        Public Sub Setfld_cedula_conNull()
            Me(Me.tableview_retiros.fld_cedula_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_conNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_telefono_conColumn)
        End Function
        
        Public Sub Setfld_telefono_conNull()
            Me(Me.tableview_retiros.fld_telefono_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_conNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_celular_conColumn)
        End Function
        
        Public Sub Setfld_celular_conNull()
            Me(Me.tableview_retiros.fld_celular_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_ref_personales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_personales_clienteNull()
            Me(Me.tableview_retiros.fld_ref_personales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_ref_comerciales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_clienteNull()
            Me(Me.tableview_retiros.fld_ref_comerciales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_garNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_nombre_garColumn)
        End Function
        
        Public Sub Setfld_nombre_garNull()
            Me(Me.tableview_retiros.fld_nombre_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_garNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_apodo_garColumn)
        End Function
        
        Public Sub Setfld_apodo_garNull()
            Me(Me.tableview_retiros.fld_apodo_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_garNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_cedula_garColumn)
        End Function
        
        Public Sub Setfld_cedula_garNull()
            Me(Me.tableview_retiros.fld_cedula_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_garNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_telefono_garColumn)
        End Function
        
        Public Sub Setfld_telefono_garNull()
            Me(Me.tableview_retiros.fld_telefono_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_garNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_celular_garColumn)
        End Function
        
        Public Sub Setfld_celular_garNull()
            Me(Me.tableview_retiros.fld_celular_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_direccion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_direccion_garColumn)
        End Function
        
        Public Sub Setfld_direccion_garNull()
            Me(Me.tableview_retiros.fld_direccion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ciudad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_ciudad_garColumn)
        End Function
        
        Public Sub Setfld_ciudad_garNull()
            Me(Me.tableview_retiros.fld_ciudad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_ref_personales_garColumn)
        End Function
        
        Public Sub Setfld_ref_personales_garNull()
            Me(Me.tableview_retiros.fld_ref_personales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_ref_comerciales_garColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_garNull()
            Me(Me.tableview_retiros.fld_ref_comerciales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ingresos_mesualesNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_ingresos_mesualesColumn)
        End Function
        
        Public Sub Setfld_ingresos_mesualesNull()
            Me(Me.tableview_retiros.fld_ingresos_mesualesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_nombre_banco1Column)
        End Function
        
        Public Sub Setfld_nombre_banco1Null()
            Me(Me.tableview_retiros.fld_nombre_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_cuenta_banco1Column)
        End Function
        
        Public Sub Setfld_cuenta_banco1Null()
            Me(Me.tableview_retiros.fld_cuenta_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_nombre_banco2Column)
        End Function
        
        Public Sub Setfld_nombre_banco2Null()
            Me(Me.tableview_retiros.fld_nombre_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_cuenta_banco2Column)
        End Function
        
        Public Sub Setfld_cuenta_banco2Null()
            Me(Me.tableview_retiros.fld_cuenta_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_otra_informacionNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_otra_informacionColumn)
        End Function
        
        Public Sub Setfld_otra_informacionNull()
            Me(Me.tableview_retiros.fld_otra_informacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_nombre_con_garColumn)
        End Function
        
        Public Sub Setfld_nombre_con_garNull()
            Me(Me.tableview_retiros.fld_nombre_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_apodo_con_garColumn)
        End Function
        
        Public Sub Setfld_apodo_con_garNull()
            Me(Me.tableview_retiros.fld_apodo_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_cedula_con_garColumn)
        End Function
        
        Public Sub Setfld_cedula_con_garNull()
            Me(Me.tableview_retiros.fld_cedula_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_telefono_con_garColumn)
        End Function
        
        Public Sub Setfld_telefono_con_garNull()
            Me(Me.tableview_retiros.fld_telefono_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_celular_con_garColumn)
        End Function
        
        Public Sub Setfld_celular_con_garNull()
            Me(Me.tableview_retiros.fld_celular_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edadNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_edadColumn)
        End Function
        
        Public Sub Setfld_edadNull()
            Me(Me.tableview_retiros.fld_edadColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civilNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_estado_civilColumn)
        End Function
        
        Public Sub Setfld_estado_civilNull()
            Me(Me.tableview_retiros.fld_estado_civilColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_edad_garColumn)
        End Function
        
        Public Sub Setfld_edad_garNull()
            Me(Me.tableview_retiros.fld_edad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civil_garNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_estado_civil_garColumn)
        End Function
        
        Public Sub Setfld_estado_civil_garNull()
            Me(Me.tableview_retiros.fld_estado_civil_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ocupacion_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_ocupacion_clienteColumn)
        End Function
        
        Public Sub Setfld_ocupacion_clienteNull()
            Me(Me.tableview_retiros.fld_ocupacion_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ocupacion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_ocupacion_garColumn)
        End Function
        
        Public Sub Setfld_ocupacion_garNull()
            Me(Me.tableview_retiros.fld_ocupacion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_sector_idNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_sector_idColumn)
        End Function
        
        Public Sub Setfld_sector_idNull()
            Me(Me.tableview_retiros.fld_sector_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_sectorNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_sectorColumn)
        End Function
        
        Public Sub Setfld_sectorNull()
            Me(Me.tableview_retiros.fld_sectorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_categoriaNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_categoriaColumn)
        End Function
        
        Public Sub Setfld_categoriaNull()
            Me(Me.tableview_retiros.fld_categoriaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_limiteNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.fld_limiteColumn)
        End Function
        
        Public Sub Setfld_limiteNull()
            Me(Me.tableview_retiros.fld_limiteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsPuestoNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.PuestoColumn)
        End Function
        
        Public Sub SetPuestoNull()
            Me(Me.tableview_retiros.PuestoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTimpoTrabajoNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.TimpoTrabajoColumn)
        End Function
        
        Public Sub SetTimpoTrabajoNull()
            Me(Me.tableview_retiros.TimpoTrabajoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsReferidoPorNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.ReferidoPorColumn)
        End Function
        
        Public Sub SetReferidoPorNull()
            Me(Me.tableview_retiros.ReferidoPorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsOriundoNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.OriundoColumn)
        End Function
        
        Public Sub SetOriundoNull()
            Me(Me.tableview_retiros.OriundoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDataCreditoNull() As Boolean
            Return Me.IsNull(Me.tableview_retiros.DataCreditoColumn)
        End Function
        
        Public Sub SetDataCreditoNull()
            Me(Me.tableview_retiros.DataCreditoColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_retirosRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As view_retirosRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As view_retirosRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As view_retirosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_interfascontableDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnID As DataColumn
        
        Private columnFecha As DataColumn
        
        Private columnModulo As DataColumn
        
        Private columnFrm As DataColumn
        
        Private columnDRCuenta As DataColumn
        
        Private columnCRCuenta As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_interfascontable")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property IDColumn As DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        Friend ReadOnly Property FechaColumn As DataColumn
            Get
                Return Me.columnFecha
            End Get
        End Property
        
        Friend ReadOnly Property ModuloColumn As DataColumn
            Get
                Return Me.columnModulo
            End Get
        End Property
        
        Friend ReadOnly Property FrmColumn As DataColumn
            Get
                Return Me.columnFrm
            End Get
        End Property
        
        Friend ReadOnly Property DRCuentaColumn As DataColumn
            Get
                Return Me.columnDRCuenta
            End Get
        End Property
        
        Friend ReadOnly Property CRCuentaColumn As DataColumn
            Get
                Return Me.columnCRCuenta
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_interfascontableRow
            Get
                Return CType(Me.Rows(index),tbl_interfascontableRow)
            End Get
        End Property
        
        Public Event tbl_interfascontableRowChanged As tbl_interfascontableRowChangeEventHandler
        
        Public Event tbl_interfascontableRowChanging As tbl_interfascontableRowChangeEventHandler
        
        Public Event tbl_interfascontableRowDeleted As tbl_interfascontableRowChangeEventHandler
        
        Public Event tbl_interfascontableRowDeleting As tbl_interfascontableRowChangeEventHandler
        
        Public Overloads Sub Addtbl_interfascontableRow(ByVal row As tbl_interfascontableRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_interfascontableRow(ByVal Fecha As Date, ByVal Modulo As String, ByVal Frm As String, ByVal DRCuenta As String, ByVal CRCuenta As String) As tbl_interfascontableRow
            Dim rowtbl_interfascontableRow As tbl_interfascontableRow = CType(Me.NewRow,tbl_interfascontableRow)
            rowtbl_interfascontableRow.ItemArray = New Object() {Nothing, Fecha, Modulo, Frm, DRCuenta, CRCuenta}
            Me.Rows.Add(rowtbl_interfascontableRow)
            Return rowtbl_interfascontableRow
        End Function
        
        Public Function FindByID(ByVal ID As Integer) As tbl_interfascontableRow
            Return CType(Me.Rows.Find(New Object() {ID}),tbl_interfascontableRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_interfascontableDataTable = CType(MyBase.Clone,tbl_interfascontableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_interfascontableDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnID = Me.Columns("ID")
            Me.columnFecha = Me.Columns("Fecha")
            Me.columnModulo = Me.Columns("Modulo")
            Me.columnFrm = Me.Columns("Frm")
            Me.columnDRCuenta = Me.Columns("DRCuenta")
            Me.columnCRCuenta = Me.Columns("CRCuenta")
        End Sub
        
        Private Sub InitClass()
            Me.columnID = New DataColumn("ID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnID)
            Me.columnFecha = New DataColumn("Fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFecha)
            Me.columnModulo = New DataColumn("Modulo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnModulo)
            Me.columnFrm = New DataColumn("Frm", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFrm)
            Me.columnDRCuenta = New DataColumn("DRCuenta", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDRCuenta)
            Me.columnCRCuenta = New DataColumn("CRCuenta", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCRCuenta)
            Me.Constraints.Add(New UniqueConstraint("DS_REPORTESKey20", New DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
        End Sub
        
        Public Function Newtbl_interfascontableRow() As tbl_interfascontableRow
            Return CType(Me.NewRow,tbl_interfascontableRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_interfascontableRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_interfascontableRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_interfascontableRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_interfascontableRowChanged(Me, New tbl_interfascontableRowChangeEvent(CType(e.Row,tbl_interfascontableRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_interfascontableRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_interfascontableRowChanging(Me, New tbl_interfascontableRowChangeEvent(CType(e.Row,tbl_interfascontableRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_interfascontableRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_interfascontableRowDeleted(Me, New tbl_interfascontableRowChangeEvent(CType(e.Row,tbl_interfascontableRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_interfascontableRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_interfascontableRowDeleting(Me, New tbl_interfascontableRowChangeEvent(CType(e.Row,tbl_interfascontableRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_interfascontableRow(ByVal row As tbl_interfascontableRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_interfascontableRow
        Inherits DataRow
        
        Private tabletbl_interfascontable As tbl_interfascontableDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_interfascontable = CType(Me.Table,tbl_interfascontableDataTable)
        End Sub
        
        Public Property ID As Integer
            Get
                Return CType(Me(Me.tabletbl_interfascontable.IDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_interfascontable.IDColumn) = value
            End Set
        End Property
        
        Public Property Fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_interfascontable.FechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_interfascontable.FechaColumn) = value
            End Set
        End Property
        
        Public Property Modulo As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_interfascontable.ModuloColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_interfascontable.ModuloColumn) = value
            End Set
        End Property
        
        Public Property Frm As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_interfascontable.FrmColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_interfascontable.FrmColumn) = value
            End Set
        End Property
        
        Public Property DRCuenta As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_interfascontable.DRCuentaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_interfascontable.DRCuentaColumn) = value
            End Set
        End Property
        
        Public Property CRCuenta As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_interfascontable.CRCuentaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_interfascontable.CRCuentaColumn) = value
            End Set
        End Property
        
        Public Function IsFechaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_interfascontable.FechaColumn)
        End Function
        
        Public Sub SetFechaNull()
            Me(Me.tabletbl_interfascontable.FechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsModuloNull() As Boolean
            Return Me.IsNull(Me.tabletbl_interfascontable.ModuloColumn)
        End Function
        
        Public Sub SetModuloNull()
            Me(Me.tabletbl_interfascontable.ModuloColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFrmNull() As Boolean
            Return Me.IsNull(Me.tabletbl_interfascontable.FrmColumn)
        End Function
        
        Public Sub SetFrmNull()
            Me(Me.tabletbl_interfascontable.FrmColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDRCuentaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_interfascontable.DRCuentaColumn)
        End Function
        
        Public Sub SetDRCuentaNull()
            Me(Me.tabletbl_interfascontable.DRCuentaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCRCuentaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_interfascontable.CRCuentaColumn)
        End Function
        
        Public Sub SetCRCuentaNull()
            Me(Me.tabletbl_interfascontable.CRCuentaColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_interfascontableRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_interfascontableRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_interfascontableRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_interfascontableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_ahorros_estadosDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnID As DataColumn
        
        Private columnIDCliente As DataColumn
        
        Private columnFecha As DataColumn
        
        Private columnIDDocumento As DataColumn
        
        Private columnDocumento As DataColumn
        
        Private columnAhorro As DataColumn
        
        Private columnRetiro As DataColumn
        
        Private columnSaldo As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_ahorros_estados")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property IDColumn As DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        Friend ReadOnly Property IDClienteColumn As DataColumn
            Get
                Return Me.columnIDCliente
            End Get
        End Property
        
        Friend ReadOnly Property FechaColumn As DataColumn
            Get
                Return Me.columnFecha
            End Get
        End Property
        
        Friend ReadOnly Property IDDocumentoColumn As DataColumn
            Get
                Return Me.columnIDDocumento
            End Get
        End Property
        
        Friend ReadOnly Property DocumentoColumn As DataColumn
            Get
                Return Me.columnDocumento
            End Get
        End Property
        
        Friend ReadOnly Property AhorroColumn As DataColumn
            Get
                Return Me.columnAhorro
            End Get
        End Property
        
        Friend ReadOnly Property RetiroColumn As DataColumn
            Get
                Return Me.columnRetiro
            End Get
        End Property
        
        Friend ReadOnly Property SaldoColumn As DataColumn
            Get
                Return Me.columnSaldo
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_ahorros_estadosRow
            Get
                Return CType(Me.Rows(index),tbl_ahorros_estadosRow)
            End Get
        End Property
        
        Public Event tbl_ahorros_estadosRowChanged As tbl_ahorros_estadosRowChangeEventHandler
        
        Public Event tbl_ahorros_estadosRowChanging As tbl_ahorros_estadosRowChangeEventHandler
        
        Public Event tbl_ahorros_estadosRowDeleted As tbl_ahorros_estadosRowChangeEventHandler
        
        Public Event tbl_ahorros_estadosRowDeleting As tbl_ahorros_estadosRowChangeEventHandler
        
        Public Overloads Sub Addtbl_ahorros_estadosRow(ByVal row As tbl_ahorros_estadosRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_ahorros_estadosRow(ByVal ID As Integer, ByVal IDCliente As Integer, ByVal Fecha As Date, ByVal IDDocumento As Integer, ByVal Documento As String, ByVal Ahorro As Decimal, ByVal Retiro As Decimal, ByVal Saldo As Decimal) As tbl_ahorros_estadosRow
            Dim rowtbl_ahorros_estadosRow As tbl_ahorros_estadosRow = CType(Me.NewRow,tbl_ahorros_estadosRow)
            rowtbl_ahorros_estadosRow.ItemArray = New Object() {ID, IDCliente, Fecha, IDDocumento, Documento, Ahorro, Retiro, Saldo}
            Me.Rows.Add(rowtbl_ahorros_estadosRow)
            Return rowtbl_ahorros_estadosRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_ahorros_estadosDataTable = CType(MyBase.Clone,tbl_ahorros_estadosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_ahorros_estadosDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnID = Me.Columns("ID")
            Me.columnIDCliente = Me.Columns("IDCliente")
            Me.columnFecha = Me.Columns("Fecha")
            Me.columnIDDocumento = Me.Columns("IDDocumento")
            Me.columnDocumento = Me.Columns("Documento")
            Me.columnAhorro = Me.Columns("Ahorro")
            Me.columnRetiro = Me.Columns("Retiro")
            Me.columnSaldo = Me.Columns("Saldo")
        End Sub
        
        Private Sub InitClass()
            Me.columnID = New DataColumn("ID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnID)
            Me.columnIDCliente = New DataColumn("IDCliente", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnIDCliente)
            Me.columnFecha = New DataColumn("Fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFecha)
            Me.columnIDDocumento = New DataColumn("IDDocumento", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnIDDocumento)
            Me.columnDocumento = New DataColumn("Documento", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDocumento)
            Me.columnAhorro = New DataColumn("Ahorro", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnAhorro)
            Me.columnRetiro = New DataColumn("Retiro", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnRetiro)
            Me.columnSaldo = New DataColumn("Saldo", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSaldo)
        End Sub
        
        Public Function Newtbl_ahorros_estadosRow() As tbl_ahorros_estadosRow
            Return CType(Me.NewRow,tbl_ahorros_estadosRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_ahorros_estadosRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_ahorros_estadosRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_ahorros_estadosRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_ahorros_estadosRowChanged(Me, New tbl_ahorros_estadosRowChangeEvent(CType(e.Row,tbl_ahorros_estadosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_ahorros_estadosRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_ahorros_estadosRowChanging(Me, New tbl_ahorros_estadosRowChangeEvent(CType(e.Row,tbl_ahorros_estadosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_ahorros_estadosRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_ahorros_estadosRowDeleted(Me, New tbl_ahorros_estadosRowChangeEvent(CType(e.Row,tbl_ahorros_estadosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_ahorros_estadosRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_ahorros_estadosRowDeleting(Me, New tbl_ahorros_estadosRowChangeEvent(CType(e.Row,tbl_ahorros_estadosRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_ahorros_estadosRow(ByVal row As tbl_ahorros_estadosRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_ahorros_estadosRow
        Inherits DataRow
        
        Private tabletbl_ahorros_estados As tbl_ahorros_estadosDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_ahorros_estados = CType(Me.Table,tbl_ahorros_estadosDataTable)
        End Sub
        
        Public Property ID As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ahorros_estados.IDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ahorros_estados.IDColumn) = value
            End Set
        End Property
        
        Public Property IDCliente As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ahorros_estados.IDClienteColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ahorros_estados.IDClienteColumn) = value
            End Set
        End Property
        
        Public Property Fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ahorros_estados.FechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ahorros_estados.FechaColumn) = value
            End Set
        End Property
        
        Public Property IDDocumento As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ahorros_estados.IDDocumentoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ahorros_estados.IDDocumentoColumn) = value
            End Set
        End Property
        
        Public Property Documento As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ahorros_estados.DocumentoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ahorros_estados.DocumentoColumn) = value
            End Set
        End Property
        
        Public Property Ahorro As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ahorros_estados.AhorroColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ahorros_estados.AhorroColumn) = value
            End Set
        End Property
        
        Public Property Retiro As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ahorros_estados.RetiroColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ahorros_estados.RetiroColumn) = value
            End Set
        End Property
        
        Public Property Saldo As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_ahorros_estados.SaldoColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_ahorros_estados.SaldoColumn) = value
            End Set
        End Property
        
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ahorros_estados.IDColumn)
        End Function
        
        Public Sub SetIDNull()
            Me(Me.tabletbl_ahorros_estados.IDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsIDClienteNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ahorros_estados.IDClienteColumn)
        End Function
        
        Public Sub SetIDClienteNull()
            Me(Me.tabletbl_ahorros_estados.IDClienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ahorros_estados.FechaColumn)
        End Function
        
        Public Sub SetFechaNull()
            Me(Me.tabletbl_ahorros_estados.FechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsIDDocumentoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ahorros_estados.IDDocumentoColumn)
        End Function
        
        Public Sub SetIDDocumentoNull()
            Me(Me.tabletbl_ahorros_estados.IDDocumentoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDocumentoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ahorros_estados.DocumentoColumn)
        End Function
        
        Public Sub SetDocumentoNull()
            Me(Me.tabletbl_ahorros_estados.DocumentoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsAhorroNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ahorros_estados.AhorroColumn)
        End Function
        
        Public Sub SetAhorroNull()
            Me(Me.tabletbl_ahorros_estados.AhorroColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsRetiroNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ahorros_estados.RetiroColumn)
        End Function
        
        Public Sub SetRetiroNull()
            Me(Me.tabletbl_ahorros_estados.RetiroColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSaldoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_ahorros_estados.SaldoColumn)
        End Function
        
        Public Sub SetSaldoNull()
            Me(Me.tabletbl_ahorros_estados.SaldoColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_ahorros_estadosRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_ahorros_estadosRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_ahorros_estadosRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_ahorros_estadosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
