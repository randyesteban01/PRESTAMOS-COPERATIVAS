'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class dsReportes
    Inherits DataSet
    
    Private tableview_cont_catalogo As view_cont_catalogoDataTable
    
    Private tabletbl_interfascontabletransacciones As tbl_interfascontabletransaccionesDataTable
    
    Private tabletbl_interfasecontabletransaccionesdetalles As tbl_interfasecontabletransaccionesdetallesDataTable
    
    Private tableview_cont_transacciones As view_cont_transaccionesDataTable
    
    Private tabletbl_catalogo As tbl_catalogoDataTable
    
    Private tableview_cont_libro_general As view_cont_libro_generalDataTable
    
    Private tableview_ahorros_depositos As view_ahorros_depositosDataTable
    
    Private tableview_ahorros_retiros As view_ahorros_retirosDataTable
    
    Private tableview_ahorros As view_ahorrosDataTable
    
    Private tabletbl_profiledocument As tbl_profiledocumentDataTable
    
    Private tablecajaarqueo As cajaarqueoDataTable
    
    Private tabletbl_recibo_ingresos_cxc As tbl_recibo_ingresos_cxcDataTable
    
    Private tabletbl_recibo_egresos As tbl_recibo_egresosDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("view_cont_catalogo")) Is Nothing) Then
                Me.Tables.Add(New view_cont_catalogoDataTable(ds.Tables("view_cont_catalogo")))
            End If
            If (Not (ds.Tables("tbl_interfascontabletransacciones")) Is Nothing) Then
                Me.Tables.Add(New tbl_interfascontabletransaccionesDataTable(ds.Tables("tbl_interfascontabletransacciones")))
            End If
            If (Not (ds.Tables("tbl_interfasecontabletransaccionesdetalles")) Is Nothing) Then
                Me.Tables.Add(New tbl_interfasecontabletransaccionesdetallesDataTable(ds.Tables("tbl_interfasecontabletransaccionesdetalles")))
            End If
            If (Not (ds.Tables("view_cont_transacciones")) Is Nothing) Then
                Me.Tables.Add(New view_cont_transaccionesDataTable(ds.Tables("view_cont_transacciones")))
            End If
            If (Not (ds.Tables("tbl_catalogo")) Is Nothing) Then
                Me.Tables.Add(New tbl_catalogoDataTable(ds.Tables("tbl_catalogo")))
            End If
            If (Not (ds.Tables("view_cont_libro_general")) Is Nothing) Then
                Me.Tables.Add(New view_cont_libro_generalDataTable(ds.Tables("view_cont_libro_general")))
            End If
            If (Not (ds.Tables("view_ahorros_depositos")) Is Nothing) Then
                Me.Tables.Add(New view_ahorros_depositosDataTable(ds.Tables("view_ahorros_depositos")))
            End If
            If (Not (ds.Tables("view_ahorros_retiros")) Is Nothing) Then
                Me.Tables.Add(New view_ahorros_retirosDataTable(ds.Tables("view_ahorros_retiros")))
            End If
            If (Not (ds.Tables("view_ahorros")) Is Nothing) Then
                Me.Tables.Add(New view_ahorrosDataTable(ds.Tables("view_ahorros")))
            End If
            If (Not (ds.Tables("tbl_profiledocument")) Is Nothing) Then
                Me.Tables.Add(New tbl_profiledocumentDataTable(ds.Tables("tbl_profiledocument")))
            End If
            If (Not (ds.Tables("cajaarqueo")) Is Nothing) Then
                Me.Tables.Add(New cajaarqueoDataTable(ds.Tables("cajaarqueo")))
            End If
            If (Not (ds.Tables("tbl_recibo_ingresos_cxc")) Is Nothing) Then
                Me.Tables.Add(New tbl_recibo_ingresos_cxcDataTable(ds.Tables("tbl_recibo_ingresos_cxc")))
            End If
            If (Not (ds.Tables("tbl_recibo_egresos")) Is Nothing) Then
                Me.Tables.Add(New tbl_recibo_egresosDataTable(ds.Tables("tbl_recibo_egresos")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_cont_catalogo As view_cont_catalogoDataTable
        Get
            Return Me.tableview_cont_catalogo
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_interfascontabletransacciones As tbl_interfascontabletransaccionesDataTable
        Get
            Return Me.tabletbl_interfascontabletransacciones
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_interfasecontabletransaccionesdetalles As tbl_interfasecontabletransaccionesdetallesDataTable
        Get
            Return Me.tabletbl_interfasecontabletransaccionesdetalles
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_cont_transacciones As view_cont_transaccionesDataTable
        Get
            Return Me.tableview_cont_transacciones
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_catalogo As tbl_catalogoDataTable
        Get
            Return Me.tabletbl_catalogo
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_cont_libro_general As view_cont_libro_generalDataTable
        Get
            Return Me.tableview_cont_libro_general
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_ahorros_depositos As view_ahorros_depositosDataTable
        Get
            Return Me.tableview_ahorros_depositos
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_ahorros_retiros As view_ahorros_retirosDataTable
        Get
            Return Me.tableview_ahorros_retiros
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property view_ahorros As view_ahorrosDataTable
        Get
            Return Me.tableview_ahorros
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_profiledocument As tbl_profiledocumentDataTable
        Get
            Return Me.tabletbl_profiledocument
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property cajaarqueo As cajaarqueoDataTable
        Get
            Return Me.tablecajaarqueo
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_recibo_ingresos_cxc As tbl_recibo_ingresos_cxcDataTable
        Get
            Return Me.tabletbl_recibo_ingresos_cxc
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_recibo_egresos As tbl_recibo_egresosDataTable
        Get
            Return Me.tabletbl_recibo_egresos
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As dsReportes = CType(MyBase.Clone,dsReportes)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("view_cont_catalogo")) Is Nothing) Then
            Me.Tables.Add(New view_cont_catalogoDataTable(ds.Tables("view_cont_catalogo")))
        End If
        If (Not (ds.Tables("tbl_interfascontabletransacciones")) Is Nothing) Then
            Me.Tables.Add(New tbl_interfascontabletransaccionesDataTable(ds.Tables("tbl_interfascontabletransacciones")))
        End If
        If (Not (ds.Tables("tbl_interfasecontabletransaccionesdetalles")) Is Nothing) Then
            Me.Tables.Add(New tbl_interfasecontabletransaccionesdetallesDataTable(ds.Tables("tbl_interfasecontabletransaccionesdetalles")))
        End If
        If (Not (ds.Tables("view_cont_transacciones")) Is Nothing) Then
            Me.Tables.Add(New view_cont_transaccionesDataTable(ds.Tables("view_cont_transacciones")))
        End If
        If (Not (ds.Tables("tbl_catalogo")) Is Nothing) Then
            Me.Tables.Add(New tbl_catalogoDataTable(ds.Tables("tbl_catalogo")))
        End If
        If (Not (ds.Tables("view_cont_libro_general")) Is Nothing) Then
            Me.Tables.Add(New view_cont_libro_generalDataTable(ds.Tables("view_cont_libro_general")))
        End If
        If (Not (ds.Tables("view_ahorros_depositos")) Is Nothing) Then
            Me.Tables.Add(New view_ahorros_depositosDataTable(ds.Tables("view_ahorros_depositos")))
        End If
        If (Not (ds.Tables("view_ahorros_retiros")) Is Nothing) Then
            Me.Tables.Add(New view_ahorros_retirosDataTable(ds.Tables("view_ahorros_retiros")))
        End If
        If (Not (ds.Tables("view_ahorros")) Is Nothing) Then
            Me.Tables.Add(New view_ahorrosDataTable(ds.Tables("view_ahorros")))
        End If
        If (Not (ds.Tables("tbl_profiledocument")) Is Nothing) Then
            Me.Tables.Add(New tbl_profiledocumentDataTable(ds.Tables("tbl_profiledocument")))
        End If
        If (Not (ds.Tables("cajaarqueo")) Is Nothing) Then
            Me.Tables.Add(New cajaarqueoDataTable(ds.Tables("cajaarqueo")))
        End If
        If (Not (ds.Tables("tbl_recibo_ingresos_cxc")) Is Nothing) Then
            Me.Tables.Add(New tbl_recibo_ingresos_cxcDataTable(ds.Tables("tbl_recibo_ingresos_cxc")))
        End If
        If (Not (ds.Tables("tbl_recibo_egresos")) Is Nothing) Then
            Me.Tables.Add(New tbl_recibo_egresosDataTable(ds.Tables("tbl_recibo_egresos")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tableview_cont_catalogo = CType(Me.Tables("view_cont_catalogo"),view_cont_catalogoDataTable)
        If (Not (Me.tableview_cont_catalogo) Is Nothing) Then
            Me.tableview_cont_catalogo.InitVars
        End If
        Me.tabletbl_interfascontabletransacciones = CType(Me.Tables("tbl_interfascontabletransacciones"),tbl_interfascontabletransaccionesDataTable)
        If (Not (Me.tabletbl_interfascontabletransacciones) Is Nothing) Then
            Me.tabletbl_interfascontabletransacciones.InitVars
        End If
        Me.tabletbl_interfasecontabletransaccionesdetalles = CType(Me.Tables("tbl_interfasecontabletransaccionesdetalles"),tbl_interfasecontabletransaccionesdetallesDataTable)
        If (Not (Me.tabletbl_interfasecontabletransaccionesdetalles) Is Nothing) Then
            Me.tabletbl_interfasecontabletransaccionesdetalles.InitVars
        End If
        Me.tableview_cont_transacciones = CType(Me.Tables("view_cont_transacciones"),view_cont_transaccionesDataTable)
        If (Not (Me.tableview_cont_transacciones) Is Nothing) Then
            Me.tableview_cont_transacciones.InitVars
        End If
        Me.tabletbl_catalogo = CType(Me.Tables("tbl_catalogo"),tbl_catalogoDataTable)
        If (Not (Me.tabletbl_catalogo) Is Nothing) Then
            Me.tabletbl_catalogo.InitVars
        End If
        Me.tableview_cont_libro_general = CType(Me.Tables("view_cont_libro_general"),view_cont_libro_generalDataTable)
        If (Not (Me.tableview_cont_libro_general) Is Nothing) Then
            Me.tableview_cont_libro_general.InitVars
        End If
        Me.tableview_ahorros_depositos = CType(Me.Tables("view_ahorros_depositos"),view_ahorros_depositosDataTable)
        If (Not (Me.tableview_ahorros_depositos) Is Nothing) Then
            Me.tableview_ahorros_depositos.InitVars
        End If
        Me.tableview_ahorros_retiros = CType(Me.Tables("view_ahorros_retiros"),view_ahorros_retirosDataTable)
        If (Not (Me.tableview_ahorros_retiros) Is Nothing) Then
            Me.tableview_ahorros_retiros.InitVars
        End If
        Me.tableview_ahorros = CType(Me.Tables("view_ahorros"),view_ahorrosDataTable)
        If (Not (Me.tableview_ahorros) Is Nothing) Then
            Me.tableview_ahorros.InitVars
        End If
        Me.tabletbl_profiledocument = CType(Me.Tables("tbl_profiledocument"),tbl_profiledocumentDataTable)
        If (Not (Me.tabletbl_profiledocument) Is Nothing) Then
            Me.tabletbl_profiledocument.InitVars
        End If
        Me.tablecajaarqueo = CType(Me.Tables("cajaarqueo"),cajaarqueoDataTable)
        If (Not (Me.tablecajaarqueo) Is Nothing) Then
            Me.tablecajaarqueo.InitVars
        End If
        Me.tabletbl_recibo_ingresos_cxc = CType(Me.Tables("tbl_recibo_ingresos_cxc"),tbl_recibo_ingresos_cxcDataTable)
        If (Not (Me.tabletbl_recibo_ingresos_cxc) Is Nothing) Then
            Me.tabletbl_recibo_ingresos_cxc.InitVars
        End If
        Me.tabletbl_recibo_egresos = CType(Me.Tables("tbl_recibo_egresos"),tbl_recibo_egresosDataTable)
        If (Not (Me.tabletbl_recibo_egresos) Is Nothing) Then
            Me.tabletbl_recibo_egresos.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "dsReportes"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsReportes.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tableview_cont_catalogo = New view_cont_catalogoDataTable
        Me.Tables.Add(Me.tableview_cont_catalogo)
        Me.tabletbl_interfascontabletransacciones = New tbl_interfascontabletransaccionesDataTable
        Me.Tables.Add(Me.tabletbl_interfascontabletransacciones)
        Me.tabletbl_interfasecontabletransaccionesdetalles = New tbl_interfasecontabletransaccionesdetallesDataTable
        Me.Tables.Add(Me.tabletbl_interfasecontabletransaccionesdetalles)
        Me.tableview_cont_transacciones = New view_cont_transaccionesDataTable
        Me.Tables.Add(Me.tableview_cont_transacciones)
        Me.tabletbl_catalogo = New tbl_catalogoDataTable
        Me.Tables.Add(Me.tabletbl_catalogo)
        Me.tableview_cont_libro_general = New view_cont_libro_generalDataTable
        Me.Tables.Add(Me.tableview_cont_libro_general)
        Me.tableview_ahorros_depositos = New view_ahorros_depositosDataTable
        Me.Tables.Add(Me.tableview_ahorros_depositos)
        Me.tableview_ahorros_retiros = New view_ahorros_retirosDataTable
        Me.Tables.Add(Me.tableview_ahorros_retiros)
        Me.tableview_ahorros = New view_ahorrosDataTable
        Me.Tables.Add(Me.tableview_ahorros)
        Me.tabletbl_profiledocument = New tbl_profiledocumentDataTable
        Me.Tables.Add(Me.tabletbl_profiledocument)
        Me.tablecajaarqueo = New cajaarqueoDataTable
        Me.Tables.Add(Me.tablecajaarqueo)
        Me.tabletbl_recibo_ingresos_cxc = New tbl_recibo_ingresos_cxcDataTable
        Me.Tables.Add(Me.tabletbl_recibo_ingresos_cxc)
        Me.tabletbl_recibo_egresos = New tbl_recibo_egresosDataTable
        Me.Tables.Add(Me.tabletbl_recibo_egresos)
    End Sub
    
    Private Function ShouldSerializeview_cont_catalogo() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_interfascontabletransacciones() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_interfasecontabletransaccionesdetalles() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeview_cont_transacciones() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_catalogo() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeview_cont_libro_general() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeview_ahorros_depositos() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeview_ahorros_retiros() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeview_ahorros() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_profiledocument() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializecajaarqueo() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_recibo_ingresos_cxc() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetbl_recibo_egresos() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub view_cont_catalogoRowChangeEventHandler(ByVal sender As Object, ByVal e As view_cont_catalogoRowChangeEvent)
    
    Public Delegate Sub tbl_interfascontabletransaccionesRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_interfascontabletransaccionesRowChangeEvent)
    
    Public Delegate Sub tbl_interfasecontabletransaccionesdetallesRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_interfasecontabletransaccionesdetallesRowChangeEvent)
    
    Public Delegate Sub view_cont_transaccionesRowChangeEventHandler(ByVal sender As Object, ByVal e As view_cont_transaccionesRowChangeEvent)
    
    Public Delegate Sub tbl_catalogoRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_catalogoRowChangeEvent)
    
    Public Delegate Sub view_cont_libro_generalRowChangeEventHandler(ByVal sender As Object, ByVal e As view_cont_libro_generalRowChangeEvent)
    
    Public Delegate Sub view_ahorros_depositosRowChangeEventHandler(ByVal sender As Object, ByVal e As view_ahorros_depositosRowChangeEvent)
    
    Public Delegate Sub view_ahorros_retirosRowChangeEventHandler(ByVal sender As Object, ByVal e As view_ahorros_retirosRowChangeEvent)
    
    Public Delegate Sub view_ahorrosRowChangeEventHandler(ByVal sender As Object, ByVal e As view_ahorrosRowChangeEvent)
    
    Public Delegate Sub tbl_profiledocumentRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_profiledocumentRowChangeEvent)
    
    Public Delegate Sub cajaarqueoRowChangeEventHandler(ByVal sender As Object, ByVal e As cajaarqueoRowChangeEvent)
    
    Public Delegate Sub tbl_recibo_ingresos_cxcRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_recibo_ingresos_cxcRowChangeEvent)
    
    Public Delegate Sub tbl_recibo_egresosRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_recibo_egresosRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_cont_catalogoDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnIDg As DataColumn
        
        Private columnCuentaNo As DataColumn
        
        Private columnDescripciong As DataColumn
        
        Private columnGrupo As DataColumn
        
        Private columnTipo As DataColumn
        
        Private columnDebito As DataColumn
        
        Private columnCredito As DataColumn
        
        Private columnBalance As DataColumn
        
        Private columnCtaControl As DataColumn
        
        Private columnNombreMes As DataColumn
        
        Private columnNumeroMes As DataColumn
        
        Private columnBalanceGeneral As DataColumn
        
        Private columnEstadoResultado As DataColumn
        
        Private columnOrdenEstadoResultado As DataColumn
        
        Private columnAccionEstatoResultado As DataColumn
        
        Private columnVerEnCero As DataColumn
        
        Private columnFecha As DataColumn
        
        Private columnUsuario As DataColumn
        
        Private columnID As DataColumn
        
        Private columnDescripcion As DataColumn
        
        Private columnOrigen As DataColumn
        
        Friend Sub New()
            MyBase.New("view_cont_catalogo")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property IDgColumn As DataColumn
            Get
                Return Me.columnIDg
            End Get
        End Property
        
        Friend ReadOnly Property CuentaNoColumn As DataColumn
            Get
                Return Me.columnCuentaNo
            End Get
        End Property
        
        Friend ReadOnly Property DescripciongColumn As DataColumn
            Get
                Return Me.columnDescripciong
            End Get
        End Property
        
        Friend ReadOnly Property GrupoColumn As DataColumn
            Get
                Return Me.columnGrupo
            End Get
        End Property
        
        Friend ReadOnly Property TipoColumn As DataColumn
            Get
                Return Me.columnTipo
            End Get
        End Property
        
        Friend ReadOnly Property DebitoColumn As DataColumn
            Get
                Return Me.columnDebito
            End Get
        End Property
        
        Friend ReadOnly Property CreditoColumn As DataColumn
            Get
                Return Me.columnCredito
            End Get
        End Property
        
        Friend ReadOnly Property BalanceColumn As DataColumn
            Get
                Return Me.columnBalance
            End Get
        End Property
        
        Friend ReadOnly Property CtaControlColumn As DataColumn
            Get
                Return Me.columnCtaControl
            End Get
        End Property
        
        Friend ReadOnly Property NombreMesColumn As DataColumn
            Get
                Return Me.columnNombreMes
            End Get
        End Property
        
        Friend ReadOnly Property NumeroMesColumn As DataColumn
            Get
                Return Me.columnNumeroMes
            End Get
        End Property
        
        Friend ReadOnly Property BalanceGeneralColumn As DataColumn
            Get
                Return Me.columnBalanceGeneral
            End Get
        End Property
        
        Friend ReadOnly Property EstadoResultadoColumn As DataColumn
            Get
                Return Me.columnEstadoResultado
            End Get
        End Property
        
        Friend ReadOnly Property OrdenEstadoResultadoColumn As DataColumn
            Get
                Return Me.columnOrdenEstadoResultado
            End Get
        End Property
        
        Friend ReadOnly Property AccionEstatoResultadoColumn As DataColumn
            Get
                Return Me.columnAccionEstatoResultado
            End Get
        End Property
        
        Friend ReadOnly Property VerEnCeroColumn As DataColumn
            Get
                Return Me.columnVerEnCero
            End Get
        End Property
        
        Friend ReadOnly Property FechaColumn As DataColumn
            Get
                Return Me.columnFecha
            End Get
        End Property
        
        Friend ReadOnly Property UsuarioColumn As DataColumn
            Get
                Return Me.columnUsuario
            End Get
        End Property
        
        Friend ReadOnly Property IDColumn As DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        Friend ReadOnly Property DescripcionColumn As DataColumn
            Get
                Return Me.columnDescripcion
            End Get
        End Property
        
        Friend ReadOnly Property OrigenColumn As DataColumn
            Get
                Return Me.columnOrigen
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_cont_catalogoRow
            Get
                Return CType(Me.Rows(index),view_cont_catalogoRow)
            End Get
        End Property
        
        Public Event view_cont_catalogoRowChanged As view_cont_catalogoRowChangeEventHandler
        
        Public Event view_cont_catalogoRowChanging As view_cont_catalogoRowChangeEventHandler
        
        Public Event view_cont_catalogoRowDeleted As view_cont_catalogoRowChangeEventHandler
        
        Public Event view_cont_catalogoRowDeleting As view_cont_catalogoRowChangeEventHandler
        
        Public Overloads Sub Addview_cont_catalogoRow(ByVal row As view_cont_catalogoRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addview_cont_catalogoRow( _
                    ByVal CuentaNo As String,  _
                    ByVal Descripciong As String,  _
                    ByVal Grupo As Integer,  _
                    ByVal Tipo As String,  _
                    ByVal Debito As Double,  _
                    ByVal Credito As Double,  _
                    ByVal Balance As Double,  _
                    ByVal CtaControl As String,  _
                    ByVal NombreMes As String,  _
                    ByVal NumeroMes As Integer,  _
                    ByVal BalanceGeneral As String,  _
                    ByVal EstadoResultado As String,  _
                    ByVal OrdenEstadoResultado As String,  _
                    ByVal AccionEstatoResultado As String,  _
                    ByVal VerEnCero As String,  _
                    ByVal Fecha As Date,  _
                    ByVal Usuario As String,  _
                    ByVal Descripcion As String,  _
                    ByVal Origen As Integer) As view_cont_catalogoRow
            Dim rowview_cont_catalogoRow As view_cont_catalogoRow = CType(Me.NewRow,view_cont_catalogoRow)
            rowview_cont_catalogoRow.ItemArray = New Object() {Nothing, CuentaNo, Descripciong, Grupo, Tipo, Debito, Credito, Balance, CtaControl, NombreMes, NumeroMes, BalanceGeneral, EstadoResultado, OrdenEstadoResultado, AccionEstatoResultado, VerEnCero, Fecha, Usuario, Nothing, Descripcion, Origen}
            Me.Rows.Add(rowview_cont_catalogoRow)
            Return rowview_cont_catalogoRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As view_cont_catalogoDataTable = CType(MyBase.Clone,view_cont_catalogoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New view_cont_catalogoDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnIDg = Me.Columns("IDg")
            Me.columnCuentaNo = Me.Columns("CuentaNo")
            Me.columnDescripciong = Me.Columns("Descripciong")
            Me.columnGrupo = Me.Columns("Grupo")
            Me.columnTipo = Me.Columns("Tipo")
            Me.columnDebito = Me.Columns("Debito")
            Me.columnCredito = Me.Columns("Credito")
            Me.columnBalance = Me.Columns("Balance")
            Me.columnCtaControl = Me.Columns("CtaControl")
            Me.columnNombreMes = Me.Columns("NombreMes")
            Me.columnNumeroMes = Me.Columns("NumeroMes")
            Me.columnBalanceGeneral = Me.Columns("BalanceGeneral")
            Me.columnEstadoResultado = Me.Columns("EstadoResultado")
            Me.columnOrdenEstadoResultado = Me.Columns("OrdenEstadoResultado")
            Me.columnAccionEstatoResultado = Me.Columns("AccionEstatoResultado")
            Me.columnVerEnCero = Me.Columns("VerEnCero")
            Me.columnFecha = Me.Columns("Fecha")
            Me.columnUsuario = Me.Columns("Usuario")
            Me.columnID = Me.Columns("ID")
            Me.columnDescripcion = Me.Columns("Descripcion")
            Me.columnOrigen = Me.Columns("Origen")
        End Sub
        
        Private Sub InitClass()
            Me.columnIDg = New DataColumn("IDg", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnIDg)
            Me.columnCuentaNo = New DataColumn("CuentaNo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCuentaNo)
            Me.columnDescripciong = New DataColumn("Descripciong", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDescripciong)
            Me.columnGrupo = New DataColumn("Grupo", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnGrupo)
            Me.columnTipo = New DataColumn("Tipo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTipo)
            Me.columnDebito = New DataColumn("Debito", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDebito)
            Me.columnCredito = New DataColumn("Credito", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCredito)
            Me.columnBalance = New DataColumn("Balance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnBalance)
            Me.columnCtaControl = New DataColumn("CtaControl", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCtaControl)
            Me.columnNombreMes = New DataColumn("NombreMes", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNombreMes)
            Me.columnNumeroMes = New DataColumn("NumeroMes", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNumeroMes)
            Me.columnBalanceGeneral = New DataColumn("BalanceGeneral", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnBalanceGeneral)
            Me.columnEstadoResultado = New DataColumn("EstadoResultado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnEstadoResultado)
            Me.columnOrdenEstadoResultado = New DataColumn("OrdenEstadoResultado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnOrdenEstadoResultado)
            Me.columnAccionEstatoResultado = New DataColumn("AccionEstatoResultado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnAccionEstatoResultado)
            Me.columnVerEnCero = New DataColumn("VerEnCero", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnVerEnCero)
            Me.columnFecha = New DataColumn("Fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFecha)
            Me.columnUsuario = New DataColumn("Usuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnUsuario)
            Me.columnID = New DataColumn("ID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnID)
            Me.columnDescripcion = New DataColumn("Descripcion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDescripcion)
            Me.columnOrigen = New DataColumn("Origen", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnOrigen)
            Me.columnIDg.AutoIncrement = true
            Me.columnID.AutoIncrement = true
        End Sub
        
        Public Function Newview_cont_catalogoRow() As view_cont_catalogoRow
            Return CType(Me.NewRow,view_cont_catalogoRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New view_cont_catalogoRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(view_cont_catalogoRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_cont_catalogoRowChangedEvent) Is Nothing) Then
                RaiseEvent view_cont_catalogoRowChanged(Me, New view_cont_catalogoRowChangeEvent(CType(e.Row,view_cont_catalogoRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_cont_catalogoRowChangingEvent) Is Nothing) Then
                RaiseEvent view_cont_catalogoRowChanging(Me, New view_cont_catalogoRowChangeEvent(CType(e.Row,view_cont_catalogoRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_cont_catalogoRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_cont_catalogoRowDeleted(Me, New view_cont_catalogoRowChangeEvent(CType(e.Row,view_cont_catalogoRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_cont_catalogoRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_cont_catalogoRowDeleting(Me, New view_cont_catalogoRowChangeEvent(CType(e.Row,view_cont_catalogoRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeview_cont_catalogoRow(ByVal row As view_cont_catalogoRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_cont_catalogoRow
        Inherits DataRow
        
        Private tableview_cont_catalogo As view_cont_catalogoDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_cont_catalogo = CType(Me.Table,view_cont_catalogoDataTable)
        End Sub
        
        Public Property IDg As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_catalogo.IDgColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_catalogo.IDgColumn) = value
            End Set
        End Property
        
        Public Property CuentaNo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_catalogo.CuentaNoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_catalogo.CuentaNoColumn) = value
            End Set
        End Property
        
        Public Property Descripciong As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_catalogo.DescripciongColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_catalogo.DescripciongColumn) = value
            End Set
        End Property
        
        Public Property Grupo As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_catalogo.GrupoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_catalogo.GrupoColumn) = value
            End Set
        End Property
        
        Public Property Tipo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_catalogo.TipoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_catalogo.TipoColumn) = value
            End Set
        End Property
        
        Public Property Debito As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_catalogo.DebitoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_catalogo.DebitoColumn) = value
            End Set
        End Property
        
        Public Property Credito As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_catalogo.CreditoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_catalogo.CreditoColumn) = value
            End Set
        End Property
        
        Public Property Balance As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_catalogo.BalanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_catalogo.BalanceColumn) = value
            End Set
        End Property
        
        Public Property CtaControl As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_catalogo.CtaControlColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_catalogo.CtaControlColumn) = value
            End Set
        End Property
        
        Public Property NombreMes As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_catalogo.NombreMesColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_catalogo.NombreMesColumn) = value
            End Set
        End Property
        
        Public Property NumeroMes As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_catalogo.NumeroMesColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_catalogo.NumeroMesColumn) = value
            End Set
        End Property
        
        Public Property BalanceGeneral As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_catalogo.BalanceGeneralColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_catalogo.BalanceGeneralColumn) = value
            End Set
        End Property
        
        Public Property EstadoResultado As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_catalogo.EstadoResultadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_catalogo.EstadoResultadoColumn) = value
            End Set
        End Property
        
        Public Property OrdenEstadoResultado As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_catalogo.OrdenEstadoResultadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_catalogo.OrdenEstadoResultadoColumn) = value
            End Set
        End Property
        
        Public Property AccionEstatoResultado As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_catalogo.AccionEstatoResultadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_catalogo.AccionEstatoResultadoColumn) = value
            End Set
        End Property
        
        Public Property VerEnCero As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_catalogo.VerEnCeroColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_catalogo.VerEnCeroColumn) = value
            End Set
        End Property
        
        Public Property Fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_catalogo.FechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_catalogo.FechaColumn) = value
            End Set
        End Property
        
        Public Property Usuario As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_catalogo.UsuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_catalogo.UsuarioColumn) = value
            End Set
        End Property
        
        Public Property ID As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_catalogo.IDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_catalogo.IDColumn) = value
            End Set
        End Property
        
        Public Property Descripcion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_catalogo.DescripcionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_catalogo.DescripcionColumn) = value
            End Set
        End Property
        
        Public Property Origen As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_catalogo.OrigenColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_catalogo.OrigenColumn) = value
            End Set
        End Property
        
        Public Function IsIDgNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_catalogo.IDgColumn)
        End Function
        
        Public Sub SetIDgNull()
            Me(Me.tableview_cont_catalogo.IDgColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCuentaNoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_catalogo.CuentaNoColumn)
        End Function
        
        Public Sub SetCuentaNoNull()
            Me(Me.tableview_cont_catalogo.CuentaNoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDescripciongNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_catalogo.DescripciongColumn)
        End Function
        
        Public Sub SetDescripciongNull()
            Me(Me.tableview_cont_catalogo.DescripciongColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsGrupoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_catalogo.GrupoColumn)
        End Function
        
        Public Sub SetGrupoNull()
            Me(Me.tableview_cont_catalogo.GrupoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTipoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_catalogo.TipoColumn)
        End Function
        
        Public Sub SetTipoNull()
            Me(Me.tableview_cont_catalogo.TipoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDebitoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_catalogo.DebitoColumn)
        End Function
        
        Public Sub SetDebitoNull()
            Me(Me.tableview_cont_catalogo.DebitoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCreditoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_catalogo.CreditoColumn)
        End Function
        
        Public Sub SetCreditoNull()
            Me(Me.tableview_cont_catalogo.CreditoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsBalanceNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_catalogo.BalanceColumn)
        End Function
        
        Public Sub SetBalanceNull()
            Me(Me.tableview_cont_catalogo.BalanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCtaControlNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_catalogo.CtaControlColumn)
        End Function
        
        Public Sub SetCtaControlNull()
            Me(Me.tableview_cont_catalogo.CtaControlColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNombreMesNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_catalogo.NombreMesColumn)
        End Function
        
        Public Sub SetNombreMesNull()
            Me(Me.tableview_cont_catalogo.NombreMesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNumeroMesNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_catalogo.NumeroMesColumn)
        End Function
        
        Public Sub SetNumeroMesNull()
            Me(Me.tableview_cont_catalogo.NumeroMesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsBalanceGeneralNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_catalogo.BalanceGeneralColumn)
        End Function
        
        Public Sub SetBalanceGeneralNull()
            Me(Me.tableview_cont_catalogo.BalanceGeneralColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsEstadoResultadoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_catalogo.EstadoResultadoColumn)
        End Function
        
        Public Sub SetEstadoResultadoNull()
            Me(Me.tableview_cont_catalogo.EstadoResultadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsOrdenEstadoResultadoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_catalogo.OrdenEstadoResultadoColumn)
        End Function
        
        Public Sub SetOrdenEstadoResultadoNull()
            Me(Me.tableview_cont_catalogo.OrdenEstadoResultadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsAccionEstatoResultadoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_catalogo.AccionEstatoResultadoColumn)
        End Function
        
        Public Sub SetAccionEstatoResultadoNull()
            Me(Me.tableview_cont_catalogo.AccionEstatoResultadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsVerEnCeroNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_catalogo.VerEnCeroColumn)
        End Function
        
        Public Sub SetVerEnCeroNull()
            Me(Me.tableview_cont_catalogo.VerEnCeroColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_catalogo.FechaColumn)
        End Function
        
        Public Sub SetFechaNull()
            Me(Me.tableview_cont_catalogo.FechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsUsuarioNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_catalogo.UsuarioColumn)
        End Function
        
        Public Sub SetUsuarioNull()
            Me(Me.tableview_cont_catalogo.UsuarioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_catalogo.IDColumn)
        End Function
        
        Public Sub SetIDNull()
            Me(Me.tableview_cont_catalogo.IDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDescripcionNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_catalogo.DescripcionColumn)
        End Function
        
        Public Sub SetDescripcionNull()
            Me(Me.tableview_cont_catalogo.DescripcionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsOrigenNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_catalogo.OrigenColumn)
        End Function
        
        Public Sub SetOrigenNull()
            Me(Me.tableview_cont_catalogo.OrigenColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_cont_catalogoRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As view_cont_catalogoRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As view_cont_catalogoRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As view_cont_catalogoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_interfascontabletransaccionesDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnTransID As DataColumn
        
        Private columnTransFecha As DataColumn
        
        Private columnTransFechaMovimiento As DataColumn
        
        Private columnTransDescripcion As DataColumn
        
        Private columnTransIDTipo As DataColumn
        
        Private columnTransUsuario As DataColumn
        
        Private columnTransEstado As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_interfascontabletransacciones")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property TransIDColumn As DataColumn
            Get
                Return Me.columnTransID
            End Get
        End Property
        
        Friend ReadOnly Property TransFechaColumn As DataColumn
            Get
                Return Me.columnTransFecha
            End Get
        End Property
        
        Friend ReadOnly Property TransFechaMovimientoColumn As DataColumn
            Get
                Return Me.columnTransFechaMovimiento
            End Get
        End Property
        
        Friend ReadOnly Property TransDescripcionColumn As DataColumn
            Get
                Return Me.columnTransDescripcion
            End Get
        End Property
        
        Friend ReadOnly Property TransIDTipoColumn As DataColumn
            Get
                Return Me.columnTransIDTipo
            End Get
        End Property
        
        Friend ReadOnly Property TransUsuarioColumn As DataColumn
            Get
                Return Me.columnTransUsuario
            End Get
        End Property
        
        Friend ReadOnly Property TransEstadoColumn As DataColumn
            Get
                Return Me.columnTransEstado
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_interfascontabletransaccionesRow
            Get
                Return CType(Me.Rows(index),tbl_interfascontabletransaccionesRow)
            End Get
        End Property
        
        Public Event tbl_interfascontabletransaccionesRowChanged As tbl_interfascontabletransaccionesRowChangeEventHandler
        
        Public Event tbl_interfascontabletransaccionesRowChanging As tbl_interfascontabletransaccionesRowChangeEventHandler
        
        Public Event tbl_interfascontabletransaccionesRowDeleted As tbl_interfascontabletransaccionesRowChangeEventHandler
        
        Public Event tbl_interfascontabletransaccionesRowDeleting As tbl_interfascontabletransaccionesRowChangeEventHandler
        
        Public Overloads Sub Addtbl_interfascontabletransaccionesRow(ByVal row As tbl_interfascontabletransaccionesRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_interfascontabletransaccionesRow(ByVal TransFecha As Date, ByVal TransFechaMovimiento As Date, ByVal TransDescripcion As String, ByVal TransIDTipo As Integer, ByVal TransUsuario As String, ByVal TransEstado As String) As tbl_interfascontabletransaccionesRow
            Dim rowtbl_interfascontabletransaccionesRow As tbl_interfascontabletransaccionesRow = CType(Me.NewRow,tbl_interfascontabletransaccionesRow)
            rowtbl_interfascontabletransaccionesRow.ItemArray = New Object() {Nothing, TransFecha, TransFechaMovimiento, TransDescripcion, TransIDTipo, TransUsuario, TransEstado}
            Me.Rows.Add(rowtbl_interfascontabletransaccionesRow)
            Return rowtbl_interfascontabletransaccionesRow
        End Function
        
        Public Function FindByTransID(ByVal TransID As Integer) As tbl_interfascontabletransaccionesRow
            Return CType(Me.Rows.Find(New Object() {TransID}),tbl_interfascontabletransaccionesRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_interfascontabletransaccionesDataTable = CType(MyBase.Clone,tbl_interfascontabletransaccionesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_interfascontabletransaccionesDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnTransID = Me.Columns("TransID")
            Me.columnTransFecha = Me.Columns("TransFecha")
            Me.columnTransFechaMovimiento = Me.Columns("TransFechaMovimiento")
            Me.columnTransDescripcion = Me.Columns("TransDescripcion")
            Me.columnTransIDTipo = Me.Columns("TransIDTipo")
            Me.columnTransUsuario = Me.Columns("TransUsuario")
            Me.columnTransEstado = Me.Columns("TransEstado")
        End Sub
        
        Private Sub InitClass()
            Me.columnTransID = New DataColumn("TransID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransID)
            Me.columnTransFecha = New DataColumn("TransFecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransFecha)
            Me.columnTransFechaMovimiento = New DataColumn("TransFechaMovimiento", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransFechaMovimiento)
            Me.columnTransDescripcion = New DataColumn("TransDescripcion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDescripcion)
            Me.columnTransIDTipo = New DataColumn("TransIDTipo", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransIDTipo)
            Me.columnTransUsuario = New DataColumn("TransUsuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransUsuario)
            Me.columnTransEstado = New DataColumn("TransEstado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransEstado)
            Me.Constraints.Add(New UniqueConstraint("dsReportesKey1", New DataColumn() {Me.columnTransID}, true))
            Me.columnTransID.AutoIncrement = true
            Me.columnTransID.AllowDBNull = false
            Me.columnTransID.Unique = true
        End Sub
        
        Public Function Newtbl_interfascontabletransaccionesRow() As tbl_interfascontabletransaccionesRow
            Return CType(Me.NewRow,tbl_interfascontabletransaccionesRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_interfascontabletransaccionesRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_interfascontabletransaccionesRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_interfascontabletransaccionesRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_interfascontabletransaccionesRowChanged(Me, New tbl_interfascontabletransaccionesRowChangeEvent(CType(e.Row,tbl_interfascontabletransaccionesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_interfascontabletransaccionesRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_interfascontabletransaccionesRowChanging(Me, New tbl_interfascontabletransaccionesRowChangeEvent(CType(e.Row,tbl_interfascontabletransaccionesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_interfascontabletransaccionesRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_interfascontabletransaccionesRowDeleted(Me, New tbl_interfascontabletransaccionesRowChangeEvent(CType(e.Row,tbl_interfascontabletransaccionesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_interfascontabletransaccionesRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_interfascontabletransaccionesRowDeleting(Me, New tbl_interfascontabletransaccionesRowChangeEvent(CType(e.Row,tbl_interfascontabletransaccionesRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_interfascontabletransaccionesRow(ByVal row As tbl_interfascontabletransaccionesRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_interfascontabletransaccionesRow
        Inherits DataRow
        
        Private tabletbl_interfascontabletransacciones As tbl_interfascontabletransaccionesDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_interfascontabletransacciones = CType(Me.Table,tbl_interfascontabletransaccionesDataTable)
        End Sub
        
        Public Property TransID As Integer
            Get
                Return CType(Me(Me.tabletbl_interfascontabletransacciones.TransIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_interfascontabletransacciones.TransIDColumn) = value
            End Set
        End Property
        
        Public Property TransFecha As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_interfascontabletransacciones.TransFechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_interfascontabletransacciones.TransFechaColumn) = value
            End Set
        End Property
        
        Public Property TransFechaMovimiento As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_interfascontabletransacciones.TransFechaMovimientoColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_interfascontabletransacciones.TransFechaMovimientoColumn) = value
            End Set
        End Property
        
        Public Property TransDescripcion As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_interfascontabletransacciones.TransDescripcionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_interfascontabletransacciones.TransDescripcionColumn) = value
            End Set
        End Property
        
        Public Property TransIDTipo As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_interfascontabletransacciones.TransIDTipoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_interfascontabletransacciones.TransIDTipoColumn) = value
            End Set
        End Property
        
        Public Property TransUsuario As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_interfascontabletransacciones.TransUsuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_interfascontabletransacciones.TransUsuarioColumn) = value
            End Set
        End Property
        
        Public Property TransEstado As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_interfascontabletransacciones.TransEstadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_interfascontabletransacciones.TransEstadoColumn) = value
            End Set
        End Property
        
        Public Function IsTransFechaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_interfascontabletransacciones.TransFechaColumn)
        End Function
        
        Public Sub SetTransFechaNull()
            Me(Me.tabletbl_interfascontabletransacciones.TransFechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransFechaMovimientoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_interfascontabletransacciones.TransFechaMovimientoColumn)
        End Function
        
        Public Sub SetTransFechaMovimientoNull()
            Me(Me.tabletbl_interfascontabletransacciones.TransFechaMovimientoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDescripcionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_interfascontabletransacciones.TransDescripcionColumn)
        End Function
        
        Public Sub SetTransDescripcionNull()
            Me(Me.tabletbl_interfascontabletransacciones.TransDescripcionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransIDTipoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_interfascontabletransacciones.TransIDTipoColumn)
        End Function
        
        Public Sub SetTransIDTipoNull()
            Me(Me.tabletbl_interfascontabletransacciones.TransIDTipoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransUsuarioNull() As Boolean
            Return Me.IsNull(Me.tabletbl_interfascontabletransacciones.TransUsuarioColumn)
        End Function
        
        Public Sub SetTransUsuarioNull()
            Me(Me.tabletbl_interfascontabletransacciones.TransUsuarioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransEstadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_interfascontabletransacciones.TransEstadoColumn)
        End Function
        
        Public Sub SetTransEstadoNull()
            Me(Me.tabletbl_interfascontabletransacciones.TransEstadoColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_interfascontabletransaccionesRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_interfascontabletransaccionesRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_interfascontabletransaccionesRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_interfascontabletransaccionesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_interfasecontabletransaccionesdetallesDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnTransDID As DataColumn
        
        Private columnTransDIDTrans As DataColumn
        
        Private columnTransDCuentaNo As DataColumn
        
        Private columnTransDDescripcionCuenta As DataColumn
        
        Private columnTransDDebito As DataColumn
        
        Private columnTransDCredito As DataColumn
        
        Private columnTransDBalance As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_interfasecontabletransaccionesdetalles")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property TransDIDColumn As DataColumn
            Get
                Return Me.columnTransDID
            End Get
        End Property
        
        Friend ReadOnly Property TransDIDTransColumn As DataColumn
            Get
                Return Me.columnTransDIDTrans
            End Get
        End Property
        
        Friend ReadOnly Property TransDCuentaNoColumn As DataColumn
            Get
                Return Me.columnTransDCuentaNo
            End Get
        End Property
        
        Friend ReadOnly Property TransDDescripcionCuentaColumn As DataColumn
            Get
                Return Me.columnTransDDescripcionCuenta
            End Get
        End Property
        
        Friend ReadOnly Property TransDDebitoColumn As DataColumn
            Get
                Return Me.columnTransDDebito
            End Get
        End Property
        
        Friend ReadOnly Property TransDCreditoColumn As DataColumn
            Get
                Return Me.columnTransDCredito
            End Get
        End Property
        
        Friend ReadOnly Property TransDBalanceColumn As DataColumn
            Get
                Return Me.columnTransDBalance
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_interfasecontabletransaccionesdetallesRow
            Get
                Return CType(Me.Rows(index),tbl_interfasecontabletransaccionesdetallesRow)
            End Get
        End Property
        
        Public Event tbl_interfasecontabletransaccionesdetallesRowChanged As tbl_interfasecontabletransaccionesdetallesRowChangeEventHandler
        
        Public Event tbl_interfasecontabletransaccionesdetallesRowChanging As tbl_interfasecontabletransaccionesdetallesRowChangeEventHandler
        
        Public Event tbl_interfasecontabletransaccionesdetallesRowDeleted As tbl_interfasecontabletransaccionesdetallesRowChangeEventHandler
        
        Public Event tbl_interfasecontabletransaccionesdetallesRowDeleting As tbl_interfasecontabletransaccionesdetallesRowChangeEventHandler
        
        Public Overloads Sub Addtbl_interfasecontabletransaccionesdetallesRow(ByVal row As tbl_interfasecontabletransaccionesdetallesRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_interfasecontabletransaccionesdetallesRow(ByVal TransDIDTrans As Integer, ByVal TransDCuentaNo As String, ByVal TransDDescripcionCuenta As String, ByVal TransDDebito As Double, ByVal TransDCredito As Double, ByVal TransDBalance As Double) As tbl_interfasecontabletransaccionesdetallesRow
            Dim rowtbl_interfasecontabletransaccionesdetallesRow As tbl_interfasecontabletransaccionesdetallesRow = CType(Me.NewRow,tbl_interfasecontabletransaccionesdetallesRow)
            rowtbl_interfasecontabletransaccionesdetallesRow.ItemArray = New Object() {Nothing, TransDIDTrans, TransDCuentaNo, TransDDescripcionCuenta, TransDDebito, TransDCredito, TransDBalance}
            Me.Rows.Add(rowtbl_interfasecontabletransaccionesdetallesRow)
            Return rowtbl_interfasecontabletransaccionesdetallesRow
        End Function
        
        Public Function FindByTransDID(ByVal TransDID As Integer) As tbl_interfasecontabletransaccionesdetallesRow
            Return CType(Me.Rows.Find(New Object() {TransDID}),tbl_interfasecontabletransaccionesdetallesRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_interfasecontabletransaccionesdetallesDataTable = CType(MyBase.Clone,tbl_interfasecontabletransaccionesdetallesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_interfasecontabletransaccionesdetallesDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnTransDID = Me.Columns("TransDID")
            Me.columnTransDIDTrans = Me.Columns("TransDIDTrans")
            Me.columnTransDCuentaNo = Me.Columns("TransDCuentaNo")
            Me.columnTransDDescripcionCuenta = Me.Columns("TransDDescripcionCuenta")
            Me.columnTransDDebito = Me.Columns("TransDDebito")
            Me.columnTransDCredito = Me.Columns("TransDCredito")
            Me.columnTransDBalance = Me.Columns("TransDBalance")
        End Sub
        
        Private Sub InitClass()
            Me.columnTransDID = New DataColumn("TransDID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDID)
            Me.columnTransDIDTrans = New DataColumn("TransDIDTrans", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDIDTrans)
            Me.columnTransDCuentaNo = New DataColumn("TransDCuentaNo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDCuentaNo)
            Me.columnTransDDescripcionCuenta = New DataColumn("TransDDescripcionCuenta", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDDescripcionCuenta)
            Me.columnTransDDebito = New DataColumn("TransDDebito", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDDebito)
            Me.columnTransDCredito = New DataColumn("TransDCredito", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDCredito)
            Me.columnTransDBalance = New DataColumn("TransDBalance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDBalance)
            Me.Constraints.Add(New UniqueConstraint("dsReportesKey2", New DataColumn() {Me.columnTransDID}, true))
            Me.columnTransDID.AutoIncrement = true
            Me.columnTransDID.AllowDBNull = false
            Me.columnTransDID.Unique = true
        End Sub
        
        Public Function Newtbl_interfasecontabletransaccionesdetallesRow() As tbl_interfasecontabletransaccionesdetallesRow
            Return CType(Me.NewRow,tbl_interfasecontabletransaccionesdetallesRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_interfasecontabletransaccionesdetallesRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_interfasecontabletransaccionesdetallesRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_interfasecontabletransaccionesdetallesRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_interfasecontabletransaccionesdetallesRowChanged(Me, New tbl_interfasecontabletransaccionesdetallesRowChangeEvent(CType(e.Row,tbl_interfasecontabletransaccionesdetallesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_interfasecontabletransaccionesdetallesRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_interfasecontabletransaccionesdetallesRowChanging(Me, New tbl_interfasecontabletransaccionesdetallesRowChangeEvent(CType(e.Row,tbl_interfasecontabletransaccionesdetallesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_interfasecontabletransaccionesdetallesRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_interfasecontabletransaccionesdetallesRowDeleted(Me, New tbl_interfasecontabletransaccionesdetallesRowChangeEvent(CType(e.Row,tbl_interfasecontabletransaccionesdetallesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_interfasecontabletransaccionesdetallesRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_interfasecontabletransaccionesdetallesRowDeleting(Me, New tbl_interfasecontabletransaccionesdetallesRowChangeEvent(CType(e.Row,tbl_interfasecontabletransaccionesdetallesRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_interfasecontabletransaccionesdetallesRow(ByVal row As tbl_interfasecontabletransaccionesdetallesRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_interfasecontabletransaccionesdetallesRow
        Inherits DataRow
        
        Private tabletbl_interfasecontabletransaccionesdetalles As tbl_interfasecontabletransaccionesdetallesDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_interfasecontabletransaccionesdetalles = CType(Me.Table,tbl_interfasecontabletransaccionesdetallesDataTable)
        End Sub
        
        Public Property TransDID As Integer
            Get
                Return CType(Me(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDIDColumn) = value
            End Set
        End Property
        
        Public Property TransDIDTrans As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDIDTransColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDIDTransColumn) = value
            End Set
        End Property
        
        Public Property TransDCuentaNo As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDCuentaNoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDCuentaNoColumn) = value
            End Set
        End Property
        
        Public Property TransDDescripcionCuenta As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDDescripcionCuentaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDDescripcionCuentaColumn) = value
            End Set
        End Property
        
        Public Property TransDDebito As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDDebitoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDDebitoColumn) = value
            End Set
        End Property
        
        Public Property TransDCredito As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDCreditoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDCreditoColumn) = value
            End Set
        End Property
        
        Public Property TransDBalance As Double
            Get
                Try 
                    Return CType(Me(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDBalanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDBalanceColumn) = value
            End Set
        End Property
        
        Public Function IsTransDIDTransNull() As Boolean
            Return Me.IsNull(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDIDTransColumn)
        End Function
        
        Public Sub SetTransDIDTransNull()
            Me(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDIDTransColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDCuentaNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDCuentaNoColumn)
        End Function
        
        Public Sub SetTransDCuentaNoNull()
            Me(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDCuentaNoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDDescripcionCuentaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDDescripcionCuentaColumn)
        End Function
        
        Public Sub SetTransDDescripcionCuentaNull()
            Me(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDDescripcionCuentaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDDebitoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDDebitoColumn)
        End Function
        
        Public Sub SetTransDDebitoNull()
            Me(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDDebitoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDCreditoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDCreditoColumn)
        End Function
        
        Public Sub SetTransDCreditoNull()
            Me(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDCreditoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDBalanceNull() As Boolean
            Return Me.IsNull(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDBalanceColumn)
        End Function
        
        Public Sub SetTransDBalanceNull()
            Me(Me.tabletbl_interfasecontabletransaccionesdetalles.TransDBalanceColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_interfasecontabletransaccionesdetallesRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_interfasecontabletransaccionesdetallesRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_interfasecontabletransaccionesdetallesRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_interfasecontabletransaccionesdetallesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_cont_transaccionesDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id As DataColumn
        
        Private columnfld_codigo As DataColumn
        
        Private columnfld_descripcion As DataColumn
        
        Private columnfld_modulo As DataColumn
        
        Private columnTransID As DataColumn
        
        Private columnTransFecha As DataColumn
        
        Private columnTransFechaMovimiento As DataColumn
        
        Private columnTransDescripcion As DataColumn
        
        Private columnTransIDTipo As DataColumn
        
        Private columnTransUsuario As DataColumn
        
        Private columnTransEstado As DataColumn
        
        Private columnTransDID As DataColumn
        
        Private columnTransDIDTrans As DataColumn
        
        Private columnTransDCuentaNo As DataColumn
        
        Private columnTransDDescripcionCuenta As DataColumn
        
        Private columnTransDDebito As DataColumn
        
        Private columnTransDCredito As DataColumn
        
        Private columnTransDBalance As DataColumn
        
        Private columnTransIDDoc As DataColumn
        
        Private columnTransDoc As DataColumn
        
        Private columnTransDocDetalle As DataColumn
        
        Friend Sub New()
            MyBase.New("view_cont_transacciones")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_codigoColumn As DataColumn
            Get
                Return Me.columnfld_codigo
            End Get
        End Property
        
        Friend ReadOnly Property fld_descripcionColumn As DataColumn
            Get
                Return Me.columnfld_descripcion
            End Get
        End Property
        
        Friend ReadOnly Property fld_moduloColumn As DataColumn
            Get
                Return Me.columnfld_modulo
            End Get
        End Property
        
        Friend ReadOnly Property TransIDColumn As DataColumn
            Get
                Return Me.columnTransID
            End Get
        End Property
        
        Friend ReadOnly Property TransFechaColumn As DataColumn
            Get
                Return Me.columnTransFecha
            End Get
        End Property
        
        Friend ReadOnly Property TransFechaMovimientoColumn As DataColumn
            Get
                Return Me.columnTransFechaMovimiento
            End Get
        End Property
        
        Friend ReadOnly Property TransDescripcionColumn As DataColumn
            Get
                Return Me.columnTransDescripcion
            End Get
        End Property
        
        Friend ReadOnly Property TransIDTipoColumn As DataColumn
            Get
                Return Me.columnTransIDTipo
            End Get
        End Property
        
        Friend ReadOnly Property TransUsuarioColumn As DataColumn
            Get
                Return Me.columnTransUsuario
            End Get
        End Property
        
        Friend ReadOnly Property TransEstadoColumn As DataColumn
            Get
                Return Me.columnTransEstado
            End Get
        End Property
        
        Friend ReadOnly Property TransDIDColumn As DataColumn
            Get
                Return Me.columnTransDID
            End Get
        End Property
        
        Friend ReadOnly Property TransDIDTransColumn As DataColumn
            Get
                Return Me.columnTransDIDTrans
            End Get
        End Property
        
        Friend ReadOnly Property TransDCuentaNoColumn As DataColumn
            Get
                Return Me.columnTransDCuentaNo
            End Get
        End Property
        
        Friend ReadOnly Property TransDDescripcionCuentaColumn As DataColumn
            Get
                Return Me.columnTransDDescripcionCuenta
            End Get
        End Property
        
        Friend ReadOnly Property TransDDebitoColumn As DataColumn
            Get
                Return Me.columnTransDDebito
            End Get
        End Property
        
        Friend ReadOnly Property TransDCreditoColumn As DataColumn
            Get
                Return Me.columnTransDCredito
            End Get
        End Property
        
        Friend ReadOnly Property TransDBalanceColumn As DataColumn
            Get
                Return Me.columnTransDBalance
            End Get
        End Property
        
        Friend ReadOnly Property TransIDDocColumn As DataColumn
            Get
                Return Me.columnTransIDDoc
            End Get
        End Property
        
        Friend ReadOnly Property TransDocColumn As DataColumn
            Get
                Return Me.columnTransDoc
            End Get
        End Property
        
        Friend ReadOnly Property TransDocDetalleColumn As DataColumn
            Get
                Return Me.columnTransDocDetalle
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_cont_transaccionesRow
            Get
                Return CType(Me.Rows(index),view_cont_transaccionesRow)
            End Get
        End Property
        
        Public Event view_cont_transaccionesRowChanged As view_cont_transaccionesRowChangeEventHandler
        
        Public Event view_cont_transaccionesRowChanging As view_cont_transaccionesRowChangeEventHandler
        
        Public Event view_cont_transaccionesRowDeleted As view_cont_transaccionesRowChangeEventHandler
        
        Public Event view_cont_transaccionesRowDeleting As view_cont_transaccionesRowChangeEventHandler
        
        Public Overloads Sub Addview_cont_transaccionesRow(ByVal row As view_cont_transaccionesRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addview_cont_transaccionesRow( _
                    ByVal fld_codigo As String,  _
                    ByVal fld_descripcion As String,  _
                    ByVal fld_modulo As String,  _
                    ByVal TransFecha As Date,  _
                    ByVal TransFechaMovimiento As Date,  _
                    ByVal TransDescripcion As String,  _
                    ByVal TransIDTipo As Integer,  _
                    ByVal TransUsuario As String,  _
                    ByVal TransEstado As String,  _
                    ByVal TransDIDTrans As Integer,  _
                    ByVal TransDCuentaNo As String,  _
                    ByVal TransDDescripcionCuenta As String,  _
                    ByVal TransDDebito As Double,  _
                    ByVal TransDCredito As Double,  _
                    ByVal TransDBalance As Double,  _
                    ByVal TransIDDoc As Integer,  _
                    ByVal TransDoc As String,  _
                    ByVal TransDocDetalle As String) As view_cont_transaccionesRow
            Dim rowview_cont_transaccionesRow As view_cont_transaccionesRow = CType(Me.NewRow,view_cont_transaccionesRow)
            rowview_cont_transaccionesRow.ItemArray = New Object() {Nothing, fld_codigo, fld_descripcion, fld_modulo, Nothing, TransFecha, TransFechaMovimiento, TransDescripcion, TransIDTipo, TransUsuario, TransEstado, Nothing, TransDIDTrans, TransDCuentaNo, TransDDescripcionCuenta, TransDDebito, TransDCredito, TransDBalance, TransIDDoc, TransDoc, TransDocDetalle}
            Me.Rows.Add(rowview_cont_transaccionesRow)
            Return rowview_cont_transaccionesRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As view_cont_transaccionesDataTable = CType(MyBase.Clone,view_cont_transaccionesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New view_cont_transaccionesDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnfld_codigo = Me.Columns("fld_codigo")
            Me.columnfld_descripcion = Me.Columns("fld_descripcion")
            Me.columnfld_modulo = Me.Columns("fld_modulo")
            Me.columnTransID = Me.Columns("TransID")
            Me.columnTransFecha = Me.Columns("TransFecha")
            Me.columnTransFechaMovimiento = Me.Columns("TransFechaMovimiento")
            Me.columnTransDescripcion = Me.Columns("TransDescripcion")
            Me.columnTransIDTipo = Me.Columns("TransIDTipo")
            Me.columnTransUsuario = Me.Columns("TransUsuario")
            Me.columnTransEstado = Me.Columns("TransEstado")
            Me.columnTransDID = Me.Columns("TransDID")
            Me.columnTransDIDTrans = Me.Columns("TransDIDTrans")
            Me.columnTransDCuentaNo = Me.Columns("TransDCuentaNo")
            Me.columnTransDDescripcionCuenta = Me.Columns("TransDDescripcionCuenta")
            Me.columnTransDDebito = Me.Columns("TransDDebito")
            Me.columnTransDCredito = Me.Columns("TransDCredito")
            Me.columnTransDBalance = Me.Columns("TransDBalance")
            Me.columnTransIDDoc = Me.Columns("TransIDDoc")
            Me.columnTransDoc = Me.Columns("TransDoc")
            Me.columnTransDocDetalle = Me.Columns("TransDocDetalle")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnfld_codigo = New DataColumn("fld_codigo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_codigo)
            Me.columnfld_descripcion = New DataColumn("fld_descripcion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_descripcion)
            Me.columnfld_modulo = New DataColumn("fld_modulo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_modulo)
            Me.columnTransID = New DataColumn("TransID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransID)
            Me.columnTransFecha = New DataColumn("TransFecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransFecha)
            Me.columnTransFechaMovimiento = New DataColumn("TransFechaMovimiento", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransFechaMovimiento)
            Me.columnTransDescripcion = New DataColumn("TransDescripcion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDescripcion)
            Me.columnTransIDTipo = New DataColumn("TransIDTipo", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransIDTipo)
            Me.columnTransUsuario = New DataColumn("TransUsuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransUsuario)
            Me.columnTransEstado = New DataColumn("TransEstado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransEstado)
            Me.columnTransDID = New DataColumn("TransDID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDID)
            Me.columnTransDIDTrans = New DataColumn("TransDIDTrans", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDIDTrans)
            Me.columnTransDCuentaNo = New DataColumn("TransDCuentaNo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDCuentaNo)
            Me.columnTransDDescripcionCuenta = New DataColumn("TransDDescripcionCuenta", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDDescripcionCuenta)
            Me.columnTransDDebito = New DataColumn("TransDDebito", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDDebito)
            Me.columnTransDCredito = New DataColumn("TransDCredito", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDCredito)
            Me.columnTransDBalance = New DataColumn("TransDBalance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDBalance)
            Me.columnTransIDDoc = New DataColumn("TransIDDoc", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransIDDoc)
            Me.columnTransDoc = New DataColumn("TransDoc", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDoc)
            Me.columnTransDocDetalle = New DataColumn("TransDocDetalle", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDocDetalle)
            Me.columnfld_id.AutoIncrement = true
            Me.columnTransID.AutoIncrement = true
            Me.columnTransDID.AutoIncrement = true
        End Sub
        
        Public Function Newview_cont_transaccionesRow() As view_cont_transaccionesRow
            Return CType(Me.NewRow,view_cont_transaccionesRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New view_cont_transaccionesRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(view_cont_transaccionesRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_cont_transaccionesRowChangedEvent) Is Nothing) Then
                RaiseEvent view_cont_transaccionesRowChanged(Me, New view_cont_transaccionesRowChangeEvent(CType(e.Row,view_cont_transaccionesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_cont_transaccionesRowChangingEvent) Is Nothing) Then
                RaiseEvent view_cont_transaccionesRowChanging(Me, New view_cont_transaccionesRowChangeEvent(CType(e.Row,view_cont_transaccionesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_cont_transaccionesRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_cont_transaccionesRowDeleted(Me, New view_cont_transaccionesRowChangeEvent(CType(e.Row,view_cont_transaccionesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_cont_transaccionesRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_cont_transaccionesRowDeleting(Me, New view_cont_transaccionesRowChangeEvent(CType(e.Row,view_cont_transaccionesRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeview_cont_transaccionesRow(ByVal row As view_cont_transaccionesRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_cont_transaccionesRow
        Inherits DataRow
        
        Private tableview_cont_transacciones As view_cont_transaccionesDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_cont_transacciones = CType(Me.Table,view_cont_transaccionesDataTable)
        End Sub
        
        Public Property fld_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_transacciones.fld_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_transacciones.fld_idColumn) = value
            End Set
        End Property
        
        Public Property fld_codigo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_transacciones.fld_codigoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_transacciones.fld_codigoColumn) = value
            End Set
        End Property
        
        Public Property fld_descripcion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_transacciones.fld_descripcionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_transacciones.fld_descripcionColumn) = value
            End Set
        End Property
        
        Public Property fld_modulo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_transacciones.fld_moduloColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_transacciones.fld_moduloColumn) = value
            End Set
        End Property
        
        Public Property TransID As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_transacciones.TransIDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_transacciones.TransIDColumn) = value
            End Set
        End Property
        
        Public Property TransFecha As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_transacciones.TransFechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_transacciones.TransFechaColumn) = value
            End Set
        End Property
        
        Public Property TransFechaMovimiento As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_transacciones.TransFechaMovimientoColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_transacciones.TransFechaMovimientoColumn) = value
            End Set
        End Property
        
        Public Property TransDescripcion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_transacciones.TransDescripcionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_transacciones.TransDescripcionColumn) = value
            End Set
        End Property
        
        Public Property TransIDTipo As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_transacciones.TransIDTipoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_transacciones.TransIDTipoColumn) = value
            End Set
        End Property
        
        Public Property TransUsuario As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_transacciones.TransUsuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_transacciones.TransUsuarioColumn) = value
            End Set
        End Property
        
        Public Property TransEstado As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_transacciones.TransEstadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_transacciones.TransEstadoColumn) = value
            End Set
        End Property
        
        Public Property TransDID As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_transacciones.TransDIDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_transacciones.TransDIDColumn) = value
            End Set
        End Property
        
        Public Property TransDIDTrans As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_transacciones.TransDIDTransColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_transacciones.TransDIDTransColumn) = value
            End Set
        End Property
        
        Public Property TransDCuentaNo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_transacciones.TransDCuentaNoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_transacciones.TransDCuentaNoColumn) = value
            End Set
        End Property
        
        Public Property TransDDescripcionCuenta As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_transacciones.TransDDescripcionCuentaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_transacciones.TransDDescripcionCuentaColumn) = value
            End Set
        End Property
        
        Public Property TransDDebito As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_transacciones.TransDDebitoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_transacciones.TransDDebitoColumn) = value
            End Set
        End Property
        
        Public Property TransDCredito As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_transacciones.TransDCreditoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_transacciones.TransDCreditoColumn) = value
            End Set
        End Property
        
        Public Property TransDBalance As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_transacciones.TransDBalanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_transacciones.TransDBalanceColumn) = value
            End Set
        End Property
        
        Public Property TransIDDoc As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_transacciones.TransIDDocColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_transacciones.TransIDDocColumn) = value
            End Set
        End Property
        
        Public Property TransDoc As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_transacciones.TransDocColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_transacciones.TransDocColumn) = value
            End Set
        End Property
        
        Public Property TransDocDetalle As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_transacciones.TransDocDetalleColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_transacciones.TransDocDetalleColumn) = value
            End Set
        End Property
        
        Public Function Isfld_idNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_transacciones.fld_idColumn)
        End Function
        
        Public Sub Setfld_idNull()
            Me(Me.tableview_cont_transacciones.fld_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_codigoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_transacciones.fld_codigoColumn)
        End Function
        
        Public Sub Setfld_codigoNull()
            Me(Me.tableview_cont_transacciones.fld_codigoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_descripcionNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_transacciones.fld_descripcionColumn)
        End Function
        
        Public Sub Setfld_descripcionNull()
            Me(Me.tableview_cont_transacciones.fld_descripcionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_moduloNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_transacciones.fld_moduloColumn)
        End Function
        
        Public Sub Setfld_moduloNull()
            Me(Me.tableview_cont_transacciones.fld_moduloColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransIDNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_transacciones.TransIDColumn)
        End Function
        
        Public Sub SetTransIDNull()
            Me(Me.tableview_cont_transacciones.TransIDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransFechaNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_transacciones.TransFechaColumn)
        End Function
        
        Public Sub SetTransFechaNull()
            Me(Me.tableview_cont_transacciones.TransFechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransFechaMovimientoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_transacciones.TransFechaMovimientoColumn)
        End Function
        
        Public Sub SetTransFechaMovimientoNull()
            Me(Me.tableview_cont_transacciones.TransFechaMovimientoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDescripcionNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_transacciones.TransDescripcionColumn)
        End Function
        
        Public Sub SetTransDescripcionNull()
            Me(Me.tableview_cont_transacciones.TransDescripcionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransIDTipoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_transacciones.TransIDTipoColumn)
        End Function
        
        Public Sub SetTransIDTipoNull()
            Me(Me.tableview_cont_transacciones.TransIDTipoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransUsuarioNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_transacciones.TransUsuarioColumn)
        End Function
        
        Public Sub SetTransUsuarioNull()
            Me(Me.tableview_cont_transacciones.TransUsuarioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransEstadoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_transacciones.TransEstadoColumn)
        End Function
        
        Public Sub SetTransEstadoNull()
            Me(Me.tableview_cont_transacciones.TransEstadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDIDNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_transacciones.TransDIDColumn)
        End Function
        
        Public Sub SetTransDIDNull()
            Me(Me.tableview_cont_transacciones.TransDIDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDIDTransNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_transacciones.TransDIDTransColumn)
        End Function
        
        Public Sub SetTransDIDTransNull()
            Me(Me.tableview_cont_transacciones.TransDIDTransColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDCuentaNoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_transacciones.TransDCuentaNoColumn)
        End Function
        
        Public Sub SetTransDCuentaNoNull()
            Me(Me.tableview_cont_transacciones.TransDCuentaNoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDDescripcionCuentaNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_transacciones.TransDDescripcionCuentaColumn)
        End Function
        
        Public Sub SetTransDDescripcionCuentaNull()
            Me(Me.tableview_cont_transacciones.TransDDescripcionCuentaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDDebitoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_transacciones.TransDDebitoColumn)
        End Function
        
        Public Sub SetTransDDebitoNull()
            Me(Me.tableview_cont_transacciones.TransDDebitoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDCreditoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_transacciones.TransDCreditoColumn)
        End Function
        
        Public Sub SetTransDCreditoNull()
            Me(Me.tableview_cont_transacciones.TransDCreditoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDBalanceNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_transacciones.TransDBalanceColumn)
        End Function
        
        Public Sub SetTransDBalanceNull()
            Me(Me.tableview_cont_transacciones.TransDBalanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransIDDocNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_transacciones.TransIDDocColumn)
        End Function
        
        Public Sub SetTransIDDocNull()
            Me(Me.tableview_cont_transacciones.TransIDDocColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDocNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_transacciones.TransDocColumn)
        End Function
        
        Public Sub SetTransDocNull()
            Me(Me.tableview_cont_transacciones.TransDocColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDocDetalleNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_transacciones.TransDocDetalleColumn)
        End Function
        
        Public Sub SetTransDocDetalleNull()
            Me(Me.tableview_cont_transacciones.TransDocDetalleColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_cont_transaccionesRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As view_cont_transaccionesRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As view_cont_transaccionesRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As view_cont_transaccionesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_catalogoDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnID As DataColumn
        
        Private columnCuentaNo As DataColumn
        
        Private columnDescripcion As DataColumn
        
        Private columnGrupo As DataColumn
        
        Private columnTipo As DataColumn
        
        Private columnDebito As DataColumn
        
        Private columnCredito As DataColumn
        
        Private columnBalance As DataColumn
        
        Private columnCtaControl As DataColumn
        
        Private columnNombreMes As DataColumn
        
        Private columnNumeroMes As DataColumn
        
        Private columnBalanceGeneral As DataColumn
        
        Private columnEstadoResultado As DataColumn
        
        Private columnOrdenEstadoResultado As DataColumn
        
        Private columnAccionEstatoResultado As DataColumn
        
        Private columnVerEnCero As DataColumn
        
        Private columnFecha As DataColumn
        
        Private columnUsuario As DataColumn
        
        Private columnBalanceAnterior As DataColumn
        
        Private columnOrigen As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_catalogo")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property IDColumn As DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        Friend ReadOnly Property CuentaNoColumn As DataColumn
            Get
                Return Me.columnCuentaNo
            End Get
        End Property
        
        Friend ReadOnly Property DescripcionColumn As DataColumn
            Get
                Return Me.columnDescripcion
            End Get
        End Property
        
        Friend ReadOnly Property GrupoColumn As DataColumn
            Get
                Return Me.columnGrupo
            End Get
        End Property
        
        Friend ReadOnly Property TipoColumn As DataColumn
            Get
                Return Me.columnTipo
            End Get
        End Property
        
        Friend ReadOnly Property DebitoColumn As DataColumn
            Get
                Return Me.columnDebito
            End Get
        End Property
        
        Friend ReadOnly Property CreditoColumn As DataColumn
            Get
                Return Me.columnCredito
            End Get
        End Property
        
        Friend ReadOnly Property BalanceColumn As DataColumn
            Get
                Return Me.columnBalance
            End Get
        End Property
        
        Friend ReadOnly Property CtaControlColumn As DataColumn
            Get
                Return Me.columnCtaControl
            End Get
        End Property
        
        Friend ReadOnly Property NombreMesColumn As DataColumn
            Get
                Return Me.columnNombreMes
            End Get
        End Property
        
        Friend ReadOnly Property NumeroMesColumn As DataColumn
            Get
                Return Me.columnNumeroMes
            End Get
        End Property
        
        Friend ReadOnly Property BalanceGeneralColumn As DataColumn
            Get
                Return Me.columnBalanceGeneral
            End Get
        End Property
        
        Friend ReadOnly Property EstadoResultadoColumn As DataColumn
            Get
                Return Me.columnEstadoResultado
            End Get
        End Property
        
        Friend ReadOnly Property OrdenEstadoResultadoColumn As DataColumn
            Get
                Return Me.columnOrdenEstadoResultado
            End Get
        End Property
        
        Friend ReadOnly Property AccionEstatoResultadoColumn As DataColumn
            Get
                Return Me.columnAccionEstatoResultado
            End Get
        End Property
        
        Friend ReadOnly Property VerEnCeroColumn As DataColumn
            Get
                Return Me.columnVerEnCero
            End Get
        End Property
        
        Friend ReadOnly Property FechaColumn As DataColumn
            Get
                Return Me.columnFecha
            End Get
        End Property
        
        Friend ReadOnly Property UsuarioColumn As DataColumn
            Get
                Return Me.columnUsuario
            End Get
        End Property
        
        Friend ReadOnly Property BalanceAnteriorColumn As DataColumn
            Get
                Return Me.columnBalanceAnterior
            End Get
        End Property
        
        Friend ReadOnly Property OrigenColumn As DataColumn
            Get
                Return Me.columnOrigen
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_catalogoRow
            Get
                Return CType(Me.Rows(index),tbl_catalogoRow)
            End Get
        End Property
        
        Public Event tbl_catalogoRowChanged As tbl_catalogoRowChangeEventHandler
        
        Public Event tbl_catalogoRowChanging As tbl_catalogoRowChangeEventHandler
        
        Public Event tbl_catalogoRowDeleted As tbl_catalogoRowChangeEventHandler
        
        Public Event tbl_catalogoRowDeleting As tbl_catalogoRowChangeEventHandler
        
        Public Overloads Sub Addtbl_catalogoRow(ByVal row As tbl_catalogoRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_catalogoRow( _
                    ByVal CuentaNo As String,  _
                    ByVal Descripcion As String,  _
                    ByVal Grupo As Integer,  _
                    ByVal Tipo As String,  _
                    ByVal Debito As Decimal,  _
                    ByVal Credito As Decimal,  _
                    ByVal Balance As Decimal,  _
                    ByVal CtaControl As String,  _
                    ByVal NombreMes As String,  _
                    ByVal NumeroMes As Integer,  _
                    ByVal BalanceGeneral As String,  _
                    ByVal EstadoResultado As String,  _
                    ByVal OrdenEstadoResultado As String,  _
                    ByVal AccionEstatoResultado As String,  _
                    ByVal VerEnCero As String,  _
                    ByVal Fecha As Date,  _
                    ByVal Usuario As String,  _
                    ByVal BalanceAnterior As Decimal,  _
                    ByVal Origen As Integer) As tbl_catalogoRow
            Dim rowtbl_catalogoRow As tbl_catalogoRow = CType(Me.NewRow,tbl_catalogoRow)
            rowtbl_catalogoRow.ItemArray = New Object() {Nothing, CuentaNo, Descripcion, Grupo, Tipo, Debito, Credito, Balance, CtaControl, NombreMes, NumeroMes, BalanceGeneral, EstadoResultado, OrdenEstadoResultado, AccionEstatoResultado, VerEnCero, Fecha, Usuario, BalanceAnterior, Origen}
            Me.Rows.Add(rowtbl_catalogoRow)
            Return rowtbl_catalogoRow
        End Function
        
        Public Function FindByID(ByVal ID As Integer) As tbl_catalogoRow
            Return CType(Me.Rows.Find(New Object() {ID}),tbl_catalogoRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_catalogoDataTable = CType(MyBase.Clone,tbl_catalogoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_catalogoDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnID = Me.Columns("ID")
            Me.columnCuentaNo = Me.Columns("CuentaNo")
            Me.columnDescripcion = Me.Columns("Descripcion")
            Me.columnGrupo = Me.Columns("Grupo")
            Me.columnTipo = Me.Columns("Tipo")
            Me.columnDebito = Me.Columns("Debito")
            Me.columnCredito = Me.Columns("Credito")
            Me.columnBalance = Me.Columns("Balance")
            Me.columnCtaControl = Me.Columns("CtaControl")
            Me.columnNombreMes = Me.Columns("NombreMes")
            Me.columnNumeroMes = Me.Columns("NumeroMes")
            Me.columnBalanceGeneral = Me.Columns("BalanceGeneral")
            Me.columnEstadoResultado = Me.Columns("EstadoResultado")
            Me.columnOrdenEstadoResultado = Me.Columns("OrdenEstadoResultado")
            Me.columnAccionEstatoResultado = Me.Columns("AccionEstatoResultado")
            Me.columnVerEnCero = Me.Columns("VerEnCero")
            Me.columnFecha = Me.Columns("Fecha")
            Me.columnUsuario = Me.Columns("Usuario")
            Me.columnBalanceAnterior = Me.Columns("BalanceAnterior")
            Me.columnOrigen = Me.Columns("Origen")
        End Sub
        
        Private Sub InitClass()
            Me.columnID = New DataColumn("ID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnID)
            Me.columnCuentaNo = New DataColumn("CuentaNo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCuentaNo)
            Me.columnDescripcion = New DataColumn("Descripcion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDescripcion)
            Me.columnGrupo = New DataColumn("Grupo", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnGrupo)
            Me.columnTipo = New DataColumn("Tipo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTipo)
            Me.columnDebito = New DataColumn("Debito", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDebito)
            Me.columnCredito = New DataColumn("Credito", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCredito)
            Me.columnBalance = New DataColumn("Balance", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnBalance)
            Me.columnCtaControl = New DataColumn("CtaControl", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCtaControl)
            Me.columnNombreMes = New DataColumn("NombreMes", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNombreMes)
            Me.columnNumeroMes = New DataColumn("NumeroMes", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNumeroMes)
            Me.columnBalanceGeneral = New DataColumn("BalanceGeneral", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnBalanceGeneral)
            Me.columnEstadoResultado = New DataColumn("EstadoResultado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnEstadoResultado)
            Me.columnOrdenEstadoResultado = New DataColumn("OrdenEstadoResultado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnOrdenEstadoResultado)
            Me.columnAccionEstatoResultado = New DataColumn("AccionEstatoResultado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnAccionEstatoResultado)
            Me.columnVerEnCero = New DataColumn("VerEnCero", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnVerEnCero)
            Me.columnFecha = New DataColumn("Fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFecha)
            Me.columnUsuario = New DataColumn("Usuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnUsuario)
            Me.columnBalanceAnterior = New DataColumn("BalanceAnterior", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnBalanceAnterior)
            Me.columnOrigen = New DataColumn("Origen", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnOrigen)
            Me.Constraints.Add(New UniqueConstraint("dsReportesKey4", New DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
        End Sub
        
        Public Function Newtbl_catalogoRow() As tbl_catalogoRow
            Return CType(Me.NewRow,tbl_catalogoRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_catalogoRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_catalogoRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_catalogoRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_catalogoRowChanged(Me, New tbl_catalogoRowChangeEvent(CType(e.Row,tbl_catalogoRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_catalogoRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_catalogoRowChanging(Me, New tbl_catalogoRowChangeEvent(CType(e.Row,tbl_catalogoRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_catalogoRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_catalogoRowDeleted(Me, New tbl_catalogoRowChangeEvent(CType(e.Row,tbl_catalogoRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_catalogoRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_catalogoRowDeleting(Me, New tbl_catalogoRowChangeEvent(CType(e.Row,tbl_catalogoRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_catalogoRow(ByVal row As tbl_catalogoRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_catalogoRow
        Inherits DataRow
        
        Private tabletbl_catalogo As tbl_catalogoDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_catalogo = CType(Me.Table,tbl_catalogoDataTable)
        End Sub
        
        Public Property ID As Integer
            Get
                Return CType(Me(Me.tabletbl_catalogo.IDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_catalogo.IDColumn) = value
            End Set
        End Property
        
        Public Property CuentaNo As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo.CuentaNoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo.CuentaNoColumn) = value
            End Set
        End Property
        
        Public Property Descripcion As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo.DescripcionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo.DescripcionColumn) = value
            End Set
        End Property
        
        Public Property Grupo As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo.GrupoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo.GrupoColumn) = value
            End Set
        End Property
        
        Public Property Tipo As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo.TipoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo.TipoColumn) = value
            End Set
        End Property
        
        Public Property Debito As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo.DebitoColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo.DebitoColumn) = value
            End Set
        End Property
        
        Public Property Credito As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo.CreditoColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo.CreditoColumn) = value
            End Set
        End Property
        
        Public Property Balance As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo.BalanceColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo.BalanceColumn) = value
            End Set
        End Property
        
        Public Property CtaControl As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo.CtaControlColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo.CtaControlColumn) = value
            End Set
        End Property
        
        Public Property NombreMes As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo.NombreMesColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo.NombreMesColumn) = value
            End Set
        End Property
        
        Public Property NumeroMes As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo.NumeroMesColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo.NumeroMesColumn) = value
            End Set
        End Property
        
        Public Property BalanceGeneral As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo.BalanceGeneralColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo.BalanceGeneralColumn) = value
            End Set
        End Property
        
        Public Property EstadoResultado As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo.EstadoResultadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo.EstadoResultadoColumn) = value
            End Set
        End Property
        
        Public Property OrdenEstadoResultado As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo.OrdenEstadoResultadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo.OrdenEstadoResultadoColumn) = value
            End Set
        End Property
        
        Public Property AccionEstatoResultado As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo.AccionEstatoResultadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo.AccionEstatoResultadoColumn) = value
            End Set
        End Property
        
        Public Property VerEnCero As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo.VerEnCeroColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo.VerEnCeroColumn) = value
            End Set
        End Property
        
        Public Property Fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo.FechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo.FechaColumn) = value
            End Set
        End Property
        
        Public Property Usuario As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo.UsuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo.UsuarioColumn) = value
            End Set
        End Property
        
        Public Property BalanceAnterior As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo.BalanceAnteriorColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo.BalanceAnteriorColumn) = value
            End Set
        End Property
        
        Public Property Origen As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_catalogo.OrigenColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_catalogo.OrigenColumn) = value
            End Set
        End Property
        
        Public Function IsCuentaNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo.CuentaNoColumn)
        End Function
        
        Public Sub SetCuentaNoNull()
            Me(Me.tabletbl_catalogo.CuentaNoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDescripcionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo.DescripcionColumn)
        End Function
        
        Public Sub SetDescripcionNull()
            Me(Me.tabletbl_catalogo.DescripcionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsGrupoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo.GrupoColumn)
        End Function
        
        Public Sub SetGrupoNull()
            Me(Me.tabletbl_catalogo.GrupoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTipoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo.TipoColumn)
        End Function
        
        Public Sub SetTipoNull()
            Me(Me.tabletbl_catalogo.TipoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDebitoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo.DebitoColumn)
        End Function
        
        Public Sub SetDebitoNull()
            Me(Me.tabletbl_catalogo.DebitoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCreditoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo.CreditoColumn)
        End Function
        
        Public Sub SetCreditoNull()
            Me(Me.tabletbl_catalogo.CreditoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsBalanceNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo.BalanceColumn)
        End Function
        
        Public Sub SetBalanceNull()
            Me(Me.tabletbl_catalogo.BalanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCtaControlNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo.CtaControlColumn)
        End Function
        
        Public Sub SetCtaControlNull()
            Me(Me.tabletbl_catalogo.CtaControlColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNombreMesNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo.NombreMesColumn)
        End Function
        
        Public Sub SetNombreMesNull()
            Me(Me.tabletbl_catalogo.NombreMesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNumeroMesNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo.NumeroMesColumn)
        End Function
        
        Public Sub SetNumeroMesNull()
            Me(Me.tabletbl_catalogo.NumeroMesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsBalanceGeneralNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo.BalanceGeneralColumn)
        End Function
        
        Public Sub SetBalanceGeneralNull()
            Me(Me.tabletbl_catalogo.BalanceGeneralColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsEstadoResultadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo.EstadoResultadoColumn)
        End Function
        
        Public Sub SetEstadoResultadoNull()
            Me(Me.tabletbl_catalogo.EstadoResultadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsOrdenEstadoResultadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo.OrdenEstadoResultadoColumn)
        End Function
        
        Public Sub SetOrdenEstadoResultadoNull()
            Me(Me.tabletbl_catalogo.OrdenEstadoResultadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsAccionEstatoResultadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo.AccionEstatoResultadoColumn)
        End Function
        
        Public Sub SetAccionEstatoResultadoNull()
            Me(Me.tabletbl_catalogo.AccionEstatoResultadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsVerEnCeroNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo.VerEnCeroColumn)
        End Function
        
        Public Sub SetVerEnCeroNull()
            Me(Me.tabletbl_catalogo.VerEnCeroColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo.FechaColumn)
        End Function
        
        Public Sub SetFechaNull()
            Me(Me.tabletbl_catalogo.FechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsUsuarioNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo.UsuarioColumn)
        End Function
        
        Public Sub SetUsuarioNull()
            Me(Me.tabletbl_catalogo.UsuarioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsBalanceAnteriorNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo.BalanceAnteriorColumn)
        End Function
        
        Public Sub SetBalanceAnteriorNull()
            Me(Me.tabletbl_catalogo.BalanceAnteriorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsOrigenNull() As Boolean
            Return Me.IsNull(Me.tabletbl_catalogo.OrigenColumn)
        End Function
        
        Public Sub SetOrigenNull()
            Me(Me.tabletbl_catalogo.OrigenColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_catalogoRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_catalogoRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_catalogoRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_catalogoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_cont_libro_generalDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnID As DataColumn
        
        Private columnCuentaNo As DataColumn
        
        Private columnDescripcion As DataColumn
        
        Private columnGrupo As DataColumn
        
        Private columnTipo As DataColumn
        
        Private columnDebito As DataColumn
        
        Private columnCredito As DataColumn
        
        Private columnBalance As DataColumn
        
        Private columnCtaControl As DataColumn
        
        Private columnNombreMes As DataColumn
        
        Private columnNumeroMes As DataColumn
        
        Private columnBalanceGeneral As DataColumn
        
        Private columnEstadoResultado As DataColumn
        
        Private columnOrdenEstadoResultado As DataColumn
        
        Private columnAccionEstatoResultado As DataColumn
        
        Private columnVerEnCero As DataColumn
        
        Private columnFecha As DataColumn
        
        Private columnUsuario As DataColumn
        
        Private columnTransID As DataColumn
        
        Private columnTransFecha As DataColumn
        
        Private columnTransFechaMovimiento As DataColumn
        
        Private columnTransDescripcion As DataColumn
        
        Private columnTransIDTipo As DataColumn
        
        Private columnTransUsuario As DataColumn
        
        Private columnTransEstado As DataColumn
        
        Private columnTransDID As DataColumn
        
        Private columnTransDIDTrans As DataColumn
        
        Private columnTransDCuentaNo As DataColumn
        
        Private columnTransDDescripcionCuenta As DataColumn
        
        Private columnTransDDebito As DataColumn
        
        Private columnTransDCredito As DataColumn
        
        Private columnTransDBalance As DataColumn
        
        Private columnBalanceAnterior As DataColumn
        
        Friend Sub New()
            MyBase.New("view_cont_libro_general")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property IDColumn As DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        Friend ReadOnly Property CuentaNoColumn As DataColumn
            Get
                Return Me.columnCuentaNo
            End Get
        End Property
        
        Friend ReadOnly Property DescripcionColumn As DataColumn
            Get
                Return Me.columnDescripcion
            End Get
        End Property
        
        Friend ReadOnly Property GrupoColumn As DataColumn
            Get
                Return Me.columnGrupo
            End Get
        End Property
        
        Friend ReadOnly Property TipoColumn As DataColumn
            Get
                Return Me.columnTipo
            End Get
        End Property
        
        Friend ReadOnly Property DebitoColumn As DataColumn
            Get
                Return Me.columnDebito
            End Get
        End Property
        
        Friend ReadOnly Property CreditoColumn As DataColumn
            Get
                Return Me.columnCredito
            End Get
        End Property
        
        Friend ReadOnly Property BalanceColumn As DataColumn
            Get
                Return Me.columnBalance
            End Get
        End Property
        
        Friend ReadOnly Property CtaControlColumn As DataColumn
            Get
                Return Me.columnCtaControl
            End Get
        End Property
        
        Friend ReadOnly Property NombreMesColumn As DataColumn
            Get
                Return Me.columnNombreMes
            End Get
        End Property
        
        Friend ReadOnly Property NumeroMesColumn As DataColumn
            Get
                Return Me.columnNumeroMes
            End Get
        End Property
        
        Friend ReadOnly Property BalanceGeneralColumn As DataColumn
            Get
                Return Me.columnBalanceGeneral
            End Get
        End Property
        
        Friend ReadOnly Property EstadoResultadoColumn As DataColumn
            Get
                Return Me.columnEstadoResultado
            End Get
        End Property
        
        Friend ReadOnly Property OrdenEstadoResultadoColumn As DataColumn
            Get
                Return Me.columnOrdenEstadoResultado
            End Get
        End Property
        
        Friend ReadOnly Property AccionEstatoResultadoColumn As DataColumn
            Get
                Return Me.columnAccionEstatoResultado
            End Get
        End Property
        
        Friend ReadOnly Property VerEnCeroColumn As DataColumn
            Get
                Return Me.columnVerEnCero
            End Get
        End Property
        
        Friend ReadOnly Property FechaColumn As DataColumn
            Get
                Return Me.columnFecha
            End Get
        End Property
        
        Friend ReadOnly Property UsuarioColumn As DataColumn
            Get
                Return Me.columnUsuario
            End Get
        End Property
        
        Friend ReadOnly Property TransIDColumn As DataColumn
            Get
                Return Me.columnTransID
            End Get
        End Property
        
        Friend ReadOnly Property TransFechaColumn As DataColumn
            Get
                Return Me.columnTransFecha
            End Get
        End Property
        
        Friend ReadOnly Property TransFechaMovimientoColumn As DataColumn
            Get
                Return Me.columnTransFechaMovimiento
            End Get
        End Property
        
        Friend ReadOnly Property TransDescripcionColumn As DataColumn
            Get
                Return Me.columnTransDescripcion
            End Get
        End Property
        
        Friend ReadOnly Property TransIDTipoColumn As DataColumn
            Get
                Return Me.columnTransIDTipo
            End Get
        End Property
        
        Friend ReadOnly Property TransUsuarioColumn As DataColumn
            Get
                Return Me.columnTransUsuario
            End Get
        End Property
        
        Friend ReadOnly Property TransEstadoColumn As DataColumn
            Get
                Return Me.columnTransEstado
            End Get
        End Property
        
        Friend ReadOnly Property TransDIDColumn As DataColumn
            Get
                Return Me.columnTransDID
            End Get
        End Property
        
        Friend ReadOnly Property TransDIDTransColumn As DataColumn
            Get
                Return Me.columnTransDIDTrans
            End Get
        End Property
        
        Friend ReadOnly Property TransDCuentaNoColumn As DataColumn
            Get
                Return Me.columnTransDCuentaNo
            End Get
        End Property
        
        Friend ReadOnly Property TransDDescripcionCuentaColumn As DataColumn
            Get
                Return Me.columnTransDDescripcionCuenta
            End Get
        End Property
        
        Friend ReadOnly Property TransDDebitoColumn As DataColumn
            Get
                Return Me.columnTransDDebito
            End Get
        End Property
        
        Friend ReadOnly Property TransDCreditoColumn As DataColumn
            Get
                Return Me.columnTransDCredito
            End Get
        End Property
        
        Friend ReadOnly Property TransDBalanceColumn As DataColumn
            Get
                Return Me.columnTransDBalance
            End Get
        End Property
        
        Friend ReadOnly Property BalanceAnteriorColumn As DataColumn
            Get
                Return Me.columnBalanceAnterior
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_cont_libro_generalRow
            Get
                Return CType(Me.Rows(index),view_cont_libro_generalRow)
            End Get
        End Property
        
        Public Event view_cont_libro_generalRowChanged As view_cont_libro_generalRowChangeEventHandler
        
        Public Event view_cont_libro_generalRowChanging As view_cont_libro_generalRowChangeEventHandler
        
        Public Event view_cont_libro_generalRowDeleted As view_cont_libro_generalRowChangeEventHandler
        
        Public Event view_cont_libro_generalRowDeleting As view_cont_libro_generalRowChangeEventHandler
        
        Public Overloads Sub Addview_cont_libro_generalRow(ByVal row As view_cont_libro_generalRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addview_cont_libro_generalRow( _
                    ByVal CuentaNo As String,  _
                    ByVal Descripcion As String,  _
                    ByVal Grupo As Integer,  _
                    ByVal Tipo As String,  _
                    ByVal Debito As Double,  _
                    ByVal Credito As Double,  _
                    ByVal Balance As Double,  _
                    ByVal CtaControl As String,  _
                    ByVal NombreMes As String,  _
                    ByVal NumeroMes As Integer,  _
                    ByVal BalanceGeneral As String,  _
                    ByVal EstadoResultado As String,  _
                    ByVal OrdenEstadoResultado As String,  _
                    ByVal AccionEstatoResultado As String,  _
                    ByVal VerEnCero As String,  _
                    ByVal Fecha As Date,  _
                    ByVal Usuario As String,  _
                    ByVal TransFecha As Date,  _
                    ByVal TransFechaMovimiento As Date,  _
                    ByVal TransDescripcion As String,  _
                    ByVal TransIDTipo As Integer,  _
                    ByVal TransUsuario As String,  _
                    ByVal TransEstado As String,  _
                    ByVal TransDIDTrans As Integer,  _
                    ByVal TransDCuentaNo As String,  _
                    ByVal TransDDescripcionCuenta As String,  _
                    ByVal TransDDebito As Double,  _
                    ByVal TransDCredito As Double,  _
                    ByVal TransDBalance As Double,  _
                    ByVal BalanceAnterior As Decimal) As view_cont_libro_generalRow
            Dim rowview_cont_libro_generalRow As view_cont_libro_generalRow = CType(Me.NewRow,view_cont_libro_generalRow)
            rowview_cont_libro_generalRow.ItemArray = New Object() {Nothing, CuentaNo, Descripcion, Grupo, Tipo, Debito, Credito, Balance, CtaControl, NombreMes, NumeroMes, BalanceGeneral, EstadoResultado, OrdenEstadoResultado, AccionEstatoResultado, VerEnCero, Fecha, Usuario, Nothing, TransFecha, TransFechaMovimiento, TransDescripcion, TransIDTipo, TransUsuario, TransEstado, Nothing, TransDIDTrans, TransDCuentaNo, TransDDescripcionCuenta, TransDDebito, TransDCredito, TransDBalance, BalanceAnterior}
            Me.Rows.Add(rowview_cont_libro_generalRow)
            Return rowview_cont_libro_generalRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As view_cont_libro_generalDataTable = CType(MyBase.Clone,view_cont_libro_generalDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New view_cont_libro_generalDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnID = Me.Columns("ID")
            Me.columnCuentaNo = Me.Columns("CuentaNo")
            Me.columnDescripcion = Me.Columns("Descripcion")
            Me.columnGrupo = Me.Columns("Grupo")
            Me.columnTipo = Me.Columns("Tipo")
            Me.columnDebito = Me.Columns("Debito")
            Me.columnCredito = Me.Columns("Credito")
            Me.columnBalance = Me.Columns("Balance")
            Me.columnCtaControl = Me.Columns("CtaControl")
            Me.columnNombreMes = Me.Columns("NombreMes")
            Me.columnNumeroMes = Me.Columns("NumeroMes")
            Me.columnBalanceGeneral = Me.Columns("BalanceGeneral")
            Me.columnEstadoResultado = Me.Columns("EstadoResultado")
            Me.columnOrdenEstadoResultado = Me.Columns("OrdenEstadoResultado")
            Me.columnAccionEstatoResultado = Me.Columns("AccionEstatoResultado")
            Me.columnVerEnCero = Me.Columns("VerEnCero")
            Me.columnFecha = Me.Columns("Fecha")
            Me.columnUsuario = Me.Columns("Usuario")
            Me.columnTransID = Me.Columns("TransID")
            Me.columnTransFecha = Me.Columns("TransFecha")
            Me.columnTransFechaMovimiento = Me.Columns("TransFechaMovimiento")
            Me.columnTransDescripcion = Me.Columns("TransDescripcion")
            Me.columnTransIDTipo = Me.Columns("TransIDTipo")
            Me.columnTransUsuario = Me.Columns("TransUsuario")
            Me.columnTransEstado = Me.Columns("TransEstado")
            Me.columnTransDID = Me.Columns("TransDID")
            Me.columnTransDIDTrans = Me.Columns("TransDIDTrans")
            Me.columnTransDCuentaNo = Me.Columns("TransDCuentaNo")
            Me.columnTransDDescripcionCuenta = Me.Columns("TransDDescripcionCuenta")
            Me.columnTransDDebito = Me.Columns("TransDDebito")
            Me.columnTransDCredito = Me.Columns("TransDCredito")
            Me.columnTransDBalance = Me.Columns("TransDBalance")
            Me.columnBalanceAnterior = Me.Columns("BalanceAnterior")
        End Sub
        
        Private Sub InitClass()
            Me.columnID = New DataColumn("ID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnID)
            Me.columnCuentaNo = New DataColumn("CuentaNo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCuentaNo)
            Me.columnDescripcion = New DataColumn("Descripcion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDescripcion)
            Me.columnGrupo = New DataColumn("Grupo", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnGrupo)
            Me.columnTipo = New DataColumn("Tipo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTipo)
            Me.columnDebito = New DataColumn("Debito", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDebito)
            Me.columnCredito = New DataColumn("Credito", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCredito)
            Me.columnBalance = New DataColumn("Balance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnBalance)
            Me.columnCtaControl = New DataColumn("CtaControl", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCtaControl)
            Me.columnNombreMes = New DataColumn("NombreMes", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNombreMes)
            Me.columnNumeroMes = New DataColumn("NumeroMes", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNumeroMes)
            Me.columnBalanceGeneral = New DataColumn("BalanceGeneral", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnBalanceGeneral)
            Me.columnEstadoResultado = New DataColumn("EstadoResultado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnEstadoResultado)
            Me.columnOrdenEstadoResultado = New DataColumn("OrdenEstadoResultado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnOrdenEstadoResultado)
            Me.columnAccionEstatoResultado = New DataColumn("AccionEstatoResultado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnAccionEstatoResultado)
            Me.columnVerEnCero = New DataColumn("VerEnCero", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnVerEnCero)
            Me.columnFecha = New DataColumn("Fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFecha)
            Me.columnUsuario = New DataColumn("Usuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnUsuario)
            Me.columnTransID = New DataColumn("TransID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransID)
            Me.columnTransFecha = New DataColumn("TransFecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransFecha)
            Me.columnTransFechaMovimiento = New DataColumn("TransFechaMovimiento", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransFechaMovimiento)
            Me.columnTransDescripcion = New DataColumn("TransDescripcion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDescripcion)
            Me.columnTransIDTipo = New DataColumn("TransIDTipo", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransIDTipo)
            Me.columnTransUsuario = New DataColumn("TransUsuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransUsuario)
            Me.columnTransEstado = New DataColumn("TransEstado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransEstado)
            Me.columnTransDID = New DataColumn("TransDID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDID)
            Me.columnTransDIDTrans = New DataColumn("TransDIDTrans", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDIDTrans)
            Me.columnTransDCuentaNo = New DataColumn("TransDCuentaNo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDCuentaNo)
            Me.columnTransDDescripcionCuenta = New DataColumn("TransDDescripcionCuenta", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDDescripcionCuenta)
            Me.columnTransDDebito = New DataColumn("TransDDebito", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDDebito)
            Me.columnTransDCredito = New DataColumn("TransDCredito", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDCredito)
            Me.columnTransDBalance = New DataColumn("TransDBalance", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTransDBalance)
            Me.columnBalanceAnterior = New DataColumn("BalanceAnterior", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnBalanceAnterior)
            Me.columnID.AutoIncrement = true
            Me.columnTransID.AutoIncrement = true
            Me.columnTransDID.AutoIncrement = true
        End Sub
        
        Public Function Newview_cont_libro_generalRow() As view_cont_libro_generalRow
            Return CType(Me.NewRow,view_cont_libro_generalRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New view_cont_libro_generalRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(view_cont_libro_generalRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_cont_libro_generalRowChangedEvent) Is Nothing) Then
                RaiseEvent view_cont_libro_generalRowChanged(Me, New view_cont_libro_generalRowChangeEvent(CType(e.Row,view_cont_libro_generalRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_cont_libro_generalRowChangingEvent) Is Nothing) Then
                RaiseEvent view_cont_libro_generalRowChanging(Me, New view_cont_libro_generalRowChangeEvent(CType(e.Row,view_cont_libro_generalRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_cont_libro_generalRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_cont_libro_generalRowDeleted(Me, New view_cont_libro_generalRowChangeEvent(CType(e.Row,view_cont_libro_generalRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_cont_libro_generalRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_cont_libro_generalRowDeleting(Me, New view_cont_libro_generalRowChangeEvent(CType(e.Row,view_cont_libro_generalRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeview_cont_libro_generalRow(ByVal row As view_cont_libro_generalRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_cont_libro_generalRow
        Inherits DataRow
        
        Private tableview_cont_libro_general As view_cont_libro_generalDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_cont_libro_general = CType(Me.Table,view_cont_libro_generalDataTable)
        End Sub
        
        Public Property ID As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.IDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.IDColumn) = value
            End Set
        End Property
        
        Public Property CuentaNo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.CuentaNoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.CuentaNoColumn) = value
            End Set
        End Property
        
        Public Property Descripcion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.DescripcionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.DescripcionColumn) = value
            End Set
        End Property
        
        Public Property Grupo As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.GrupoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.GrupoColumn) = value
            End Set
        End Property
        
        Public Property Tipo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.TipoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.TipoColumn) = value
            End Set
        End Property
        
        Public Property Debito As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.DebitoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.DebitoColumn) = value
            End Set
        End Property
        
        Public Property Credito As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.CreditoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.CreditoColumn) = value
            End Set
        End Property
        
        Public Property Balance As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.BalanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.BalanceColumn) = value
            End Set
        End Property
        
        Public Property CtaControl As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.CtaControlColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.CtaControlColumn) = value
            End Set
        End Property
        
        Public Property NombreMes As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.NombreMesColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.NombreMesColumn) = value
            End Set
        End Property
        
        Public Property NumeroMes As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.NumeroMesColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.NumeroMesColumn) = value
            End Set
        End Property
        
        Public Property BalanceGeneral As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.BalanceGeneralColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.BalanceGeneralColumn) = value
            End Set
        End Property
        
        Public Property EstadoResultado As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.EstadoResultadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.EstadoResultadoColumn) = value
            End Set
        End Property
        
        Public Property OrdenEstadoResultado As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.OrdenEstadoResultadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.OrdenEstadoResultadoColumn) = value
            End Set
        End Property
        
        Public Property AccionEstatoResultado As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.AccionEstatoResultadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.AccionEstatoResultadoColumn) = value
            End Set
        End Property
        
        Public Property VerEnCero As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.VerEnCeroColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.VerEnCeroColumn) = value
            End Set
        End Property
        
        Public Property Fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.FechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.FechaColumn) = value
            End Set
        End Property
        
        Public Property Usuario As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.UsuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.UsuarioColumn) = value
            End Set
        End Property
        
        Public Property TransID As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.TransIDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.TransIDColumn) = value
            End Set
        End Property
        
        Public Property TransFecha As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.TransFechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.TransFechaColumn) = value
            End Set
        End Property
        
        Public Property TransFechaMovimiento As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.TransFechaMovimientoColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.TransFechaMovimientoColumn) = value
            End Set
        End Property
        
        Public Property TransDescripcion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.TransDescripcionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.TransDescripcionColumn) = value
            End Set
        End Property
        
        Public Property TransIDTipo As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.TransIDTipoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.TransIDTipoColumn) = value
            End Set
        End Property
        
        Public Property TransUsuario As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.TransUsuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.TransUsuarioColumn) = value
            End Set
        End Property
        
        Public Property TransEstado As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.TransEstadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.TransEstadoColumn) = value
            End Set
        End Property
        
        Public Property TransDID As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.TransDIDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.TransDIDColumn) = value
            End Set
        End Property
        
        Public Property TransDIDTrans As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.TransDIDTransColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.TransDIDTransColumn) = value
            End Set
        End Property
        
        Public Property TransDCuentaNo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.TransDCuentaNoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.TransDCuentaNoColumn) = value
            End Set
        End Property
        
        Public Property TransDDescripcionCuenta As String
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.TransDDescripcionCuentaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.TransDDescripcionCuentaColumn) = value
            End Set
        End Property
        
        Public Property TransDDebito As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.TransDDebitoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.TransDDebitoColumn) = value
            End Set
        End Property
        
        Public Property TransDCredito As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.TransDCreditoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.TransDCreditoColumn) = value
            End Set
        End Property
        
        Public Property TransDBalance As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.TransDBalanceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.TransDBalanceColumn) = value
            End Set
        End Property
        
        Public Property BalanceAnterior As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableview_cont_libro_general.BalanceAnteriorColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_cont_libro_general.BalanceAnteriorColumn) = value
            End Set
        End Property
        
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.IDColumn)
        End Function
        
        Public Sub SetIDNull()
            Me(Me.tableview_cont_libro_general.IDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCuentaNoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.CuentaNoColumn)
        End Function
        
        Public Sub SetCuentaNoNull()
            Me(Me.tableview_cont_libro_general.CuentaNoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDescripcionNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.DescripcionColumn)
        End Function
        
        Public Sub SetDescripcionNull()
            Me(Me.tableview_cont_libro_general.DescripcionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsGrupoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.GrupoColumn)
        End Function
        
        Public Sub SetGrupoNull()
            Me(Me.tableview_cont_libro_general.GrupoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTipoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.TipoColumn)
        End Function
        
        Public Sub SetTipoNull()
            Me(Me.tableview_cont_libro_general.TipoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDebitoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.DebitoColumn)
        End Function
        
        Public Sub SetDebitoNull()
            Me(Me.tableview_cont_libro_general.DebitoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCreditoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.CreditoColumn)
        End Function
        
        Public Sub SetCreditoNull()
            Me(Me.tableview_cont_libro_general.CreditoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsBalanceNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.BalanceColumn)
        End Function
        
        Public Sub SetBalanceNull()
            Me(Me.tableview_cont_libro_general.BalanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCtaControlNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.CtaControlColumn)
        End Function
        
        Public Sub SetCtaControlNull()
            Me(Me.tableview_cont_libro_general.CtaControlColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNombreMesNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.NombreMesColumn)
        End Function
        
        Public Sub SetNombreMesNull()
            Me(Me.tableview_cont_libro_general.NombreMesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNumeroMesNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.NumeroMesColumn)
        End Function
        
        Public Sub SetNumeroMesNull()
            Me(Me.tableview_cont_libro_general.NumeroMesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsBalanceGeneralNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.BalanceGeneralColumn)
        End Function
        
        Public Sub SetBalanceGeneralNull()
            Me(Me.tableview_cont_libro_general.BalanceGeneralColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsEstadoResultadoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.EstadoResultadoColumn)
        End Function
        
        Public Sub SetEstadoResultadoNull()
            Me(Me.tableview_cont_libro_general.EstadoResultadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsOrdenEstadoResultadoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.OrdenEstadoResultadoColumn)
        End Function
        
        Public Sub SetOrdenEstadoResultadoNull()
            Me(Me.tableview_cont_libro_general.OrdenEstadoResultadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsAccionEstatoResultadoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.AccionEstatoResultadoColumn)
        End Function
        
        Public Sub SetAccionEstatoResultadoNull()
            Me(Me.tableview_cont_libro_general.AccionEstatoResultadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsVerEnCeroNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.VerEnCeroColumn)
        End Function
        
        Public Sub SetVerEnCeroNull()
            Me(Me.tableview_cont_libro_general.VerEnCeroColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.FechaColumn)
        End Function
        
        Public Sub SetFechaNull()
            Me(Me.tableview_cont_libro_general.FechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsUsuarioNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.UsuarioColumn)
        End Function
        
        Public Sub SetUsuarioNull()
            Me(Me.tableview_cont_libro_general.UsuarioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransIDNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.TransIDColumn)
        End Function
        
        Public Sub SetTransIDNull()
            Me(Me.tableview_cont_libro_general.TransIDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransFechaNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.TransFechaColumn)
        End Function
        
        Public Sub SetTransFechaNull()
            Me(Me.tableview_cont_libro_general.TransFechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransFechaMovimientoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.TransFechaMovimientoColumn)
        End Function
        
        Public Sub SetTransFechaMovimientoNull()
            Me(Me.tableview_cont_libro_general.TransFechaMovimientoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDescripcionNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.TransDescripcionColumn)
        End Function
        
        Public Sub SetTransDescripcionNull()
            Me(Me.tableview_cont_libro_general.TransDescripcionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransIDTipoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.TransIDTipoColumn)
        End Function
        
        Public Sub SetTransIDTipoNull()
            Me(Me.tableview_cont_libro_general.TransIDTipoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransUsuarioNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.TransUsuarioColumn)
        End Function
        
        Public Sub SetTransUsuarioNull()
            Me(Me.tableview_cont_libro_general.TransUsuarioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransEstadoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.TransEstadoColumn)
        End Function
        
        Public Sub SetTransEstadoNull()
            Me(Me.tableview_cont_libro_general.TransEstadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDIDNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.TransDIDColumn)
        End Function
        
        Public Sub SetTransDIDNull()
            Me(Me.tableview_cont_libro_general.TransDIDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDIDTransNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.TransDIDTransColumn)
        End Function
        
        Public Sub SetTransDIDTransNull()
            Me(Me.tableview_cont_libro_general.TransDIDTransColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDCuentaNoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.TransDCuentaNoColumn)
        End Function
        
        Public Sub SetTransDCuentaNoNull()
            Me(Me.tableview_cont_libro_general.TransDCuentaNoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDDescripcionCuentaNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.TransDDescripcionCuentaColumn)
        End Function
        
        Public Sub SetTransDDescripcionCuentaNull()
            Me(Me.tableview_cont_libro_general.TransDDescripcionCuentaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDDebitoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.TransDDebitoColumn)
        End Function
        
        Public Sub SetTransDDebitoNull()
            Me(Me.tableview_cont_libro_general.TransDDebitoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDCreditoNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.TransDCreditoColumn)
        End Function
        
        Public Sub SetTransDCreditoNull()
            Me(Me.tableview_cont_libro_general.TransDCreditoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTransDBalanceNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.TransDBalanceColumn)
        End Function
        
        Public Sub SetTransDBalanceNull()
            Me(Me.tableview_cont_libro_general.TransDBalanceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsBalanceAnteriorNull() As Boolean
            Return Me.IsNull(Me.tableview_cont_libro_general.BalanceAnteriorColumn)
        End Function
        
        Public Sub SetBalanceAnteriorNull()
            Me(Me.tableview_cont_libro_general.BalanceAnteriorColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_cont_libro_generalRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As view_cont_libro_generalRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As view_cont_libro_generalRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As view_cont_libro_generalRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_ahorros_depositosDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnID As DataColumn
        
        Private columnFecha As DataColumn
        
        Private columnCuentaNo As DataColumn
        
        Private columnIDCliente As DataColumn
        
        Private columnMonto As DataColumn
        
        Private columnNotas As DataColumn
        
        Private columnUsuario As DataColumn
        
        Private columnfld_id As DataColumn
        
        Private columnTipoDocumento As DataColumn
        
        Private columnfld_FullName As DataColumn
        
        Private columnfld_apodo As DataColumn
        
        Private columnfld_Identity As DataColumn
        
        Private columnfld_Phone As DataColumn
        
        Private columnfld_Phone2 As DataColumn
        
        Private columnfld_Address As DataColumn
        
        Private columnfld_City_id As DataColumn
        
        Private columnfld_City As DataColumn
        
        Private columnfld_Status As DataColumn
        
        Private columnfld_bce As DataColumn
        
        Private columnfld_cod_zona As DataColumn
        
        Private columnfld_zona As DataColumn
        
        Private columnfld_nombre_con As DataColumn
        
        Private columnfld_apodo_con As DataColumn
        
        Private columnfld_cedula_con As DataColumn
        
        Private columnfld_telefono_con As DataColumn
        
        Private columnfld_celular_con As DataColumn
        
        Private columnfld_ref_personales_cliente As DataColumn
        
        Private columnfld_ref_comerciales_cliente As DataColumn
        
        Private columnfld_nombre_gar As DataColumn
        
        Private columnfld_apodo_gar As DataColumn
        
        Private columnfld_cedula_gar As DataColumn
        
        Private columnfld_telefono_gar As DataColumn
        
        Private columnfld_celular_gar As DataColumn
        
        Private columnfld_direccion_gar As DataColumn
        
        Private columnfld_ciudad_gar As DataColumn
        
        Private columnfld_ref_personales_gar As DataColumn
        
        Private columnfld_ref_comerciales_gar As DataColumn
        
        Private columnfld_ingresos_mesuales As DataColumn
        
        Private columnfld_nombre_banco1 As DataColumn
        
        Private columnfld_cuenta_banco1 As DataColumn
        
        Private columnfld_nombre_banco2 As DataColumn
        
        Private columnfld_cuenta_banco2 As DataColumn
        
        Private columnfld_otra_informacion As DataColumn
        
        Private columnfld_nombre_con_gar As DataColumn
        
        Private columnfld_apodo_con_gar As DataColumn
        
        Private columnfld_cedula_con_gar As DataColumn
        
        Private columnfld_telefono_con_gar As DataColumn
        
        Private columnfld_celular_con_gar As DataColumn
        
        Private columnfld_edad As DataColumn
        
        Private columnfld_estado_civil As DataColumn
        
        Private columnfld_edad_gar As DataColumn
        
        Private columnfld_estado_civil_gar As DataColumn
        
        Private columnfld_ocupacion_cliente As DataColumn
        
        Private columnfld_ocupacion_gar As DataColumn
        
        Private columnfld_sector_id As DataColumn
        
        Private columnfld_sector As DataColumn
        
        Private columnfld_categoria As DataColumn
        
        Private columnfld_limite As DataColumn
        
        Private columnPuesto As DataColumn
        
        Private columnTimpoTrabajo As DataColumn
        
        Private columnReferidoPor As DataColumn
        
        Private columnOriundo As DataColumn
        
        Private columnDataCredito As DataColumn
        
        Friend Sub New()
            MyBase.New("view_ahorros_depositos")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property IDColumn As DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        Friend ReadOnly Property FechaColumn As DataColumn
            Get
                Return Me.columnFecha
            End Get
        End Property
        
        Friend ReadOnly Property CuentaNoColumn As DataColumn
            Get
                Return Me.columnCuentaNo
            End Get
        End Property
        
        Friend ReadOnly Property IDClienteColumn As DataColumn
            Get
                Return Me.columnIDCliente
            End Get
        End Property
        
        Friend ReadOnly Property MontoColumn As DataColumn
            Get
                Return Me.columnMonto
            End Get
        End Property
        
        Friend ReadOnly Property NotasColumn As DataColumn
            Get
                Return Me.columnNotas
            End Get
        End Property
        
        Friend ReadOnly Property UsuarioColumn As DataColumn
            Get
                Return Me.columnUsuario
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property TipoDocumentoColumn As DataColumn
            Get
                Return Me.columnTipoDocumento
            End Get
        End Property
        
        Friend ReadOnly Property fld_FullNameColumn As DataColumn
            Get
                Return Me.columnfld_FullName
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodoColumn As DataColumn
            Get
                Return Me.columnfld_apodo
            End Get
        End Property
        
        Friend ReadOnly Property fld_IdentityColumn As DataColumn
            Get
                Return Me.columnfld_Identity
            End Get
        End Property
        
        Friend ReadOnly Property fld_PhoneColumn As DataColumn
            Get
                Return Me.columnfld_Phone
            End Get
        End Property
        
        Friend ReadOnly Property fld_Phone2Column As DataColumn
            Get
                Return Me.columnfld_Phone2
            End Get
        End Property
        
        Friend ReadOnly Property fld_AddressColumn As DataColumn
            Get
                Return Me.columnfld_Address
            End Get
        End Property
        
        Friend ReadOnly Property fld_City_idColumn As DataColumn
            Get
                Return Me.columnfld_City_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_CityColumn As DataColumn
            Get
                Return Me.columnfld_City
            End Get
        End Property
        
        Friend ReadOnly Property fld_StatusColumn As DataColumn
            Get
                Return Me.columnfld_Status
            End Get
        End Property
        
        Friend ReadOnly Property fld_bceColumn As DataColumn
            Get
                Return Me.columnfld_bce
            End Get
        End Property
        
        Friend ReadOnly Property fld_cod_zonaColumn As DataColumn
            Get
                Return Me.columnfld_cod_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_zonaColumn As DataColumn
            Get
                Return Me.columnfld_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_conColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_conColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_conColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_conColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_conColumn As DataColumn
            Get
                Return Me.columnfld_celular_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_direccion_garColumn As DataColumn
            Get
                Return Me.columnfld_direccion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ciudad_garColumn As DataColumn
            Get
                Return Me.columnfld_ciudad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ingresos_mesualesColumn As DataColumn
            Get
                Return Me.columnfld_ingresos_mesuales
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco1Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco1Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco2Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco2Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_otra_informacionColumn As DataColumn
            Get
                Return Me.columnfld_otra_informacion
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_con_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_con_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_con_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_con_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_con_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_edadColumn As DataColumn
            Get
                Return Me.columnfld_edad
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civilColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil
            End Get
        End Property
        
        Friend ReadOnly Property fld_edad_garColumn As DataColumn
            Get
                Return Me.columnfld_edad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civil_garColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ocupacion_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ocupacion_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ocupacion_garColumn As DataColumn
            Get
                Return Me.columnfld_ocupacion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_sector_idColumn As DataColumn
            Get
                Return Me.columnfld_sector_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_sectorColumn As DataColumn
            Get
                Return Me.columnfld_sector
            End Get
        End Property
        
        Friend ReadOnly Property fld_categoriaColumn As DataColumn
            Get
                Return Me.columnfld_categoria
            End Get
        End Property
        
        Friend ReadOnly Property fld_limiteColumn As DataColumn
            Get
                Return Me.columnfld_limite
            End Get
        End Property
        
        Friend ReadOnly Property PuestoColumn As DataColumn
            Get
                Return Me.columnPuesto
            End Get
        End Property
        
        Friend ReadOnly Property TimpoTrabajoColumn As DataColumn
            Get
                Return Me.columnTimpoTrabajo
            End Get
        End Property
        
        Friend ReadOnly Property ReferidoPorColumn As DataColumn
            Get
                Return Me.columnReferidoPor
            End Get
        End Property
        
        Friend ReadOnly Property OriundoColumn As DataColumn
            Get
                Return Me.columnOriundo
            End Get
        End Property
        
        Friend ReadOnly Property DataCreditoColumn As DataColumn
            Get
                Return Me.columnDataCredito
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_ahorros_depositosRow
            Get
                Return CType(Me.Rows(index),view_ahorros_depositosRow)
            End Get
        End Property
        
        Public Event view_ahorros_depositosRowChanged As view_ahorros_depositosRowChangeEventHandler
        
        Public Event view_ahorros_depositosRowChanging As view_ahorros_depositosRowChangeEventHandler
        
        Public Event view_ahorros_depositosRowDeleted As view_ahorros_depositosRowChangeEventHandler
        
        Public Event view_ahorros_depositosRowDeleting As view_ahorros_depositosRowChangeEventHandler
        
        Public Overloads Sub Addview_ahorros_depositosRow(ByVal row As view_ahorros_depositosRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addview_ahorros_depositosRow( _
                    ByVal Fecha As Date,  _
                    ByVal CuentaNo As String,  _
                    ByVal IDCliente As Integer,  _
                    ByVal Monto As Double,  _
                    ByVal Notas As String,  _
                    ByVal Usuario As String,  _
                    ByVal TipoDocumento As Integer,  _
                    ByVal fld_FullName As String,  _
                    ByVal fld_apodo As String,  _
                    ByVal fld_Identity As String,  _
                    ByVal fld_Phone As String,  _
                    ByVal fld_Phone2 As String,  _
                    ByVal fld_Address As String,  _
                    ByVal fld_City_id As Integer,  _
                    ByVal fld_City As String,  _
                    ByVal fld_Status As String,  _
                    ByVal fld_bce As Double,  _
                    ByVal fld_cod_zona As Integer,  _
                    ByVal fld_zona As String,  _
                    ByVal fld_nombre_con As String,  _
                    ByVal fld_apodo_con As String,  _
                    ByVal fld_cedula_con As String,  _
                    ByVal fld_telefono_con As String,  _
                    ByVal fld_celular_con As String,  _
                    ByVal fld_ref_personales_cliente As String,  _
                    ByVal fld_ref_comerciales_cliente As String,  _
                    ByVal fld_nombre_gar As String,  _
                    ByVal fld_apodo_gar As String,  _
                    ByVal fld_cedula_gar As String,  _
                    ByVal fld_telefono_gar As String,  _
                    ByVal fld_celular_gar As String,  _
                    ByVal fld_direccion_gar As String,  _
                    ByVal fld_ciudad_gar As String,  _
                    ByVal fld_ref_personales_gar As String,  _
                    ByVal fld_ref_comerciales_gar As String,  _
                    ByVal fld_ingresos_mesuales As Double,  _
                    ByVal fld_nombre_banco1 As String,  _
                    ByVal fld_cuenta_banco1 As String,  _
                    ByVal fld_nombre_banco2 As String,  _
                    ByVal fld_cuenta_banco2 As String,  _
                    ByVal fld_otra_informacion As String,  _
                    ByVal fld_nombre_con_gar As String,  _
                    ByVal fld_apodo_con_gar As String,  _
                    ByVal fld_cedula_con_gar As String,  _
                    ByVal fld_telefono_con_gar As String,  _
                    ByVal fld_celular_con_gar As String,  _
                    ByVal fld_edad As Integer,  _
                    ByVal fld_estado_civil As String,  _
                    ByVal fld_edad_gar As Integer,  _
                    ByVal fld_estado_civil_gar As String,  _
                    ByVal fld_ocupacion_cliente As String,  _
                    ByVal fld_ocupacion_gar As String,  _
                    ByVal fld_sector_id As Integer,  _
                    ByVal fld_sector As String,  _
                    ByVal fld_categoria As String,  _
                    ByVal fld_limite As Double,  _
                    ByVal Puesto As String,  _
                    ByVal TimpoTrabajo As String,  _
                    ByVal ReferidoPor As String,  _
                    ByVal Oriundo As String,  _
                    ByVal DataCredito As Integer) As view_ahorros_depositosRow
            Dim rowview_ahorros_depositosRow As view_ahorros_depositosRow = CType(Me.NewRow,view_ahorros_depositosRow)
            rowview_ahorros_depositosRow.ItemArray = New Object() {Nothing, Fecha, CuentaNo, IDCliente, Monto, Notas, Usuario, Nothing, TipoDocumento, fld_FullName, fld_apodo, fld_Identity, fld_Phone, fld_Phone2, fld_Address, fld_City_id, fld_City, fld_Status, fld_bce, fld_cod_zona, fld_zona, fld_nombre_con, fld_apodo_con, fld_cedula_con, fld_telefono_con, fld_celular_con, fld_ref_personales_cliente, fld_ref_comerciales_cliente, fld_nombre_gar, fld_apodo_gar, fld_cedula_gar, fld_telefono_gar, fld_celular_gar, fld_direccion_gar, fld_ciudad_gar, fld_ref_personales_gar, fld_ref_comerciales_gar, fld_ingresos_mesuales, fld_nombre_banco1, fld_cuenta_banco1, fld_nombre_banco2, fld_cuenta_banco2, fld_otra_informacion, fld_nombre_con_gar, fld_apodo_con_gar, fld_cedula_con_gar, fld_telefono_con_gar, fld_celular_con_gar, fld_edad, fld_estado_civil, fld_edad_gar, fld_estado_civil_gar, fld_ocupacion_cliente, fld_ocupacion_gar, fld_sector_id, fld_sector, fld_categoria, fld_limite, Puesto, TimpoTrabajo, ReferidoPor, Oriundo, DataCredito}
            Me.Rows.Add(rowview_ahorros_depositosRow)
            Return rowview_ahorros_depositosRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As view_ahorros_depositosDataTable = CType(MyBase.Clone,view_ahorros_depositosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New view_ahorros_depositosDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnID = Me.Columns("ID")
            Me.columnFecha = Me.Columns("Fecha")
            Me.columnCuentaNo = Me.Columns("CuentaNo")
            Me.columnIDCliente = Me.Columns("IDCliente")
            Me.columnMonto = Me.Columns("Monto")
            Me.columnNotas = Me.Columns("Notas")
            Me.columnUsuario = Me.Columns("Usuario")
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnTipoDocumento = Me.Columns("TipoDocumento")
            Me.columnfld_FullName = Me.Columns("fld_FullName")
            Me.columnfld_apodo = Me.Columns("fld_apodo")
            Me.columnfld_Identity = Me.Columns("fld_Identity")
            Me.columnfld_Phone = Me.Columns("fld_Phone")
            Me.columnfld_Phone2 = Me.Columns("fld_Phone2")
            Me.columnfld_Address = Me.Columns("fld_Address")
            Me.columnfld_City_id = Me.Columns("fld_City_id")
            Me.columnfld_City = Me.Columns("fld_City")
            Me.columnfld_Status = Me.Columns("fld_Status")
            Me.columnfld_bce = Me.Columns("fld_bce")
            Me.columnfld_cod_zona = Me.Columns("fld_cod_zona")
            Me.columnfld_zona = Me.Columns("fld_zona")
            Me.columnfld_nombre_con = Me.Columns("fld_nombre_con")
            Me.columnfld_apodo_con = Me.Columns("fld_apodo_con")
            Me.columnfld_cedula_con = Me.Columns("fld_cedula_con")
            Me.columnfld_telefono_con = Me.Columns("fld_telefono_con")
            Me.columnfld_celular_con = Me.Columns("fld_celular_con")
            Me.columnfld_ref_personales_cliente = Me.Columns("fld_ref_personales_cliente")
            Me.columnfld_ref_comerciales_cliente = Me.Columns("fld_ref_comerciales_cliente")
            Me.columnfld_nombre_gar = Me.Columns("fld_nombre_gar")
            Me.columnfld_apodo_gar = Me.Columns("fld_apodo_gar")
            Me.columnfld_cedula_gar = Me.Columns("fld_cedula_gar")
            Me.columnfld_telefono_gar = Me.Columns("fld_telefono_gar")
            Me.columnfld_celular_gar = Me.Columns("fld_celular_gar")
            Me.columnfld_direccion_gar = Me.Columns("fld_direccion_gar")
            Me.columnfld_ciudad_gar = Me.Columns("fld_ciudad_gar")
            Me.columnfld_ref_personales_gar = Me.Columns("fld_ref_personales_gar")
            Me.columnfld_ref_comerciales_gar = Me.Columns("fld_ref_comerciales_gar")
            Me.columnfld_ingresos_mesuales = Me.Columns("fld_ingresos_mesuales")
            Me.columnfld_nombre_banco1 = Me.Columns("fld_nombre_banco1")
            Me.columnfld_cuenta_banco1 = Me.Columns("fld_cuenta_banco1")
            Me.columnfld_nombre_banco2 = Me.Columns("fld_nombre_banco2")
            Me.columnfld_cuenta_banco2 = Me.Columns("fld_cuenta_banco2")
            Me.columnfld_otra_informacion = Me.Columns("fld_otra_informacion")
            Me.columnfld_nombre_con_gar = Me.Columns("fld_nombre_con_gar")
            Me.columnfld_apodo_con_gar = Me.Columns("fld_apodo_con_gar")
            Me.columnfld_cedula_con_gar = Me.Columns("fld_cedula_con_gar")
            Me.columnfld_telefono_con_gar = Me.Columns("fld_telefono_con_gar")
            Me.columnfld_celular_con_gar = Me.Columns("fld_celular_con_gar")
            Me.columnfld_edad = Me.Columns("fld_edad")
            Me.columnfld_estado_civil = Me.Columns("fld_estado_civil")
            Me.columnfld_edad_gar = Me.Columns("fld_edad_gar")
            Me.columnfld_estado_civil_gar = Me.Columns("fld_estado_civil_gar")
            Me.columnfld_ocupacion_cliente = Me.Columns("fld_ocupacion_cliente")
            Me.columnfld_ocupacion_gar = Me.Columns("fld_ocupacion_gar")
            Me.columnfld_sector_id = Me.Columns("fld_sector_id")
            Me.columnfld_sector = Me.Columns("fld_sector")
            Me.columnfld_categoria = Me.Columns("fld_categoria")
            Me.columnfld_limite = Me.Columns("fld_limite")
            Me.columnPuesto = Me.Columns("Puesto")
            Me.columnTimpoTrabajo = Me.Columns("TimpoTrabajo")
            Me.columnReferidoPor = Me.Columns("ReferidoPor")
            Me.columnOriundo = Me.Columns("Oriundo")
            Me.columnDataCredito = Me.Columns("DataCredito")
        End Sub
        
        Private Sub InitClass()
            Me.columnID = New DataColumn("ID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnID)
            Me.columnFecha = New DataColumn("Fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFecha)
            Me.columnCuentaNo = New DataColumn("CuentaNo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCuentaNo)
            Me.columnIDCliente = New DataColumn("IDCliente", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnIDCliente)
            Me.columnMonto = New DataColumn("Monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMonto)
            Me.columnNotas = New DataColumn("Notas", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNotas)
            Me.columnUsuario = New DataColumn("Usuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnUsuario)
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnTipoDocumento = New DataColumn("TipoDocumento", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTipoDocumento)
            Me.columnfld_FullName = New DataColumn("fld_FullName", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_FullName)
            Me.columnfld_apodo = New DataColumn("fld_apodo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo)
            Me.columnfld_Identity = New DataColumn("fld_Identity", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Identity)
            Me.columnfld_Phone = New DataColumn("fld_Phone", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone)
            Me.columnfld_Phone2 = New DataColumn("fld_Phone2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone2)
            Me.columnfld_Address = New DataColumn("fld_Address", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Address)
            Me.columnfld_City_id = New DataColumn("fld_City_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_City_id)
            Me.columnfld_City = New DataColumn("fld_City", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_City)
            Me.columnfld_Status = New DataColumn("fld_Status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Status)
            Me.columnfld_bce = New DataColumn("fld_bce", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce)
            Me.columnfld_cod_zona = New DataColumn("fld_cod_zona", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cod_zona)
            Me.columnfld_zona = New DataColumn("fld_zona", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_zona)
            Me.columnfld_nombre_con = New DataColumn("fld_nombre_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con)
            Me.columnfld_apodo_con = New DataColumn("fld_apodo_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con)
            Me.columnfld_cedula_con = New DataColumn("fld_cedula_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con)
            Me.columnfld_telefono_con = New DataColumn("fld_telefono_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con)
            Me.columnfld_celular_con = New DataColumn("fld_celular_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con)
            Me.columnfld_ref_personales_cliente = New DataColumn("fld_ref_personales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_cliente)
            Me.columnfld_ref_comerciales_cliente = New DataColumn("fld_ref_comerciales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_cliente)
            Me.columnfld_nombre_gar = New DataColumn("fld_nombre_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_gar)
            Me.columnfld_apodo_gar = New DataColumn("fld_apodo_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_gar)
            Me.columnfld_cedula_gar = New DataColumn("fld_cedula_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_gar)
            Me.columnfld_telefono_gar = New DataColumn("fld_telefono_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_gar)
            Me.columnfld_celular_gar = New DataColumn("fld_celular_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_gar)
            Me.columnfld_direccion_gar = New DataColumn("fld_direccion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_direccion_gar)
            Me.columnfld_ciudad_gar = New DataColumn("fld_ciudad_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ciudad_gar)
            Me.columnfld_ref_personales_gar = New DataColumn("fld_ref_personales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_gar)
            Me.columnfld_ref_comerciales_gar = New DataColumn("fld_ref_comerciales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_gar)
            Me.columnfld_ingresos_mesuales = New DataColumn("fld_ingresos_mesuales", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ingresos_mesuales)
            Me.columnfld_nombre_banco1 = New DataColumn("fld_nombre_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco1)
            Me.columnfld_cuenta_banco1 = New DataColumn("fld_cuenta_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco1)
            Me.columnfld_nombre_banco2 = New DataColumn("fld_nombre_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco2)
            Me.columnfld_cuenta_banco2 = New DataColumn("fld_cuenta_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco2)
            Me.columnfld_otra_informacion = New DataColumn("fld_otra_informacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_otra_informacion)
            Me.columnfld_nombre_con_gar = New DataColumn("fld_nombre_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con_gar)
            Me.columnfld_apodo_con_gar = New DataColumn("fld_apodo_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con_gar)
            Me.columnfld_cedula_con_gar = New DataColumn("fld_cedula_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con_gar)
            Me.columnfld_telefono_con_gar = New DataColumn("fld_telefono_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con_gar)
            Me.columnfld_celular_con_gar = New DataColumn("fld_celular_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con_gar)
            Me.columnfld_edad = New DataColumn("fld_edad", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad)
            Me.columnfld_estado_civil = New DataColumn("fld_estado_civil", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil)
            Me.columnfld_edad_gar = New DataColumn("fld_edad_gar", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad_gar)
            Me.columnfld_estado_civil_gar = New DataColumn("fld_estado_civil_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil_gar)
            Me.columnfld_ocupacion_cliente = New DataColumn("fld_ocupacion_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ocupacion_cliente)
            Me.columnfld_ocupacion_gar = New DataColumn("fld_ocupacion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ocupacion_gar)
            Me.columnfld_sector_id = New DataColumn("fld_sector_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_sector_id)
            Me.columnfld_sector = New DataColumn("fld_sector", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_sector)
            Me.columnfld_categoria = New DataColumn("fld_categoria", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_categoria)
            Me.columnfld_limite = New DataColumn("fld_limite", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_limite)
            Me.columnPuesto = New DataColumn("Puesto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPuesto)
            Me.columnTimpoTrabajo = New DataColumn("TimpoTrabajo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTimpoTrabajo)
            Me.columnReferidoPor = New DataColumn("ReferidoPor", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnReferidoPor)
            Me.columnOriundo = New DataColumn("Oriundo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnOriundo)
            Me.columnDataCredito = New DataColumn("DataCredito", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDataCredito)
            Me.columnID.AutoIncrement = true
            Me.columnfld_id.AutoIncrement = true
        End Sub
        
        Public Function Newview_ahorros_depositosRow() As view_ahorros_depositosRow
            Return CType(Me.NewRow,view_ahorros_depositosRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New view_ahorros_depositosRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(view_ahorros_depositosRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_ahorros_depositosRowChangedEvent) Is Nothing) Then
                RaiseEvent view_ahorros_depositosRowChanged(Me, New view_ahorros_depositosRowChangeEvent(CType(e.Row,view_ahorros_depositosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_ahorros_depositosRowChangingEvent) Is Nothing) Then
                RaiseEvent view_ahorros_depositosRowChanging(Me, New view_ahorros_depositosRowChangeEvent(CType(e.Row,view_ahorros_depositosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_ahorros_depositosRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_ahorros_depositosRowDeleted(Me, New view_ahorros_depositosRowChangeEvent(CType(e.Row,view_ahorros_depositosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_ahorros_depositosRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_ahorros_depositosRowDeleting(Me, New view_ahorros_depositosRowChangeEvent(CType(e.Row,view_ahorros_depositosRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeview_ahorros_depositosRow(ByVal row As view_ahorros_depositosRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_ahorros_depositosRow
        Inherits DataRow
        
        Private tableview_ahorros_depositos As view_ahorros_depositosDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_ahorros_depositos = CType(Me.Table,view_ahorros_depositosDataTable)
        End Sub
        
        Public Property ID As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.IDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.IDColumn) = value
            End Set
        End Property
        
        Public Property Fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.FechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.FechaColumn) = value
            End Set
        End Property
        
        Public Property CuentaNo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.CuentaNoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.CuentaNoColumn) = value
            End Set
        End Property
        
        Public Property IDCliente As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.IDClienteColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.IDClienteColumn) = value
            End Set
        End Property
        
        Public Property Monto As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.MontoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.MontoColumn) = value
            End Set
        End Property
        
        Public Property Notas As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.NotasColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.NotasColumn) = value
            End Set
        End Property
        
        Public Property Usuario As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.UsuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.UsuarioColumn) = value
            End Set
        End Property
        
        Public Property fld_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_idColumn) = value
            End Set
        End Property
        
        Public Property TipoDocumento As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.TipoDocumentoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.TipoDocumentoColumn) = value
            End Set
        End Property
        
        Public Property fld_FullName As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_FullNameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_FullNameColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_apodoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_apodoColumn) = value
            End Set
        End Property
        
        Public Property fld_Identity As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_IdentityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_IdentityColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_PhoneColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_PhoneColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_Phone2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_Phone2Column) = value
            End Set
        End Property
        
        Public Property fld_Address As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_AddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_AddressColumn) = value
            End Set
        End Property
        
        Public Property fld_City_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_City_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_City_idColumn) = value
            End Set
        End Property
        
        Public Property fld_City As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_CityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_CityColumn) = value
            End Set
        End Property
        
        Public Property fld_Status As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_StatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_StatusColumn) = value
            End Set
        End Property
        
        Public Property fld_bce As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_bceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_bceColumn) = value
            End Set
        End Property
        
        Public Property fld_cod_zona As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_cod_zonaColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_cod_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_zona As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_zonaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_nombre_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_nombre_conColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_apodo_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_apodo_conColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_cedula_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_cedula_conColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_telefono_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_telefono_conColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_celular_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_celular_conColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_ref_personales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_ref_personales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_ref_comerciales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_ref_comerciales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_nombre_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_nombre_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_apodo_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_apodo_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_cedula_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_cedula_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_telefono_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_telefono_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_celular_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_celular_garColumn) = value
            End Set
        End Property
        
        Public Property fld_direccion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_direccion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_direccion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ciudad_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_ciudad_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_ciudad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_ref_personales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_ref_personales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_ref_comerciales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_ref_comerciales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ingresos_mesuales As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_ingresos_mesualesColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_ingresos_mesualesColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_nombre_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_nombre_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_cuenta_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_cuenta_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_nombre_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_nombre_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_cuenta_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_cuenta_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_otra_informacion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_otra_informacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_otra_informacionColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_nombre_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_nombre_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_apodo_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_apodo_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_cedula_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_cedula_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_telefono_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_telefono_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_celular_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_celular_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_edad As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_edadColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_edadColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_estado_civilColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_estado_civilColumn) = value
            End Set
        End Property
        
        Public Property fld_edad_gar As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_edad_garColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_edad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_estado_civil_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_estado_civil_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ocupacion_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_ocupacion_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_ocupacion_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ocupacion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_ocupacion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_ocupacion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_sector_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_sector_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_sector_idColumn) = value
            End Set
        End Property
        
        Public Property fld_sector As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_sectorColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_sectorColumn) = value
            End Set
        End Property
        
        Public Property fld_categoria As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_categoriaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_categoriaColumn) = value
            End Set
        End Property
        
        Public Property fld_limite As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.fld_limiteColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.fld_limiteColumn) = value
            End Set
        End Property
        
        Public Property Puesto As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.PuestoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.PuestoColumn) = value
            End Set
        End Property
        
        Public Property TimpoTrabajo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.TimpoTrabajoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.TimpoTrabajoColumn) = value
            End Set
        End Property
        
        Public Property ReferidoPor As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.ReferidoPorColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.ReferidoPorColumn) = value
            End Set
        End Property
        
        Public Property Oriundo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.OriundoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.OriundoColumn) = value
            End Set
        End Property
        
        Public Property DataCredito As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_depositos.DataCreditoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_depositos.DataCreditoColumn) = value
            End Set
        End Property
        
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.IDColumn)
        End Function
        
        Public Sub SetIDNull()
            Me(Me.tableview_ahorros_depositos.IDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.FechaColumn)
        End Function
        
        Public Sub SetFechaNull()
            Me(Me.tableview_ahorros_depositos.FechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCuentaNoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.CuentaNoColumn)
        End Function
        
        Public Sub SetCuentaNoNull()
            Me(Me.tableview_ahorros_depositos.CuentaNoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsIDClienteNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.IDClienteColumn)
        End Function
        
        Public Sub SetIDClienteNull()
            Me(Me.tableview_ahorros_depositos.IDClienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMontoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.MontoColumn)
        End Function
        
        Public Sub SetMontoNull()
            Me(Me.tableview_ahorros_depositos.MontoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNotasNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.NotasColumn)
        End Function
        
        Public Sub SetNotasNull()
            Me(Me.tableview_ahorros_depositos.NotasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsUsuarioNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.UsuarioColumn)
        End Function
        
        Public Sub SetUsuarioNull()
            Me(Me.tableview_ahorros_depositos.UsuarioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_idNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_idColumn)
        End Function
        
        Public Sub Setfld_idNull()
            Me(Me.tableview_ahorros_depositos.fld_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTipoDocumentoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.TipoDocumentoColumn)
        End Function
        
        Public Sub SetTipoDocumentoNull()
            Me(Me.tableview_ahorros_depositos.TipoDocumentoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_FullNameNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_FullNameColumn)
        End Function
        
        Public Sub Setfld_FullNameNull()
            Me(Me.tableview_ahorros_depositos.fld_FullNameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_apodoColumn)
        End Function
        
        Public Sub Setfld_apodoNull()
            Me(Me.tableview_ahorros_depositos.fld_apodoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_IdentityNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_IdentityColumn)
        End Function
        
        Public Sub Setfld_IdentityNull()
            Me(Me.tableview_ahorros_depositos.fld_IdentityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_PhoneNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_PhoneColumn)
        End Function
        
        Public Sub Setfld_PhoneNull()
            Me(Me.tableview_ahorros_depositos.fld_PhoneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_Phone2Null() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_Phone2Column)
        End Function
        
        Public Sub Setfld_Phone2Null()
            Me(Me.tableview_ahorros_depositos.fld_Phone2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_AddressNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_AddressColumn)
        End Function
        
        Public Sub Setfld_AddressNull()
            Me(Me.tableview_ahorros_depositos.fld_AddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_City_idNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_City_idColumn)
        End Function
        
        Public Sub Setfld_City_idNull()
            Me(Me.tableview_ahorros_depositos.fld_City_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_CityNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_CityColumn)
        End Function
        
        Public Sub Setfld_CityNull()
            Me(Me.tableview_ahorros_depositos.fld_CityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_StatusNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_StatusColumn)
        End Function
        
        Public Sub Setfld_StatusNull()
            Me(Me.tableview_ahorros_depositos.fld_StatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bceNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_bceColumn)
        End Function
        
        Public Sub Setfld_bceNull()
            Me(Me.tableview_ahorros_depositos.fld_bceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cod_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_cod_zonaColumn)
        End Function
        
        Public Sub Setfld_cod_zonaNull()
            Me(Me.tableview_ahorros_depositos.fld_cod_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_zonaColumn)
        End Function
        
        Public Sub Setfld_zonaNull()
            Me(Me.tableview_ahorros_depositos.fld_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_nombre_conColumn)
        End Function
        
        Public Sub Setfld_nombre_conNull()
            Me(Me.tableview_ahorros_depositos.fld_nombre_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_apodo_conColumn)
        End Function
        
        Public Sub Setfld_apodo_conNull()
            Me(Me.tableview_ahorros_depositos.fld_apodo_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_cedula_conColumn)
        End Function
        
        Public Sub Setfld_cedula_conNull()
            Me(Me.tableview_ahorros_depositos.fld_cedula_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_telefono_conColumn)
        End Function
        
        Public Sub Setfld_telefono_conNull()
            Me(Me.tableview_ahorros_depositos.fld_telefono_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_celular_conColumn)
        End Function
        
        Public Sub Setfld_celular_conNull()
            Me(Me.tableview_ahorros_depositos.fld_celular_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_ref_personales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_personales_clienteNull()
            Me(Me.tableview_ahorros_depositos.fld_ref_personales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_ref_comerciales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_clienteNull()
            Me(Me.tableview_ahorros_depositos.fld_ref_comerciales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_nombre_garColumn)
        End Function
        
        Public Sub Setfld_nombre_garNull()
            Me(Me.tableview_ahorros_depositos.fld_nombre_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_apodo_garColumn)
        End Function
        
        Public Sub Setfld_apodo_garNull()
            Me(Me.tableview_ahorros_depositos.fld_apodo_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_cedula_garColumn)
        End Function
        
        Public Sub Setfld_cedula_garNull()
            Me(Me.tableview_ahorros_depositos.fld_cedula_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_telefono_garColumn)
        End Function
        
        Public Sub Setfld_telefono_garNull()
            Me(Me.tableview_ahorros_depositos.fld_telefono_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_celular_garColumn)
        End Function
        
        Public Sub Setfld_celular_garNull()
            Me(Me.tableview_ahorros_depositos.fld_celular_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_direccion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_direccion_garColumn)
        End Function
        
        Public Sub Setfld_direccion_garNull()
            Me(Me.tableview_ahorros_depositos.fld_direccion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ciudad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_ciudad_garColumn)
        End Function
        
        Public Sub Setfld_ciudad_garNull()
            Me(Me.tableview_ahorros_depositos.fld_ciudad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_ref_personales_garColumn)
        End Function
        
        Public Sub Setfld_ref_personales_garNull()
            Me(Me.tableview_ahorros_depositos.fld_ref_personales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_ref_comerciales_garColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_garNull()
            Me(Me.tableview_ahorros_depositos.fld_ref_comerciales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ingresos_mesualesNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_ingresos_mesualesColumn)
        End Function
        
        Public Sub Setfld_ingresos_mesualesNull()
            Me(Me.tableview_ahorros_depositos.fld_ingresos_mesualesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_nombre_banco1Column)
        End Function
        
        Public Sub Setfld_nombre_banco1Null()
            Me(Me.tableview_ahorros_depositos.fld_nombre_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_cuenta_banco1Column)
        End Function
        
        Public Sub Setfld_cuenta_banco1Null()
            Me(Me.tableview_ahorros_depositos.fld_cuenta_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_nombre_banco2Column)
        End Function
        
        Public Sub Setfld_nombre_banco2Null()
            Me(Me.tableview_ahorros_depositos.fld_nombre_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_cuenta_banco2Column)
        End Function
        
        Public Sub Setfld_cuenta_banco2Null()
            Me(Me.tableview_ahorros_depositos.fld_cuenta_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_otra_informacionNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_otra_informacionColumn)
        End Function
        
        Public Sub Setfld_otra_informacionNull()
            Me(Me.tableview_ahorros_depositos.fld_otra_informacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_nombre_con_garColumn)
        End Function
        
        Public Sub Setfld_nombre_con_garNull()
            Me(Me.tableview_ahorros_depositos.fld_nombre_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_apodo_con_garColumn)
        End Function
        
        Public Sub Setfld_apodo_con_garNull()
            Me(Me.tableview_ahorros_depositos.fld_apodo_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_cedula_con_garColumn)
        End Function
        
        Public Sub Setfld_cedula_con_garNull()
            Me(Me.tableview_ahorros_depositos.fld_cedula_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_telefono_con_garColumn)
        End Function
        
        Public Sub Setfld_telefono_con_garNull()
            Me(Me.tableview_ahorros_depositos.fld_telefono_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_celular_con_garColumn)
        End Function
        
        Public Sub Setfld_celular_con_garNull()
            Me(Me.tableview_ahorros_depositos.fld_celular_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edadNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_edadColumn)
        End Function
        
        Public Sub Setfld_edadNull()
            Me(Me.tableview_ahorros_depositos.fld_edadColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civilNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_estado_civilColumn)
        End Function
        
        Public Sub Setfld_estado_civilNull()
            Me(Me.tableview_ahorros_depositos.fld_estado_civilColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_edad_garColumn)
        End Function
        
        Public Sub Setfld_edad_garNull()
            Me(Me.tableview_ahorros_depositos.fld_edad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civil_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_estado_civil_garColumn)
        End Function
        
        Public Sub Setfld_estado_civil_garNull()
            Me(Me.tableview_ahorros_depositos.fld_estado_civil_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ocupacion_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_ocupacion_clienteColumn)
        End Function
        
        Public Sub Setfld_ocupacion_clienteNull()
            Me(Me.tableview_ahorros_depositos.fld_ocupacion_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ocupacion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_ocupacion_garColumn)
        End Function
        
        Public Sub Setfld_ocupacion_garNull()
            Me(Me.tableview_ahorros_depositos.fld_ocupacion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_sector_idNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_sector_idColumn)
        End Function
        
        Public Sub Setfld_sector_idNull()
            Me(Me.tableview_ahorros_depositos.fld_sector_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_sectorNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_sectorColumn)
        End Function
        
        Public Sub Setfld_sectorNull()
            Me(Me.tableview_ahorros_depositos.fld_sectorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_categoriaNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_categoriaColumn)
        End Function
        
        Public Sub Setfld_categoriaNull()
            Me(Me.tableview_ahorros_depositos.fld_categoriaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_limiteNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.fld_limiteColumn)
        End Function
        
        Public Sub Setfld_limiteNull()
            Me(Me.tableview_ahorros_depositos.fld_limiteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsPuestoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.PuestoColumn)
        End Function
        
        Public Sub SetPuestoNull()
            Me(Me.tableview_ahorros_depositos.PuestoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTimpoTrabajoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.TimpoTrabajoColumn)
        End Function
        
        Public Sub SetTimpoTrabajoNull()
            Me(Me.tableview_ahorros_depositos.TimpoTrabajoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsReferidoPorNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.ReferidoPorColumn)
        End Function
        
        Public Sub SetReferidoPorNull()
            Me(Me.tableview_ahorros_depositos.ReferidoPorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsOriundoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.OriundoColumn)
        End Function
        
        Public Sub SetOriundoNull()
            Me(Me.tableview_ahorros_depositos.OriundoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDataCreditoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_depositos.DataCreditoColumn)
        End Function
        
        Public Sub SetDataCreditoNull()
            Me(Me.tableview_ahorros_depositos.DataCreditoColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_ahorros_depositosRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As view_ahorros_depositosRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As view_ahorros_depositosRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As view_ahorros_depositosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_ahorros_retirosDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id As DataColumn
        
        Private columnTipoDocumento As DataColumn
        
        Private columnfld_FullName As DataColumn
        
        Private columnfld_apodo As DataColumn
        
        Private columnfld_Identity As DataColumn
        
        Private columnfld_Phone As DataColumn
        
        Private columnfld_Phone2 As DataColumn
        
        Private columnfld_Address As DataColumn
        
        Private columnfld_City_id As DataColumn
        
        Private columnfld_City As DataColumn
        
        Private columnfld_Status As DataColumn
        
        Private columnfld_bce As DataColumn
        
        Private columnfld_cod_zona As DataColumn
        
        Private columnfld_zona As DataColumn
        
        Private columnfld_nombre_con As DataColumn
        
        Private columnfld_apodo_con As DataColumn
        
        Private columnfld_cedula_con As DataColumn
        
        Private columnfld_telefono_con As DataColumn
        
        Private columnfld_celular_con As DataColumn
        
        Private columnfld_ref_personales_cliente As DataColumn
        
        Private columnfld_ref_comerciales_cliente As DataColumn
        
        Private columnfld_nombre_gar As DataColumn
        
        Private columnfld_apodo_gar As DataColumn
        
        Private columnfld_cedula_gar As DataColumn
        
        Private columnfld_telefono_gar As DataColumn
        
        Private columnfld_celular_gar As DataColumn
        
        Private columnfld_direccion_gar As DataColumn
        
        Private columnfld_ciudad_gar As DataColumn
        
        Private columnfld_ref_personales_gar As DataColumn
        
        Private columnfld_ref_comerciales_gar As DataColumn
        
        Private columnfld_ingresos_mesuales As DataColumn
        
        Private columnfld_nombre_banco1 As DataColumn
        
        Private columnfld_cuenta_banco1 As DataColumn
        
        Private columnfld_nombre_banco2 As DataColumn
        
        Private columnfld_cuenta_banco2 As DataColumn
        
        Private columnfld_otra_informacion As DataColumn
        
        Private columnfld_nombre_con_gar As DataColumn
        
        Private columnfld_apodo_con_gar As DataColumn
        
        Private columnfld_cedula_con_gar As DataColumn
        
        Private columnfld_telefono_con_gar As DataColumn
        
        Private columnfld_celular_con_gar As DataColumn
        
        Private columnfld_edad As DataColumn
        
        Private columnfld_estado_civil As DataColumn
        
        Private columnfld_edad_gar As DataColumn
        
        Private columnfld_estado_civil_gar As DataColumn
        
        Private columnfld_ocupacion_cliente As DataColumn
        
        Private columnfld_ocupacion_gar As DataColumn
        
        Private columnfld_sector_id As DataColumn
        
        Private columnfld_sector As DataColumn
        
        Private columnfld_categoria As DataColumn
        
        Private columnfld_limite As DataColumn
        
        Private columnPuesto As DataColumn
        
        Private columnTimpoTrabajo As DataColumn
        
        Private columnReferidoPor As DataColumn
        
        Private columnOriundo As DataColumn
        
        Private columnDataCredito As DataColumn
        
        Private columnID As DataColumn
        
        Private columnIDAhorro As DataColumn
        
        Private columnIDCliente As DataColumn
        
        Private columnFecha As DataColumn
        
        Private columnTipo As DataColumn
        
        Private columnConcepto As DataColumn
        
        Private columnMonto As DataColumn
        
        Private columnUsuario As DataColumn
        
        Friend Sub New()
            MyBase.New("view_ahorros_retiros")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property TipoDocumentoColumn As DataColumn
            Get
                Return Me.columnTipoDocumento
            End Get
        End Property
        
        Friend ReadOnly Property fld_FullNameColumn As DataColumn
            Get
                Return Me.columnfld_FullName
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodoColumn As DataColumn
            Get
                Return Me.columnfld_apodo
            End Get
        End Property
        
        Friend ReadOnly Property fld_IdentityColumn As DataColumn
            Get
                Return Me.columnfld_Identity
            End Get
        End Property
        
        Friend ReadOnly Property fld_PhoneColumn As DataColumn
            Get
                Return Me.columnfld_Phone
            End Get
        End Property
        
        Friend ReadOnly Property fld_Phone2Column As DataColumn
            Get
                Return Me.columnfld_Phone2
            End Get
        End Property
        
        Friend ReadOnly Property fld_AddressColumn As DataColumn
            Get
                Return Me.columnfld_Address
            End Get
        End Property
        
        Friend ReadOnly Property fld_City_idColumn As DataColumn
            Get
                Return Me.columnfld_City_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_CityColumn As DataColumn
            Get
                Return Me.columnfld_City
            End Get
        End Property
        
        Friend ReadOnly Property fld_StatusColumn As DataColumn
            Get
                Return Me.columnfld_Status
            End Get
        End Property
        
        Friend ReadOnly Property fld_bceColumn As DataColumn
            Get
                Return Me.columnfld_bce
            End Get
        End Property
        
        Friend ReadOnly Property fld_cod_zonaColumn As DataColumn
            Get
                Return Me.columnfld_cod_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_zonaColumn As DataColumn
            Get
                Return Me.columnfld_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_conColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_conColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_conColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_conColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_conColumn As DataColumn
            Get
                Return Me.columnfld_celular_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_direccion_garColumn As DataColumn
            Get
                Return Me.columnfld_direccion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ciudad_garColumn As DataColumn
            Get
                Return Me.columnfld_ciudad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ingresos_mesualesColumn As DataColumn
            Get
                Return Me.columnfld_ingresos_mesuales
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco1Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco1Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco2Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco2Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_otra_informacionColumn As DataColumn
            Get
                Return Me.columnfld_otra_informacion
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_con_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_con_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_con_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_con_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_con_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_edadColumn As DataColumn
            Get
                Return Me.columnfld_edad
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civilColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil
            End Get
        End Property
        
        Friend ReadOnly Property fld_edad_garColumn As DataColumn
            Get
                Return Me.columnfld_edad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civil_garColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ocupacion_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ocupacion_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ocupacion_garColumn As DataColumn
            Get
                Return Me.columnfld_ocupacion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_sector_idColumn As DataColumn
            Get
                Return Me.columnfld_sector_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_sectorColumn As DataColumn
            Get
                Return Me.columnfld_sector
            End Get
        End Property
        
        Friend ReadOnly Property fld_categoriaColumn As DataColumn
            Get
                Return Me.columnfld_categoria
            End Get
        End Property
        
        Friend ReadOnly Property fld_limiteColumn As DataColumn
            Get
                Return Me.columnfld_limite
            End Get
        End Property
        
        Friend ReadOnly Property PuestoColumn As DataColumn
            Get
                Return Me.columnPuesto
            End Get
        End Property
        
        Friend ReadOnly Property TimpoTrabajoColumn As DataColumn
            Get
                Return Me.columnTimpoTrabajo
            End Get
        End Property
        
        Friend ReadOnly Property ReferidoPorColumn As DataColumn
            Get
                Return Me.columnReferidoPor
            End Get
        End Property
        
        Friend ReadOnly Property OriundoColumn As DataColumn
            Get
                Return Me.columnOriundo
            End Get
        End Property
        
        Friend ReadOnly Property DataCreditoColumn As DataColumn
            Get
                Return Me.columnDataCredito
            End Get
        End Property
        
        Friend ReadOnly Property IDColumn As DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        Friend ReadOnly Property IDAhorroColumn As DataColumn
            Get
                Return Me.columnIDAhorro
            End Get
        End Property
        
        Friend ReadOnly Property IDClienteColumn As DataColumn
            Get
                Return Me.columnIDCliente
            End Get
        End Property
        
        Friend ReadOnly Property FechaColumn As DataColumn
            Get
                Return Me.columnFecha
            End Get
        End Property
        
        Friend ReadOnly Property TipoColumn As DataColumn
            Get
                Return Me.columnTipo
            End Get
        End Property
        
        Friend ReadOnly Property ConceptoColumn As DataColumn
            Get
                Return Me.columnConcepto
            End Get
        End Property
        
        Friend ReadOnly Property MontoColumn As DataColumn
            Get
                Return Me.columnMonto
            End Get
        End Property
        
        Friend ReadOnly Property UsuarioColumn As DataColumn
            Get
                Return Me.columnUsuario
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_ahorros_retirosRow
            Get
                Return CType(Me.Rows(index),view_ahorros_retirosRow)
            End Get
        End Property
        
        Public Event view_ahorros_retirosRowChanged As view_ahorros_retirosRowChangeEventHandler
        
        Public Event view_ahorros_retirosRowChanging As view_ahorros_retirosRowChangeEventHandler
        
        Public Event view_ahorros_retirosRowDeleted As view_ahorros_retirosRowChangeEventHandler
        
        Public Event view_ahorros_retirosRowDeleting As view_ahorros_retirosRowChangeEventHandler
        
        Public Overloads Sub Addview_ahorros_retirosRow(ByVal row As view_ahorros_retirosRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addview_ahorros_retirosRow( _
                    ByVal TipoDocumento As Integer,  _
                    ByVal fld_FullName As String,  _
                    ByVal fld_apodo As String,  _
                    ByVal fld_Identity As String,  _
                    ByVal fld_Phone As String,  _
                    ByVal fld_Phone2 As String,  _
                    ByVal fld_Address As String,  _
                    ByVal fld_City_id As Integer,  _
                    ByVal fld_City As String,  _
                    ByVal fld_Status As String,  _
                    ByVal fld_bce As Double,  _
                    ByVal fld_cod_zona As Integer,  _
                    ByVal fld_zona As String,  _
                    ByVal fld_nombre_con As String,  _
                    ByVal fld_apodo_con As String,  _
                    ByVal fld_cedula_con As String,  _
                    ByVal fld_telefono_con As String,  _
                    ByVal fld_celular_con As String,  _
                    ByVal fld_ref_personales_cliente As String,  _
                    ByVal fld_ref_comerciales_cliente As String,  _
                    ByVal fld_nombre_gar As String,  _
                    ByVal fld_apodo_gar As String,  _
                    ByVal fld_cedula_gar As String,  _
                    ByVal fld_telefono_gar As String,  _
                    ByVal fld_celular_gar As String,  _
                    ByVal fld_direccion_gar As String,  _
                    ByVal fld_ciudad_gar As String,  _
                    ByVal fld_ref_personales_gar As String,  _
                    ByVal fld_ref_comerciales_gar As String,  _
                    ByVal fld_ingresos_mesuales As Double,  _
                    ByVal fld_nombre_banco1 As String,  _
                    ByVal fld_cuenta_banco1 As String,  _
                    ByVal fld_nombre_banco2 As String,  _
                    ByVal fld_cuenta_banco2 As String,  _
                    ByVal fld_otra_informacion As String,  _
                    ByVal fld_nombre_con_gar As String,  _
                    ByVal fld_apodo_con_gar As String,  _
                    ByVal fld_cedula_con_gar As String,  _
                    ByVal fld_telefono_con_gar As String,  _
                    ByVal fld_celular_con_gar As String,  _
                    ByVal fld_edad As Integer,  _
                    ByVal fld_estado_civil As String,  _
                    ByVal fld_edad_gar As Integer,  _
                    ByVal fld_estado_civil_gar As String,  _
                    ByVal fld_ocupacion_cliente As String,  _
                    ByVal fld_ocupacion_gar As String,  _
                    ByVal fld_sector_id As Integer,  _
                    ByVal fld_sector As String,  _
                    ByVal fld_categoria As String,  _
                    ByVal fld_limite As Double,  _
                    ByVal Puesto As String,  _
                    ByVal TimpoTrabajo As String,  _
                    ByVal ReferidoPor As String,  _
                    ByVal Oriundo As String,  _
                    ByVal DataCredito As Integer,  _
                    ByVal IDAhorro As Integer,  _
                    ByVal IDCliente As Integer,  _
                    ByVal Fecha As Date,  _
                    ByVal Tipo As String,  _
                    ByVal Concepto As String,  _
                    ByVal Monto As Double,  _
                    ByVal Usuario As String) As view_ahorros_retirosRow
            Dim rowview_ahorros_retirosRow As view_ahorros_retirosRow = CType(Me.NewRow,view_ahorros_retirosRow)
            rowview_ahorros_retirosRow.ItemArray = New Object() {Nothing, TipoDocumento, fld_FullName, fld_apodo, fld_Identity, fld_Phone, fld_Phone2, fld_Address, fld_City_id, fld_City, fld_Status, fld_bce, fld_cod_zona, fld_zona, fld_nombre_con, fld_apodo_con, fld_cedula_con, fld_telefono_con, fld_celular_con, fld_ref_personales_cliente, fld_ref_comerciales_cliente, fld_nombre_gar, fld_apodo_gar, fld_cedula_gar, fld_telefono_gar, fld_celular_gar, fld_direccion_gar, fld_ciudad_gar, fld_ref_personales_gar, fld_ref_comerciales_gar, fld_ingresos_mesuales, fld_nombre_banco1, fld_cuenta_banco1, fld_nombre_banco2, fld_cuenta_banco2, fld_otra_informacion, fld_nombre_con_gar, fld_apodo_con_gar, fld_cedula_con_gar, fld_telefono_con_gar, fld_celular_con_gar, fld_edad, fld_estado_civil, fld_edad_gar, fld_estado_civil_gar, fld_ocupacion_cliente, fld_ocupacion_gar, fld_sector_id, fld_sector, fld_categoria, fld_limite, Puesto, TimpoTrabajo, ReferidoPor, Oriundo, DataCredito, Nothing, IDAhorro, IDCliente, Fecha, Tipo, Concepto, Monto, Usuario}
            Me.Rows.Add(rowview_ahorros_retirosRow)
            Return rowview_ahorros_retirosRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As view_ahorros_retirosDataTable = CType(MyBase.Clone,view_ahorros_retirosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New view_ahorros_retirosDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnTipoDocumento = Me.Columns("TipoDocumento")
            Me.columnfld_FullName = Me.Columns("fld_FullName")
            Me.columnfld_apodo = Me.Columns("fld_apodo")
            Me.columnfld_Identity = Me.Columns("fld_Identity")
            Me.columnfld_Phone = Me.Columns("fld_Phone")
            Me.columnfld_Phone2 = Me.Columns("fld_Phone2")
            Me.columnfld_Address = Me.Columns("fld_Address")
            Me.columnfld_City_id = Me.Columns("fld_City_id")
            Me.columnfld_City = Me.Columns("fld_City")
            Me.columnfld_Status = Me.Columns("fld_Status")
            Me.columnfld_bce = Me.Columns("fld_bce")
            Me.columnfld_cod_zona = Me.Columns("fld_cod_zona")
            Me.columnfld_zona = Me.Columns("fld_zona")
            Me.columnfld_nombre_con = Me.Columns("fld_nombre_con")
            Me.columnfld_apodo_con = Me.Columns("fld_apodo_con")
            Me.columnfld_cedula_con = Me.Columns("fld_cedula_con")
            Me.columnfld_telefono_con = Me.Columns("fld_telefono_con")
            Me.columnfld_celular_con = Me.Columns("fld_celular_con")
            Me.columnfld_ref_personales_cliente = Me.Columns("fld_ref_personales_cliente")
            Me.columnfld_ref_comerciales_cliente = Me.Columns("fld_ref_comerciales_cliente")
            Me.columnfld_nombre_gar = Me.Columns("fld_nombre_gar")
            Me.columnfld_apodo_gar = Me.Columns("fld_apodo_gar")
            Me.columnfld_cedula_gar = Me.Columns("fld_cedula_gar")
            Me.columnfld_telefono_gar = Me.Columns("fld_telefono_gar")
            Me.columnfld_celular_gar = Me.Columns("fld_celular_gar")
            Me.columnfld_direccion_gar = Me.Columns("fld_direccion_gar")
            Me.columnfld_ciudad_gar = Me.Columns("fld_ciudad_gar")
            Me.columnfld_ref_personales_gar = Me.Columns("fld_ref_personales_gar")
            Me.columnfld_ref_comerciales_gar = Me.Columns("fld_ref_comerciales_gar")
            Me.columnfld_ingresos_mesuales = Me.Columns("fld_ingresos_mesuales")
            Me.columnfld_nombre_banco1 = Me.Columns("fld_nombre_banco1")
            Me.columnfld_cuenta_banco1 = Me.Columns("fld_cuenta_banco1")
            Me.columnfld_nombre_banco2 = Me.Columns("fld_nombre_banco2")
            Me.columnfld_cuenta_banco2 = Me.Columns("fld_cuenta_banco2")
            Me.columnfld_otra_informacion = Me.Columns("fld_otra_informacion")
            Me.columnfld_nombre_con_gar = Me.Columns("fld_nombre_con_gar")
            Me.columnfld_apodo_con_gar = Me.Columns("fld_apodo_con_gar")
            Me.columnfld_cedula_con_gar = Me.Columns("fld_cedula_con_gar")
            Me.columnfld_telefono_con_gar = Me.Columns("fld_telefono_con_gar")
            Me.columnfld_celular_con_gar = Me.Columns("fld_celular_con_gar")
            Me.columnfld_edad = Me.Columns("fld_edad")
            Me.columnfld_estado_civil = Me.Columns("fld_estado_civil")
            Me.columnfld_edad_gar = Me.Columns("fld_edad_gar")
            Me.columnfld_estado_civil_gar = Me.Columns("fld_estado_civil_gar")
            Me.columnfld_ocupacion_cliente = Me.Columns("fld_ocupacion_cliente")
            Me.columnfld_ocupacion_gar = Me.Columns("fld_ocupacion_gar")
            Me.columnfld_sector_id = Me.Columns("fld_sector_id")
            Me.columnfld_sector = Me.Columns("fld_sector")
            Me.columnfld_categoria = Me.Columns("fld_categoria")
            Me.columnfld_limite = Me.Columns("fld_limite")
            Me.columnPuesto = Me.Columns("Puesto")
            Me.columnTimpoTrabajo = Me.Columns("TimpoTrabajo")
            Me.columnReferidoPor = Me.Columns("ReferidoPor")
            Me.columnOriundo = Me.Columns("Oriundo")
            Me.columnDataCredito = Me.Columns("DataCredito")
            Me.columnID = Me.Columns("ID")
            Me.columnIDAhorro = Me.Columns("IDAhorro")
            Me.columnIDCliente = Me.Columns("IDCliente")
            Me.columnFecha = Me.Columns("Fecha")
            Me.columnTipo = Me.Columns("Tipo")
            Me.columnConcepto = Me.Columns("Concepto")
            Me.columnMonto = Me.Columns("Monto")
            Me.columnUsuario = Me.Columns("Usuario")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnTipoDocumento = New DataColumn("TipoDocumento", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTipoDocumento)
            Me.columnfld_FullName = New DataColumn("fld_FullName", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_FullName)
            Me.columnfld_apodo = New DataColumn("fld_apodo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo)
            Me.columnfld_Identity = New DataColumn("fld_Identity", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Identity)
            Me.columnfld_Phone = New DataColumn("fld_Phone", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone)
            Me.columnfld_Phone2 = New DataColumn("fld_Phone2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone2)
            Me.columnfld_Address = New DataColumn("fld_Address", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Address)
            Me.columnfld_City_id = New DataColumn("fld_City_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_City_id)
            Me.columnfld_City = New DataColumn("fld_City", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_City)
            Me.columnfld_Status = New DataColumn("fld_Status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Status)
            Me.columnfld_bce = New DataColumn("fld_bce", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce)
            Me.columnfld_cod_zona = New DataColumn("fld_cod_zona", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cod_zona)
            Me.columnfld_zona = New DataColumn("fld_zona", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_zona)
            Me.columnfld_nombre_con = New DataColumn("fld_nombre_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con)
            Me.columnfld_apodo_con = New DataColumn("fld_apodo_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con)
            Me.columnfld_cedula_con = New DataColumn("fld_cedula_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con)
            Me.columnfld_telefono_con = New DataColumn("fld_telefono_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con)
            Me.columnfld_celular_con = New DataColumn("fld_celular_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con)
            Me.columnfld_ref_personales_cliente = New DataColumn("fld_ref_personales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_cliente)
            Me.columnfld_ref_comerciales_cliente = New DataColumn("fld_ref_comerciales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_cliente)
            Me.columnfld_nombre_gar = New DataColumn("fld_nombre_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_gar)
            Me.columnfld_apodo_gar = New DataColumn("fld_apodo_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_gar)
            Me.columnfld_cedula_gar = New DataColumn("fld_cedula_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_gar)
            Me.columnfld_telefono_gar = New DataColumn("fld_telefono_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_gar)
            Me.columnfld_celular_gar = New DataColumn("fld_celular_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_gar)
            Me.columnfld_direccion_gar = New DataColumn("fld_direccion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_direccion_gar)
            Me.columnfld_ciudad_gar = New DataColumn("fld_ciudad_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ciudad_gar)
            Me.columnfld_ref_personales_gar = New DataColumn("fld_ref_personales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_gar)
            Me.columnfld_ref_comerciales_gar = New DataColumn("fld_ref_comerciales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_gar)
            Me.columnfld_ingresos_mesuales = New DataColumn("fld_ingresos_mesuales", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ingresos_mesuales)
            Me.columnfld_nombre_banco1 = New DataColumn("fld_nombre_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco1)
            Me.columnfld_cuenta_banco1 = New DataColumn("fld_cuenta_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco1)
            Me.columnfld_nombre_banco2 = New DataColumn("fld_nombre_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco2)
            Me.columnfld_cuenta_banco2 = New DataColumn("fld_cuenta_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco2)
            Me.columnfld_otra_informacion = New DataColumn("fld_otra_informacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_otra_informacion)
            Me.columnfld_nombre_con_gar = New DataColumn("fld_nombre_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con_gar)
            Me.columnfld_apodo_con_gar = New DataColumn("fld_apodo_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con_gar)
            Me.columnfld_cedula_con_gar = New DataColumn("fld_cedula_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con_gar)
            Me.columnfld_telefono_con_gar = New DataColumn("fld_telefono_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con_gar)
            Me.columnfld_celular_con_gar = New DataColumn("fld_celular_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con_gar)
            Me.columnfld_edad = New DataColumn("fld_edad", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad)
            Me.columnfld_estado_civil = New DataColumn("fld_estado_civil", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil)
            Me.columnfld_edad_gar = New DataColumn("fld_edad_gar", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad_gar)
            Me.columnfld_estado_civil_gar = New DataColumn("fld_estado_civil_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil_gar)
            Me.columnfld_ocupacion_cliente = New DataColumn("fld_ocupacion_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ocupacion_cliente)
            Me.columnfld_ocupacion_gar = New DataColumn("fld_ocupacion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ocupacion_gar)
            Me.columnfld_sector_id = New DataColumn("fld_sector_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_sector_id)
            Me.columnfld_sector = New DataColumn("fld_sector", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_sector)
            Me.columnfld_categoria = New DataColumn("fld_categoria", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_categoria)
            Me.columnfld_limite = New DataColumn("fld_limite", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_limite)
            Me.columnPuesto = New DataColumn("Puesto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPuesto)
            Me.columnTimpoTrabajo = New DataColumn("TimpoTrabajo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTimpoTrabajo)
            Me.columnReferidoPor = New DataColumn("ReferidoPor", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnReferidoPor)
            Me.columnOriundo = New DataColumn("Oriundo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnOriundo)
            Me.columnDataCredito = New DataColumn("DataCredito", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDataCredito)
            Me.columnID = New DataColumn("ID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnID)
            Me.columnIDAhorro = New DataColumn("IDAhorro", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnIDAhorro)
            Me.columnIDCliente = New DataColumn("IDCliente", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnIDCliente)
            Me.columnFecha = New DataColumn("Fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFecha)
            Me.columnTipo = New DataColumn("Tipo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTipo)
            Me.columnConcepto = New DataColumn("Concepto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnConcepto)
            Me.columnMonto = New DataColumn("Monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMonto)
            Me.columnUsuario = New DataColumn("Usuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnUsuario)
            Me.columnfld_id.AutoIncrement = true
            Me.columnID.AutoIncrement = true
        End Sub
        
        Public Function Newview_ahorros_retirosRow() As view_ahorros_retirosRow
            Return CType(Me.NewRow,view_ahorros_retirosRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New view_ahorros_retirosRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(view_ahorros_retirosRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_ahorros_retirosRowChangedEvent) Is Nothing) Then
                RaiseEvent view_ahorros_retirosRowChanged(Me, New view_ahorros_retirosRowChangeEvent(CType(e.Row,view_ahorros_retirosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_ahorros_retirosRowChangingEvent) Is Nothing) Then
                RaiseEvent view_ahorros_retirosRowChanging(Me, New view_ahorros_retirosRowChangeEvent(CType(e.Row,view_ahorros_retirosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_ahorros_retirosRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_ahorros_retirosRowDeleted(Me, New view_ahorros_retirosRowChangeEvent(CType(e.Row,view_ahorros_retirosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_ahorros_retirosRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_ahorros_retirosRowDeleting(Me, New view_ahorros_retirosRowChangeEvent(CType(e.Row,view_ahorros_retirosRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeview_ahorros_retirosRow(ByVal row As view_ahorros_retirosRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_ahorros_retirosRow
        Inherits DataRow
        
        Private tableview_ahorros_retiros As view_ahorros_retirosDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_ahorros_retiros = CType(Me.Table,view_ahorros_retirosDataTable)
        End Sub
        
        Public Property fld_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_idColumn) = value
            End Set
        End Property
        
        Public Property TipoDocumento As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.TipoDocumentoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.TipoDocumentoColumn) = value
            End Set
        End Property
        
        Public Property fld_FullName As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_FullNameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_FullNameColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_apodoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_apodoColumn) = value
            End Set
        End Property
        
        Public Property fld_Identity As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_IdentityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_IdentityColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_PhoneColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_PhoneColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_Phone2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_Phone2Column) = value
            End Set
        End Property
        
        Public Property fld_Address As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_AddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_AddressColumn) = value
            End Set
        End Property
        
        Public Property fld_City_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_City_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_City_idColumn) = value
            End Set
        End Property
        
        Public Property fld_City As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_CityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_CityColumn) = value
            End Set
        End Property
        
        Public Property fld_Status As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_StatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_StatusColumn) = value
            End Set
        End Property
        
        Public Property fld_bce As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_bceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_bceColumn) = value
            End Set
        End Property
        
        Public Property fld_cod_zona As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_cod_zonaColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_cod_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_zona As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_zonaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_nombre_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_nombre_conColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_apodo_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_apodo_conColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_cedula_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_cedula_conColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_telefono_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_telefono_conColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_celular_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_celular_conColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_ref_personales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_ref_personales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_ref_comerciales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_ref_comerciales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_nombre_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_nombre_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_apodo_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_apodo_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_cedula_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_cedula_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_telefono_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_telefono_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_celular_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_celular_garColumn) = value
            End Set
        End Property
        
        Public Property fld_direccion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_direccion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_direccion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ciudad_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_ciudad_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_ciudad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_ref_personales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_ref_personales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_ref_comerciales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_ref_comerciales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ingresos_mesuales As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_ingresos_mesualesColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_ingresos_mesualesColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_nombre_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_nombre_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_cuenta_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_cuenta_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_nombre_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_nombre_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_cuenta_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_cuenta_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_otra_informacion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_otra_informacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_otra_informacionColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_nombre_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_nombre_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_apodo_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_apodo_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_cedula_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_cedula_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_telefono_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_telefono_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_celular_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_celular_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_edad As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_edadColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_edadColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_estado_civilColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_estado_civilColumn) = value
            End Set
        End Property
        
        Public Property fld_edad_gar As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_edad_garColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_edad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_estado_civil_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_estado_civil_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ocupacion_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_ocupacion_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_ocupacion_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ocupacion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_ocupacion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_ocupacion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_sector_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_sector_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_sector_idColumn) = value
            End Set
        End Property
        
        Public Property fld_sector As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_sectorColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_sectorColumn) = value
            End Set
        End Property
        
        Public Property fld_categoria As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_categoriaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_categoriaColumn) = value
            End Set
        End Property
        
        Public Property fld_limite As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.fld_limiteColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.fld_limiteColumn) = value
            End Set
        End Property
        
        Public Property Puesto As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.PuestoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.PuestoColumn) = value
            End Set
        End Property
        
        Public Property TimpoTrabajo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.TimpoTrabajoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.TimpoTrabajoColumn) = value
            End Set
        End Property
        
        Public Property ReferidoPor As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.ReferidoPorColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.ReferidoPorColumn) = value
            End Set
        End Property
        
        Public Property Oriundo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.OriundoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.OriundoColumn) = value
            End Set
        End Property
        
        Public Property DataCredito As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.DataCreditoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.DataCreditoColumn) = value
            End Set
        End Property
        
        Public Property ID As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.IDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.IDColumn) = value
            End Set
        End Property
        
        Public Property IDAhorro As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.IDAhorroColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.IDAhorroColumn) = value
            End Set
        End Property
        
        Public Property IDCliente As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.IDClienteColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.IDClienteColumn) = value
            End Set
        End Property
        
        Public Property Fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.FechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.FechaColumn) = value
            End Set
        End Property
        
        Public Property Tipo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.TipoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.TipoColumn) = value
            End Set
        End Property
        
        Public Property Concepto As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.ConceptoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.ConceptoColumn) = value
            End Set
        End Property
        
        Public Property Monto As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.MontoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.MontoColumn) = value
            End Set
        End Property
        
        Public Property Usuario As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros_retiros.UsuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros_retiros.UsuarioColumn) = value
            End Set
        End Property
        
        Public Function Isfld_idNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_idColumn)
        End Function
        
        Public Sub Setfld_idNull()
            Me(Me.tableview_ahorros_retiros.fld_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTipoDocumentoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.TipoDocumentoColumn)
        End Function
        
        Public Sub SetTipoDocumentoNull()
            Me(Me.tableview_ahorros_retiros.TipoDocumentoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_FullNameNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_FullNameColumn)
        End Function
        
        Public Sub Setfld_FullNameNull()
            Me(Me.tableview_ahorros_retiros.fld_FullNameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_apodoColumn)
        End Function
        
        Public Sub Setfld_apodoNull()
            Me(Me.tableview_ahorros_retiros.fld_apodoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_IdentityNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_IdentityColumn)
        End Function
        
        Public Sub Setfld_IdentityNull()
            Me(Me.tableview_ahorros_retiros.fld_IdentityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_PhoneNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_PhoneColumn)
        End Function
        
        Public Sub Setfld_PhoneNull()
            Me(Me.tableview_ahorros_retiros.fld_PhoneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_Phone2Null() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_Phone2Column)
        End Function
        
        Public Sub Setfld_Phone2Null()
            Me(Me.tableview_ahorros_retiros.fld_Phone2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_AddressNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_AddressColumn)
        End Function
        
        Public Sub Setfld_AddressNull()
            Me(Me.tableview_ahorros_retiros.fld_AddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_City_idNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_City_idColumn)
        End Function
        
        Public Sub Setfld_City_idNull()
            Me(Me.tableview_ahorros_retiros.fld_City_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_CityNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_CityColumn)
        End Function
        
        Public Sub Setfld_CityNull()
            Me(Me.tableview_ahorros_retiros.fld_CityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_StatusNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_StatusColumn)
        End Function
        
        Public Sub Setfld_StatusNull()
            Me(Me.tableview_ahorros_retiros.fld_StatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bceNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_bceColumn)
        End Function
        
        Public Sub Setfld_bceNull()
            Me(Me.tableview_ahorros_retiros.fld_bceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cod_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_cod_zonaColumn)
        End Function
        
        Public Sub Setfld_cod_zonaNull()
            Me(Me.tableview_ahorros_retiros.fld_cod_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_zonaColumn)
        End Function
        
        Public Sub Setfld_zonaNull()
            Me(Me.tableview_ahorros_retiros.fld_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_nombre_conColumn)
        End Function
        
        Public Sub Setfld_nombre_conNull()
            Me(Me.tableview_ahorros_retiros.fld_nombre_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_apodo_conColumn)
        End Function
        
        Public Sub Setfld_apodo_conNull()
            Me(Me.tableview_ahorros_retiros.fld_apodo_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_cedula_conColumn)
        End Function
        
        Public Sub Setfld_cedula_conNull()
            Me(Me.tableview_ahorros_retiros.fld_cedula_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_telefono_conColumn)
        End Function
        
        Public Sub Setfld_telefono_conNull()
            Me(Me.tableview_ahorros_retiros.fld_telefono_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_celular_conColumn)
        End Function
        
        Public Sub Setfld_celular_conNull()
            Me(Me.tableview_ahorros_retiros.fld_celular_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_ref_personales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_personales_clienteNull()
            Me(Me.tableview_ahorros_retiros.fld_ref_personales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_ref_comerciales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_clienteNull()
            Me(Me.tableview_ahorros_retiros.fld_ref_comerciales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_nombre_garColumn)
        End Function
        
        Public Sub Setfld_nombre_garNull()
            Me(Me.tableview_ahorros_retiros.fld_nombre_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_apodo_garColumn)
        End Function
        
        Public Sub Setfld_apodo_garNull()
            Me(Me.tableview_ahorros_retiros.fld_apodo_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_cedula_garColumn)
        End Function
        
        Public Sub Setfld_cedula_garNull()
            Me(Me.tableview_ahorros_retiros.fld_cedula_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_telefono_garColumn)
        End Function
        
        Public Sub Setfld_telefono_garNull()
            Me(Me.tableview_ahorros_retiros.fld_telefono_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_celular_garColumn)
        End Function
        
        Public Sub Setfld_celular_garNull()
            Me(Me.tableview_ahorros_retiros.fld_celular_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_direccion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_direccion_garColumn)
        End Function
        
        Public Sub Setfld_direccion_garNull()
            Me(Me.tableview_ahorros_retiros.fld_direccion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ciudad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_ciudad_garColumn)
        End Function
        
        Public Sub Setfld_ciudad_garNull()
            Me(Me.tableview_ahorros_retiros.fld_ciudad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_ref_personales_garColumn)
        End Function
        
        Public Sub Setfld_ref_personales_garNull()
            Me(Me.tableview_ahorros_retiros.fld_ref_personales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_ref_comerciales_garColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_garNull()
            Me(Me.tableview_ahorros_retiros.fld_ref_comerciales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ingresos_mesualesNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_ingresos_mesualesColumn)
        End Function
        
        Public Sub Setfld_ingresos_mesualesNull()
            Me(Me.tableview_ahorros_retiros.fld_ingresos_mesualesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_nombre_banco1Column)
        End Function
        
        Public Sub Setfld_nombre_banco1Null()
            Me(Me.tableview_ahorros_retiros.fld_nombre_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_cuenta_banco1Column)
        End Function
        
        Public Sub Setfld_cuenta_banco1Null()
            Me(Me.tableview_ahorros_retiros.fld_cuenta_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_nombre_banco2Column)
        End Function
        
        Public Sub Setfld_nombre_banco2Null()
            Me(Me.tableview_ahorros_retiros.fld_nombre_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_cuenta_banco2Column)
        End Function
        
        Public Sub Setfld_cuenta_banco2Null()
            Me(Me.tableview_ahorros_retiros.fld_cuenta_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_otra_informacionNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_otra_informacionColumn)
        End Function
        
        Public Sub Setfld_otra_informacionNull()
            Me(Me.tableview_ahorros_retiros.fld_otra_informacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_nombre_con_garColumn)
        End Function
        
        Public Sub Setfld_nombre_con_garNull()
            Me(Me.tableview_ahorros_retiros.fld_nombre_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_apodo_con_garColumn)
        End Function
        
        Public Sub Setfld_apodo_con_garNull()
            Me(Me.tableview_ahorros_retiros.fld_apodo_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_cedula_con_garColumn)
        End Function
        
        Public Sub Setfld_cedula_con_garNull()
            Me(Me.tableview_ahorros_retiros.fld_cedula_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_telefono_con_garColumn)
        End Function
        
        Public Sub Setfld_telefono_con_garNull()
            Me(Me.tableview_ahorros_retiros.fld_telefono_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_celular_con_garColumn)
        End Function
        
        Public Sub Setfld_celular_con_garNull()
            Me(Me.tableview_ahorros_retiros.fld_celular_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edadNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_edadColumn)
        End Function
        
        Public Sub Setfld_edadNull()
            Me(Me.tableview_ahorros_retiros.fld_edadColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civilNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_estado_civilColumn)
        End Function
        
        Public Sub Setfld_estado_civilNull()
            Me(Me.tableview_ahorros_retiros.fld_estado_civilColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_edad_garColumn)
        End Function
        
        Public Sub Setfld_edad_garNull()
            Me(Me.tableview_ahorros_retiros.fld_edad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civil_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_estado_civil_garColumn)
        End Function
        
        Public Sub Setfld_estado_civil_garNull()
            Me(Me.tableview_ahorros_retiros.fld_estado_civil_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ocupacion_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_ocupacion_clienteColumn)
        End Function
        
        Public Sub Setfld_ocupacion_clienteNull()
            Me(Me.tableview_ahorros_retiros.fld_ocupacion_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ocupacion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_ocupacion_garColumn)
        End Function
        
        Public Sub Setfld_ocupacion_garNull()
            Me(Me.tableview_ahorros_retiros.fld_ocupacion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_sector_idNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_sector_idColumn)
        End Function
        
        Public Sub Setfld_sector_idNull()
            Me(Me.tableview_ahorros_retiros.fld_sector_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_sectorNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_sectorColumn)
        End Function
        
        Public Sub Setfld_sectorNull()
            Me(Me.tableview_ahorros_retiros.fld_sectorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_categoriaNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_categoriaColumn)
        End Function
        
        Public Sub Setfld_categoriaNull()
            Me(Me.tableview_ahorros_retiros.fld_categoriaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_limiteNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.fld_limiteColumn)
        End Function
        
        Public Sub Setfld_limiteNull()
            Me(Me.tableview_ahorros_retiros.fld_limiteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsPuestoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.PuestoColumn)
        End Function
        
        Public Sub SetPuestoNull()
            Me(Me.tableview_ahorros_retiros.PuestoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTimpoTrabajoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.TimpoTrabajoColumn)
        End Function
        
        Public Sub SetTimpoTrabajoNull()
            Me(Me.tableview_ahorros_retiros.TimpoTrabajoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsReferidoPorNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.ReferidoPorColumn)
        End Function
        
        Public Sub SetReferidoPorNull()
            Me(Me.tableview_ahorros_retiros.ReferidoPorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsOriundoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.OriundoColumn)
        End Function
        
        Public Sub SetOriundoNull()
            Me(Me.tableview_ahorros_retiros.OriundoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDataCreditoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.DataCreditoColumn)
        End Function
        
        Public Sub SetDataCreditoNull()
            Me(Me.tableview_ahorros_retiros.DataCreditoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.IDColumn)
        End Function
        
        Public Sub SetIDNull()
            Me(Me.tableview_ahorros_retiros.IDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsIDAhorroNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.IDAhorroColumn)
        End Function
        
        Public Sub SetIDAhorroNull()
            Me(Me.tableview_ahorros_retiros.IDAhorroColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsIDClienteNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.IDClienteColumn)
        End Function
        
        Public Sub SetIDClienteNull()
            Me(Me.tableview_ahorros_retiros.IDClienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.FechaColumn)
        End Function
        
        Public Sub SetFechaNull()
            Me(Me.tableview_ahorros_retiros.FechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTipoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.TipoColumn)
        End Function
        
        Public Sub SetTipoNull()
            Me(Me.tableview_ahorros_retiros.TipoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsConceptoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.ConceptoColumn)
        End Function
        
        Public Sub SetConceptoNull()
            Me(Me.tableview_ahorros_retiros.ConceptoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMontoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.MontoColumn)
        End Function
        
        Public Sub SetMontoNull()
            Me(Me.tableview_ahorros_retiros.MontoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsUsuarioNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros_retiros.UsuarioColumn)
        End Function
        
        Public Sub SetUsuarioNull()
            Me(Me.tableview_ahorros_retiros.UsuarioColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_ahorros_retirosRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As view_ahorros_retirosRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As view_ahorros_retirosRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As view_ahorros_retirosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_ahorrosDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id As DataColumn
        
        Private columnTipoDocumento As DataColumn
        
        Private columnfld_FullName As DataColumn
        
        Private columnfld_apodo As DataColumn
        
        Private columnfld_Identity As DataColumn
        
        Private columnfld_Phone As DataColumn
        
        Private columnfld_Phone2 As DataColumn
        
        Private columnfld_Address As DataColumn
        
        Private columnfld_City_id As DataColumn
        
        Private columnfld_City As DataColumn
        
        Private columnfld_Status As DataColumn
        
        Private columnfld_bce As DataColumn
        
        Private columnfld_cod_zona As DataColumn
        
        Private columnfld_zona As DataColumn
        
        Private columnfld_nombre_con As DataColumn
        
        Private columnfld_apodo_con As DataColumn
        
        Private columnfld_cedula_con As DataColumn
        
        Private columnfld_telefono_con As DataColumn
        
        Private columnfld_celular_con As DataColumn
        
        Private columnfld_ref_personales_cliente As DataColumn
        
        Private columnfld_ref_comerciales_cliente As DataColumn
        
        Private columnfld_nombre_gar As DataColumn
        
        Private columnfld_apodo_gar As DataColumn
        
        Private columnfld_cedula_gar As DataColumn
        
        Private columnfld_telefono_gar As DataColumn
        
        Private columnfld_celular_gar As DataColumn
        
        Private columnfld_direccion_gar As DataColumn
        
        Private columnfld_ciudad_gar As DataColumn
        
        Private columnfld_ref_personales_gar As DataColumn
        
        Private columnfld_ref_comerciales_gar As DataColumn
        
        Private columnfld_ingresos_mesuales As DataColumn
        
        Private columnfld_nombre_banco1 As DataColumn
        
        Private columnfld_cuenta_banco1 As DataColumn
        
        Private columnfld_nombre_banco2 As DataColumn
        
        Private columnfld_cuenta_banco2 As DataColumn
        
        Private columnfld_otra_informacion As DataColumn
        
        Private columnfld_nombre_con_gar As DataColumn
        
        Private columnfld_apodo_con_gar As DataColumn
        
        Private columnfld_cedula_con_gar As DataColumn
        
        Private columnfld_telefono_con_gar As DataColumn
        
        Private columnfld_celular_con_gar As DataColumn
        
        Private columnfld_edad As DataColumn
        
        Private columnfld_estado_civil As DataColumn
        
        Private columnfld_edad_gar As DataColumn
        
        Private columnfld_estado_civil_gar As DataColumn
        
        Private columnfld_ocupacion_cliente As DataColumn
        
        Private columnfld_ocupacion_gar As DataColumn
        
        Private columnfld_sector_id As DataColumn
        
        Private columnfld_sector As DataColumn
        
        Private columnfld_categoria As DataColumn
        
        Private columnfld_limite As DataColumn
        
        Private columnPuesto As DataColumn
        
        Private columnTimpoTrabajo As DataColumn
        
        Private columnReferidoPor As DataColumn
        
        Private columnOriundo As DataColumn
        
        Private columnDataCredito As DataColumn
        
        Private column_tbl_ahorros_cuentas_ID As DataColumn
        
        Private columnIDCliente As DataColumn
        
        Private columnCuentaNo As DataColumn
        
        Private columnFechaApertura As DataColumn
        
        Private columnFechaCancelada As DataColumn
        
        Private columnTasaIteres As DataColumn
        
        Private columnSaldoCapital As DataColumn
        
        Private columnSaldoInteres As DataColumn
        
        Private columnSaldoRetiros As DataColumn
        
        Private columnUsuario As DataColumn
        
        Private columnNota As DataColumn
        
        Private columnCategoria As DataColumn
        
        Private columnEstado As DataColumn
        
        Private column_tbl_ahorros_categorias_ID As DataColumn
        
        Private columnDescripcion As DataColumn
        
        Friend Sub New()
            MyBase.New("view_ahorros")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property TipoDocumentoColumn As DataColumn
            Get
                Return Me.columnTipoDocumento
            End Get
        End Property
        
        Friend ReadOnly Property fld_FullNameColumn As DataColumn
            Get
                Return Me.columnfld_FullName
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodoColumn As DataColumn
            Get
                Return Me.columnfld_apodo
            End Get
        End Property
        
        Friend ReadOnly Property fld_IdentityColumn As DataColumn
            Get
                Return Me.columnfld_Identity
            End Get
        End Property
        
        Friend ReadOnly Property fld_PhoneColumn As DataColumn
            Get
                Return Me.columnfld_Phone
            End Get
        End Property
        
        Friend ReadOnly Property fld_Phone2Column As DataColumn
            Get
                Return Me.columnfld_Phone2
            End Get
        End Property
        
        Friend ReadOnly Property fld_AddressColumn As DataColumn
            Get
                Return Me.columnfld_Address
            End Get
        End Property
        
        Friend ReadOnly Property fld_City_idColumn As DataColumn
            Get
                Return Me.columnfld_City_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_CityColumn As DataColumn
            Get
                Return Me.columnfld_City
            End Get
        End Property
        
        Friend ReadOnly Property fld_StatusColumn As DataColumn
            Get
                Return Me.columnfld_Status
            End Get
        End Property
        
        Friend ReadOnly Property fld_bceColumn As DataColumn
            Get
                Return Me.columnfld_bce
            End Get
        End Property
        
        Friend ReadOnly Property fld_cod_zonaColumn As DataColumn
            Get
                Return Me.columnfld_cod_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_zonaColumn As DataColumn
            Get
                Return Me.columnfld_zona
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_conColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_conColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_conColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_conColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_conColumn As DataColumn
            Get
                Return Me.columnfld_celular_con
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_direccion_garColumn As DataColumn
            Get
                Return Me.columnfld_direccion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ciudad_garColumn As DataColumn
            Get
                Return Me.columnfld_ciudad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_personales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_personales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ref_comerciales_garColumn As DataColumn
            Get
                Return Me.columnfld_ref_comerciales_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ingresos_mesualesColumn As DataColumn
            Get
                Return Me.columnfld_ingresos_mesuales
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco1Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco1Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco1
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_banco2Column As DataColumn
            Get
                Return Me.columnfld_nombre_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_cuenta_banco2Column As DataColumn
            Get
                Return Me.columnfld_cuenta_banco2
            End Get
        End Property
        
        Friend ReadOnly Property fld_otra_informacionColumn As DataColumn
            Get
                Return Me.columnfld_otra_informacion
            End Get
        End Property
        
        Friend ReadOnly Property fld_nombre_con_garColumn As DataColumn
            Get
                Return Me.columnfld_nombre_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_apodo_con_garColumn As DataColumn
            Get
                Return Me.columnfld_apodo_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_cedula_con_garColumn As DataColumn
            Get
                Return Me.columnfld_cedula_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_telefono_con_garColumn As DataColumn
            Get
                Return Me.columnfld_telefono_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_celular_con_garColumn As DataColumn
            Get
                Return Me.columnfld_celular_con_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_edadColumn As DataColumn
            Get
                Return Me.columnfld_edad
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civilColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil
            End Get
        End Property
        
        Friend ReadOnly Property fld_edad_garColumn As DataColumn
            Get
                Return Me.columnfld_edad_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_estado_civil_garColumn As DataColumn
            Get
                Return Me.columnfld_estado_civil_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_ocupacion_clienteColumn As DataColumn
            Get
                Return Me.columnfld_ocupacion_cliente
            End Get
        End Property
        
        Friend ReadOnly Property fld_ocupacion_garColumn As DataColumn
            Get
                Return Me.columnfld_ocupacion_gar
            End Get
        End Property
        
        Friend ReadOnly Property fld_sector_idColumn As DataColumn
            Get
                Return Me.columnfld_sector_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_sectorColumn As DataColumn
            Get
                Return Me.columnfld_sector
            End Get
        End Property
        
        Friend ReadOnly Property fld_categoriaColumn As DataColumn
            Get
                Return Me.columnfld_categoria
            End Get
        End Property
        
        Friend ReadOnly Property fld_limiteColumn As DataColumn
            Get
                Return Me.columnfld_limite
            End Get
        End Property
        
        Friend ReadOnly Property PuestoColumn As DataColumn
            Get
                Return Me.columnPuesto
            End Get
        End Property
        
        Friend ReadOnly Property TimpoTrabajoColumn As DataColumn
            Get
                Return Me.columnTimpoTrabajo
            End Get
        End Property
        
        Friend ReadOnly Property ReferidoPorColumn As DataColumn
            Get
                Return Me.columnReferidoPor
            End Get
        End Property
        
        Friend ReadOnly Property OriundoColumn As DataColumn
            Get
                Return Me.columnOriundo
            End Get
        End Property
        
        Friend ReadOnly Property DataCreditoColumn As DataColumn
            Get
                Return Me.columnDataCredito
            End Get
        End Property
        
        Friend ReadOnly Property _tbl_ahorros_cuentas_IDColumn As DataColumn
            Get
                Return Me.column_tbl_ahorros_cuentas_ID
            End Get
        End Property
        
        Friend ReadOnly Property IDClienteColumn As DataColumn
            Get
                Return Me.columnIDCliente
            End Get
        End Property
        
        Friend ReadOnly Property CuentaNoColumn As DataColumn
            Get
                Return Me.columnCuentaNo
            End Get
        End Property
        
        Friend ReadOnly Property FechaAperturaColumn As DataColumn
            Get
                Return Me.columnFechaApertura
            End Get
        End Property
        
        Friend ReadOnly Property FechaCanceladaColumn As DataColumn
            Get
                Return Me.columnFechaCancelada
            End Get
        End Property
        
        Friend ReadOnly Property TasaIteresColumn As DataColumn
            Get
                Return Me.columnTasaIteres
            End Get
        End Property
        
        Friend ReadOnly Property SaldoCapitalColumn As DataColumn
            Get
                Return Me.columnSaldoCapital
            End Get
        End Property
        
        Friend ReadOnly Property SaldoInteresColumn As DataColumn
            Get
                Return Me.columnSaldoInteres
            End Get
        End Property
        
        Friend ReadOnly Property SaldoRetirosColumn As DataColumn
            Get
                Return Me.columnSaldoRetiros
            End Get
        End Property
        
        Friend ReadOnly Property UsuarioColumn As DataColumn
            Get
                Return Me.columnUsuario
            End Get
        End Property
        
        Friend ReadOnly Property NotaColumn As DataColumn
            Get
                Return Me.columnNota
            End Get
        End Property
        
        Friend ReadOnly Property CategoriaColumn As DataColumn
            Get
                Return Me.columnCategoria
            End Get
        End Property
        
        Friend ReadOnly Property EstadoColumn As DataColumn
            Get
                Return Me.columnEstado
            End Get
        End Property
        
        Friend ReadOnly Property _tbl_ahorros_categorias_IDColumn As DataColumn
            Get
                Return Me.column_tbl_ahorros_categorias_ID
            End Get
        End Property
        
        Friend ReadOnly Property DescripcionColumn As DataColumn
            Get
                Return Me.columnDescripcion
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As view_ahorrosRow
            Get
                Return CType(Me.Rows(index),view_ahorrosRow)
            End Get
        End Property
        
        Public Event view_ahorrosRowChanged As view_ahorrosRowChangeEventHandler
        
        Public Event view_ahorrosRowChanging As view_ahorrosRowChangeEventHandler
        
        Public Event view_ahorrosRowDeleted As view_ahorrosRowChangeEventHandler
        
        Public Event view_ahorrosRowDeleting As view_ahorrosRowChangeEventHandler
        
        Public Overloads Sub Addview_ahorrosRow(ByVal row As view_ahorrosRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addview_ahorrosRow( _
                    ByVal TipoDocumento As Integer,  _
                    ByVal fld_FullName As String,  _
                    ByVal fld_apodo As String,  _
                    ByVal fld_Identity As String,  _
                    ByVal fld_Phone As String,  _
                    ByVal fld_Phone2 As String,  _
                    ByVal fld_Address As String,  _
                    ByVal fld_City_id As Integer,  _
                    ByVal fld_City As String,  _
                    ByVal fld_Status As String,  _
                    ByVal fld_bce As Double,  _
                    ByVal fld_cod_zona As Integer,  _
                    ByVal fld_zona As String,  _
                    ByVal fld_nombre_con As String,  _
                    ByVal fld_apodo_con As String,  _
                    ByVal fld_cedula_con As String,  _
                    ByVal fld_telefono_con As String,  _
                    ByVal fld_celular_con As String,  _
                    ByVal fld_ref_personales_cliente As String,  _
                    ByVal fld_ref_comerciales_cliente As String,  _
                    ByVal fld_nombre_gar As String,  _
                    ByVal fld_apodo_gar As String,  _
                    ByVal fld_cedula_gar As String,  _
                    ByVal fld_telefono_gar As String,  _
                    ByVal fld_celular_gar As String,  _
                    ByVal fld_direccion_gar As String,  _
                    ByVal fld_ciudad_gar As String,  _
                    ByVal fld_ref_personales_gar As String,  _
                    ByVal fld_ref_comerciales_gar As String,  _
                    ByVal fld_ingresos_mesuales As Double,  _
                    ByVal fld_nombre_banco1 As String,  _
                    ByVal fld_cuenta_banco1 As String,  _
                    ByVal fld_nombre_banco2 As String,  _
                    ByVal fld_cuenta_banco2 As String,  _
                    ByVal fld_otra_informacion As String,  _
                    ByVal fld_nombre_con_gar As String,  _
                    ByVal fld_apodo_con_gar As String,  _
                    ByVal fld_cedula_con_gar As String,  _
                    ByVal fld_telefono_con_gar As String,  _
                    ByVal fld_celular_con_gar As String,  _
                    ByVal fld_edad As Integer,  _
                    ByVal fld_estado_civil As String,  _
                    ByVal fld_edad_gar As Integer,  _
                    ByVal fld_estado_civil_gar As String,  _
                    ByVal fld_ocupacion_cliente As String,  _
                    ByVal fld_ocupacion_gar As String,  _
                    ByVal fld_sector_id As Integer,  _
                    ByVal fld_sector As String,  _
                    ByVal fld_categoria As String,  _
                    ByVal fld_limite As Double,  _
                    ByVal Puesto As String,  _
                    ByVal TimpoTrabajo As String,  _
                    ByVal ReferidoPor As String,  _
                    ByVal Oriundo As String,  _
                    ByVal DataCredito As Integer,  _
                    ByVal IDCliente As Integer,  _
                    ByVal CuentaNo As String,  _
                    ByVal FechaApertura As Date,  _
                    ByVal FechaCancelada As Date,  _
                    ByVal TasaIteres As Double,  _
                    ByVal SaldoCapital As Double,  _
                    ByVal SaldoInteres As Double,  _
                    ByVal SaldoRetiros As Double,  _
                    ByVal Usuario As String,  _
                    ByVal Nota As String,  _
                    ByVal Categoria As Integer,  _
                    ByVal Estado As String,  _
                    ByVal Descripcion As String) As view_ahorrosRow
            Dim rowview_ahorrosRow As view_ahorrosRow = CType(Me.NewRow,view_ahorrosRow)
            rowview_ahorrosRow.ItemArray = New Object() {Nothing, TipoDocumento, fld_FullName, fld_apodo, fld_Identity, fld_Phone, fld_Phone2, fld_Address, fld_City_id, fld_City, fld_Status, fld_bce, fld_cod_zona, fld_zona, fld_nombre_con, fld_apodo_con, fld_cedula_con, fld_telefono_con, fld_celular_con, fld_ref_personales_cliente, fld_ref_comerciales_cliente, fld_nombre_gar, fld_apodo_gar, fld_cedula_gar, fld_telefono_gar, fld_celular_gar, fld_direccion_gar, fld_ciudad_gar, fld_ref_personales_gar, fld_ref_comerciales_gar, fld_ingresos_mesuales, fld_nombre_banco1, fld_cuenta_banco1, fld_nombre_banco2, fld_cuenta_banco2, fld_otra_informacion, fld_nombre_con_gar, fld_apodo_con_gar, fld_cedula_con_gar, fld_telefono_con_gar, fld_celular_con_gar, fld_edad, fld_estado_civil, fld_edad_gar, fld_estado_civil_gar, fld_ocupacion_cliente, fld_ocupacion_gar, fld_sector_id, fld_sector, fld_categoria, fld_limite, Puesto, TimpoTrabajo, ReferidoPor, Oriundo, DataCredito, Nothing, IDCliente, CuentaNo, FechaApertura, FechaCancelada, TasaIteres, SaldoCapital, SaldoInteres, SaldoRetiros, Usuario, Nota, Categoria, Estado, Nothing, Descripcion}
            Me.Rows.Add(rowview_ahorrosRow)
            Return rowview_ahorrosRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As view_ahorrosDataTable = CType(MyBase.Clone,view_ahorrosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New view_ahorrosDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnTipoDocumento = Me.Columns("TipoDocumento")
            Me.columnfld_FullName = Me.Columns("fld_FullName")
            Me.columnfld_apodo = Me.Columns("fld_apodo")
            Me.columnfld_Identity = Me.Columns("fld_Identity")
            Me.columnfld_Phone = Me.Columns("fld_Phone")
            Me.columnfld_Phone2 = Me.Columns("fld_Phone2")
            Me.columnfld_Address = Me.Columns("fld_Address")
            Me.columnfld_City_id = Me.Columns("fld_City_id")
            Me.columnfld_City = Me.Columns("fld_City")
            Me.columnfld_Status = Me.Columns("fld_Status")
            Me.columnfld_bce = Me.Columns("fld_bce")
            Me.columnfld_cod_zona = Me.Columns("fld_cod_zona")
            Me.columnfld_zona = Me.Columns("fld_zona")
            Me.columnfld_nombre_con = Me.Columns("fld_nombre_con")
            Me.columnfld_apodo_con = Me.Columns("fld_apodo_con")
            Me.columnfld_cedula_con = Me.Columns("fld_cedula_con")
            Me.columnfld_telefono_con = Me.Columns("fld_telefono_con")
            Me.columnfld_celular_con = Me.Columns("fld_celular_con")
            Me.columnfld_ref_personales_cliente = Me.Columns("fld_ref_personales_cliente")
            Me.columnfld_ref_comerciales_cliente = Me.Columns("fld_ref_comerciales_cliente")
            Me.columnfld_nombre_gar = Me.Columns("fld_nombre_gar")
            Me.columnfld_apodo_gar = Me.Columns("fld_apodo_gar")
            Me.columnfld_cedula_gar = Me.Columns("fld_cedula_gar")
            Me.columnfld_telefono_gar = Me.Columns("fld_telefono_gar")
            Me.columnfld_celular_gar = Me.Columns("fld_celular_gar")
            Me.columnfld_direccion_gar = Me.Columns("fld_direccion_gar")
            Me.columnfld_ciudad_gar = Me.Columns("fld_ciudad_gar")
            Me.columnfld_ref_personales_gar = Me.Columns("fld_ref_personales_gar")
            Me.columnfld_ref_comerciales_gar = Me.Columns("fld_ref_comerciales_gar")
            Me.columnfld_ingresos_mesuales = Me.Columns("fld_ingresos_mesuales")
            Me.columnfld_nombre_banco1 = Me.Columns("fld_nombre_banco1")
            Me.columnfld_cuenta_banco1 = Me.Columns("fld_cuenta_banco1")
            Me.columnfld_nombre_banco2 = Me.Columns("fld_nombre_banco2")
            Me.columnfld_cuenta_banco2 = Me.Columns("fld_cuenta_banco2")
            Me.columnfld_otra_informacion = Me.Columns("fld_otra_informacion")
            Me.columnfld_nombre_con_gar = Me.Columns("fld_nombre_con_gar")
            Me.columnfld_apodo_con_gar = Me.Columns("fld_apodo_con_gar")
            Me.columnfld_cedula_con_gar = Me.Columns("fld_cedula_con_gar")
            Me.columnfld_telefono_con_gar = Me.Columns("fld_telefono_con_gar")
            Me.columnfld_celular_con_gar = Me.Columns("fld_celular_con_gar")
            Me.columnfld_edad = Me.Columns("fld_edad")
            Me.columnfld_estado_civil = Me.Columns("fld_estado_civil")
            Me.columnfld_edad_gar = Me.Columns("fld_edad_gar")
            Me.columnfld_estado_civil_gar = Me.Columns("fld_estado_civil_gar")
            Me.columnfld_ocupacion_cliente = Me.Columns("fld_ocupacion_cliente")
            Me.columnfld_ocupacion_gar = Me.Columns("fld_ocupacion_gar")
            Me.columnfld_sector_id = Me.Columns("fld_sector_id")
            Me.columnfld_sector = Me.Columns("fld_sector")
            Me.columnfld_categoria = Me.Columns("fld_categoria")
            Me.columnfld_limite = Me.Columns("fld_limite")
            Me.columnPuesto = Me.Columns("Puesto")
            Me.columnTimpoTrabajo = Me.Columns("TimpoTrabajo")
            Me.columnReferidoPor = Me.Columns("ReferidoPor")
            Me.columnOriundo = Me.Columns("Oriundo")
            Me.columnDataCredito = Me.Columns("DataCredito")
            Me.column_tbl_ahorros_cuentas_ID = Me.Columns("tbl_ahorros_cuentas.ID")
            Me.columnIDCliente = Me.Columns("IDCliente")
            Me.columnCuentaNo = Me.Columns("CuentaNo")
            Me.columnFechaApertura = Me.Columns("FechaApertura")
            Me.columnFechaCancelada = Me.Columns("FechaCancelada")
            Me.columnTasaIteres = Me.Columns("TasaIteres")
            Me.columnSaldoCapital = Me.Columns("SaldoCapital")
            Me.columnSaldoInteres = Me.Columns("SaldoInteres")
            Me.columnSaldoRetiros = Me.Columns("SaldoRetiros")
            Me.columnUsuario = Me.Columns("Usuario")
            Me.columnNota = Me.Columns("Nota")
            Me.columnCategoria = Me.Columns("Categoria")
            Me.columnEstado = Me.Columns("Estado")
            Me.column_tbl_ahorros_categorias_ID = Me.Columns("tbl_ahorros_categorias.ID")
            Me.columnDescripcion = Me.Columns("Descripcion")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnTipoDocumento = New DataColumn("TipoDocumento", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTipoDocumento)
            Me.columnfld_FullName = New DataColumn("fld_FullName", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_FullName)
            Me.columnfld_apodo = New DataColumn("fld_apodo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo)
            Me.columnfld_Identity = New DataColumn("fld_Identity", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Identity)
            Me.columnfld_Phone = New DataColumn("fld_Phone", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone)
            Me.columnfld_Phone2 = New DataColumn("fld_Phone2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Phone2)
            Me.columnfld_Address = New DataColumn("fld_Address", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Address)
            Me.columnfld_City_id = New DataColumn("fld_City_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_City_id)
            Me.columnfld_City = New DataColumn("fld_City", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_City)
            Me.columnfld_Status = New DataColumn("fld_Status", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Status)
            Me.columnfld_bce = New DataColumn("fld_bce", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_bce)
            Me.columnfld_cod_zona = New DataColumn("fld_cod_zona", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cod_zona)
            Me.columnfld_zona = New DataColumn("fld_zona", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_zona)
            Me.columnfld_nombre_con = New DataColumn("fld_nombre_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con)
            Me.columnfld_apodo_con = New DataColumn("fld_apodo_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con)
            Me.columnfld_cedula_con = New DataColumn("fld_cedula_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con)
            Me.columnfld_telefono_con = New DataColumn("fld_telefono_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con)
            Me.columnfld_celular_con = New DataColumn("fld_celular_con", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con)
            Me.columnfld_ref_personales_cliente = New DataColumn("fld_ref_personales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_cliente)
            Me.columnfld_ref_comerciales_cliente = New DataColumn("fld_ref_comerciales_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_cliente)
            Me.columnfld_nombre_gar = New DataColumn("fld_nombre_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_gar)
            Me.columnfld_apodo_gar = New DataColumn("fld_apodo_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_gar)
            Me.columnfld_cedula_gar = New DataColumn("fld_cedula_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_gar)
            Me.columnfld_telefono_gar = New DataColumn("fld_telefono_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_gar)
            Me.columnfld_celular_gar = New DataColumn("fld_celular_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_gar)
            Me.columnfld_direccion_gar = New DataColumn("fld_direccion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_direccion_gar)
            Me.columnfld_ciudad_gar = New DataColumn("fld_ciudad_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ciudad_gar)
            Me.columnfld_ref_personales_gar = New DataColumn("fld_ref_personales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_personales_gar)
            Me.columnfld_ref_comerciales_gar = New DataColumn("fld_ref_comerciales_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ref_comerciales_gar)
            Me.columnfld_ingresos_mesuales = New DataColumn("fld_ingresos_mesuales", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ingresos_mesuales)
            Me.columnfld_nombre_banco1 = New DataColumn("fld_nombre_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco1)
            Me.columnfld_cuenta_banco1 = New DataColumn("fld_cuenta_banco1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco1)
            Me.columnfld_nombre_banco2 = New DataColumn("fld_nombre_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_banco2)
            Me.columnfld_cuenta_banco2 = New DataColumn("fld_cuenta_banco2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cuenta_banco2)
            Me.columnfld_otra_informacion = New DataColumn("fld_otra_informacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_otra_informacion)
            Me.columnfld_nombre_con_gar = New DataColumn("fld_nombre_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_nombre_con_gar)
            Me.columnfld_apodo_con_gar = New DataColumn("fld_apodo_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_apodo_con_gar)
            Me.columnfld_cedula_con_gar = New DataColumn("fld_cedula_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cedula_con_gar)
            Me.columnfld_telefono_con_gar = New DataColumn("fld_telefono_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_telefono_con_gar)
            Me.columnfld_celular_con_gar = New DataColumn("fld_celular_con_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_celular_con_gar)
            Me.columnfld_edad = New DataColumn("fld_edad", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad)
            Me.columnfld_estado_civil = New DataColumn("fld_estado_civil", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil)
            Me.columnfld_edad_gar = New DataColumn("fld_edad_gar", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_edad_gar)
            Me.columnfld_estado_civil_gar = New DataColumn("fld_estado_civil_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estado_civil_gar)
            Me.columnfld_ocupacion_cliente = New DataColumn("fld_ocupacion_cliente", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ocupacion_cliente)
            Me.columnfld_ocupacion_gar = New DataColumn("fld_ocupacion_gar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_ocupacion_gar)
            Me.columnfld_sector_id = New DataColumn("fld_sector_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_sector_id)
            Me.columnfld_sector = New DataColumn("fld_sector", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_sector)
            Me.columnfld_categoria = New DataColumn("fld_categoria", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_categoria)
            Me.columnfld_limite = New DataColumn("fld_limite", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_limite)
            Me.columnPuesto = New DataColumn("Puesto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPuesto)
            Me.columnTimpoTrabajo = New DataColumn("TimpoTrabajo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTimpoTrabajo)
            Me.columnReferidoPor = New DataColumn("ReferidoPor", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnReferidoPor)
            Me.columnOriundo = New DataColumn("Oriundo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnOriundo)
            Me.columnDataCredito = New DataColumn("DataCredito", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDataCredito)
            Me.column_tbl_ahorros_cuentas_ID = New DataColumn("tbl_ahorros_cuentas.ID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column_tbl_ahorros_cuentas_ID)
            Me.columnIDCliente = New DataColumn("IDCliente", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnIDCliente)
            Me.columnCuentaNo = New DataColumn("CuentaNo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCuentaNo)
            Me.columnFechaApertura = New DataColumn("FechaApertura", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaApertura)
            Me.columnFechaCancelada = New DataColumn("FechaCancelada", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaCancelada)
            Me.columnTasaIteres = New DataColumn("TasaIteres", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTasaIteres)
            Me.columnSaldoCapital = New DataColumn("SaldoCapital", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSaldoCapital)
            Me.columnSaldoInteres = New DataColumn("SaldoInteres", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSaldoInteres)
            Me.columnSaldoRetiros = New DataColumn("SaldoRetiros", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSaldoRetiros)
            Me.columnUsuario = New DataColumn("Usuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnUsuario)
            Me.columnNota = New DataColumn("Nota", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNota)
            Me.columnCategoria = New DataColumn("Categoria", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCategoria)
            Me.columnEstado = New DataColumn("Estado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnEstado)
            Me.column_tbl_ahorros_categorias_ID = New DataColumn("tbl_ahorros_categorias.ID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column_tbl_ahorros_categorias_ID)
            Me.columnDescripcion = New DataColumn("Descripcion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDescripcion)
            Me.columnfld_id.AutoIncrement = true
            Me.column_tbl_ahorros_cuentas_ID.AutoIncrement = true
            Me.column_tbl_ahorros_categorias_ID.AutoIncrement = true
        End Sub
        
        Public Function Newview_ahorrosRow() As view_ahorrosRow
            Return CType(Me.NewRow,view_ahorrosRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New view_ahorrosRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(view_ahorrosRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.view_ahorrosRowChangedEvent) Is Nothing) Then
                RaiseEvent view_ahorrosRowChanged(Me, New view_ahorrosRowChangeEvent(CType(e.Row,view_ahorrosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.view_ahorrosRowChangingEvent) Is Nothing) Then
                RaiseEvent view_ahorrosRowChanging(Me, New view_ahorrosRowChangeEvent(CType(e.Row,view_ahorrosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.view_ahorrosRowDeletedEvent) Is Nothing) Then
                RaiseEvent view_ahorrosRowDeleted(Me, New view_ahorrosRowChangeEvent(CType(e.Row,view_ahorrosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.view_ahorrosRowDeletingEvent) Is Nothing) Then
                RaiseEvent view_ahorrosRowDeleting(Me, New view_ahorrosRowChangeEvent(CType(e.Row,view_ahorrosRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeview_ahorrosRow(ByVal row As view_ahorrosRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_ahorrosRow
        Inherits DataRow
        
        Private tableview_ahorros As view_ahorrosDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableview_ahorros = CType(Me.Table,view_ahorrosDataTable)
        End Sub
        
        Public Property fld_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_idColumn) = value
            End Set
        End Property
        
        Public Property TipoDocumento As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.TipoDocumentoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.TipoDocumentoColumn) = value
            End Set
        End Property
        
        Public Property fld_FullName As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_FullNameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_FullNameColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_apodoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_apodoColumn) = value
            End Set
        End Property
        
        Public Property fld_Identity As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_IdentityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_IdentityColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_PhoneColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_PhoneColumn) = value
            End Set
        End Property
        
        Public Property fld_Phone2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_Phone2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_Phone2Column) = value
            End Set
        End Property
        
        Public Property fld_Address As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_AddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_AddressColumn) = value
            End Set
        End Property
        
        Public Property fld_City_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_City_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_City_idColumn) = value
            End Set
        End Property
        
        Public Property fld_City As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_CityColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_CityColumn) = value
            End Set
        End Property
        
        Public Property fld_Status As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_StatusColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_StatusColumn) = value
            End Set
        End Property
        
        Public Property fld_bce As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_bceColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_bceColumn) = value
            End Set
        End Property
        
        Public Property fld_cod_zona As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_cod_zonaColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_cod_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_zona As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_zonaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_zonaColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_nombre_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_nombre_conColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_apodo_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_apodo_conColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_cedula_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_cedula_conColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_telefono_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_telefono_conColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_celular_conColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_celular_conColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_ref_personales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_ref_personales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_ref_comerciales_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_ref_comerciales_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_nombre_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_nombre_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_apodo_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_apodo_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_cedula_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_cedula_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_telefono_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_telefono_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_celular_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_celular_garColumn) = value
            End Set
        End Property
        
        Public Property fld_direccion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_direccion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_direccion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ciudad_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_ciudad_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_ciudad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_personales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_ref_personales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_ref_personales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ref_comerciales_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_ref_comerciales_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_ref_comerciales_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ingresos_mesuales As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_ingresos_mesualesColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_ingresos_mesualesColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_nombre_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_nombre_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco1 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_cuenta_banco1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_cuenta_banco1Column) = value
            End Set
        End Property
        
        Public Property fld_nombre_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_nombre_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_nombre_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_cuenta_banco2 As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_cuenta_banco2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_cuenta_banco2Column) = value
            End Set
        End Property
        
        Public Property fld_otra_informacion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_otra_informacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_otra_informacionColumn) = value
            End Set
        End Property
        
        Public Property fld_nombre_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_nombre_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_nombre_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_apodo_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_apodo_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_apodo_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_cedula_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_cedula_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_cedula_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_telefono_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_telefono_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_telefono_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_celular_con_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_celular_con_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_celular_con_garColumn) = value
            End Set
        End Property
        
        Public Property fld_edad As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_edadColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_edadColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_estado_civilColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_estado_civilColumn) = value
            End Set
        End Property
        
        Public Property fld_edad_gar As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_edad_garColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_edad_garColumn) = value
            End Set
        End Property
        
        Public Property fld_estado_civil_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_estado_civil_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_estado_civil_garColumn) = value
            End Set
        End Property
        
        Public Property fld_ocupacion_cliente As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_ocupacion_clienteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_ocupacion_clienteColumn) = value
            End Set
        End Property
        
        Public Property fld_ocupacion_gar As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_ocupacion_garColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_ocupacion_garColumn) = value
            End Set
        End Property
        
        Public Property fld_sector_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_sector_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_sector_idColumn) = value
            End Set
        End Property
        
        Public Property fld_sector As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_sectorColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_sectorColumn) = value
            End Set
        End Property
        
        Public Property fld_categoria As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_categoriaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_categoriaColumn) = value
            End Set
        End Property
        
        Public Property fld_limite As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.fld_limiteColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.fld_limiteColumn) = value
            End Set
        End Property
        
        Public Property Puesto As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.PuestoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.PuestoColumn) = value
            End Set
        End Property
        
        Public Property TimpoTrabajo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.TimpoTrabajoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.TimpoTrabajoColumn) = value
            End Set
        End Property
        
        Public Property ReferidoPor As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.ReferidoPorColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.ReferidoPorColumn) = value
            End Set
        End Property
        
        Public Property Oriundo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.OriundoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.OriundoColumn) = value
            End Set
        End Property
        
        Public Property DataCredito As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.DataCreditoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.DataCreditoColumn) = value
            End Set
        End Property
        
        Public Property _tbl_ahorros_cuentas_ID As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros._tbl_ahorros_cuentas_IDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros._tbl_ahorros_cuentas_IDColumn) = value
            End Set
        End Property
        
        Public Property IDCliente As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.IDClienteColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.IDClienteColumn) = value
            End Set
        End Property
        
        Public Property CuentaNo As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.CuentaNoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.CuentaNoColumn) = value
            End Set
        End Property
        
        Public Property FechaApertura As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.FechaAperturaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.FechaAperturaColumn) = value
            End Set
        End Property
        
        Public Property FechaCancelada As Date
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.FechaCanceladaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.FechaCanceladaColumn) = value
            End Set
        End Property
        
        Public Property TasaIteres As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.TasaIteresColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.TasaIteresColumn) = value
            End Set
        End Property
        
        Public Property SaldoCapital As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.SaldoCapitalColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.SaldoCapitalColumn) = value
            End Set
        End Property
        
        Public Property SaldoInteres As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.SaldoInteresColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.SaldoInteresColumn) = value
            End Set
        End Property
        
        Public Property SaldoRetiros As Double
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.SaldoRetirosColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.SaldoRetirosColumn) = value
            End Set
        End Property
        
        Public Property Usuario As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.UsuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.UsuarioColumn) = value
            End Set
        End Property
        
        Public Property Nota As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.NotaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.NotaColumn) = value
            End Set
        End Property
        
        Public Property Categoria As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.CategoriaColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.CategoriaColumn) = value
            End Set
        End Property
        
        Public Property Estado As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.EstadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.EstadoColumn) = value
            End Set
        End Property
        
        Public Property _tbl_ahorros_categorias_ID As Integer
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros._tbl_ahorros_categorias_IDColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros._tbl_ahorros_categorias_IDColumn) = value
            End Set
        End Property
        
        Public Property Descripcion As String
            Get
                Try 
                    Return CType(Me(Me.tableview_ahorros.DescripcionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableview_ahorros.DescripcionColumn) = value
            End Set
        End Property
        
        Public Function Isfld_idNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_idColumn)
        End Function
        
        Public Sub Setfld_idNull()
            Me(Me.tableview_ahorros.fld_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTipoDocumentoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.TipoDocumentoColumn)
        End Function
        
        Public Sub SetTipoDocumentoNull()
            Me(Me.tableview_ahorros.TipoDocumentoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_FullNameNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_FullNameColumn)
        End Function
        
        Public Sub Setfld_FullNameNull()
            Me(Me.tableview_ahorros.fld_FullNameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_apodoColumn)
        End Function
        
        Public Sub Setfld_apodoNull()
            Me(Me.tableview_ahorros.fld_apodoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_IdentityNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_IdentityColumn)
        End Function
        
        Public Sub Setfld_IdentityNull()
            Me(Me.tableview_ahorros.fld_IdentityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_PhoneNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_PhoneColumn)
        End Function
        
        Public Sub Setfld_PhoneNull()
            Me(Me.tableview_ahorros.fld_PhoneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_Phone2Null() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_Phone2Column)
        End Function
        
        Public Sub Setfld_Phone2Null()
            Me(Me.tableview_ahorros.fld_Phone2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_AddressNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_AddressColumn)
        End Function
        
        Public Sub Setfld_AddressNull()
            Me(Me.tableview_ahorros.fld_AddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_City_idNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_City_idColumn)
        End Function
        
        Public Sub Setfld_City_idNull()
            Me(Me.tableview_ahorros.fld_City_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_CityNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_CityColumn)
        End Function
        
        Public Sub Setfld_CityNull()
            Me(Me.tableview_ahorros.fld_CityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_StatusNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_StatusColumn)
        End Function
        
        Public Sub Setfld_StatusNull()
            Me(Me.tableview_ahorros.fld_StatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_bceNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_bceColumn)
        End Function
        
        Public Sub Setfld_bceNull()
            Me(Me.tableview_ahorros.fld_bceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cod_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_cod_zonaColumn)
        End Function
        
        Public Sub Setfld_cod_zonaNull()
            Me(Me.tableview_ahorros.fld_cod_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_zonaNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_zonaColumn)
        End Function
        
        Public Sub Setfld_zonaNull()
            Me(Me.tableview_ahorros.fld_zonaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_nombre_conColumn)
        End Function
        
        Public Sub Setfld_nombre_conNull()
            Me(Me.tableview_ahorros.fld_nombre_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_apodo_conColumn)
        End Function
        
        Public Sub Setfld_apodo_conNull()
            Me(Me.tableview_ahorros.fld_apodo_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_cedula_conColumn)
        End Function
        
        Public Sub Setfld_cedula_conNull()
            Me(Me.tableview_ahorros.fld_cedula_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_telefono_conColumn)
        End Function
        
        Public Sub Setfld_telefono_conNull()
            Me(Me.tableview_ahorros.fld_telefono_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_conNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_celular_conColumn)
        End Function
        
        Public Sub Setfld_celular_conNull()
            Me(Me.tableview_ahorros.fld_celular_conColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_ref_personales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_personales_clienteNull()
            Me(Me.tableview_ahorros.fld_ref_personales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_ref_comerciales_clienteColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_clienteNull()
            Me(Me.tableview_ahorros.fld_ref_comerciales_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_nombre_garColumn)
        End Function
        
        Public Sub Setfld_nombre_garNull()
            Me(Me.tableview_ahorros.fld_nombre_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_apodo_garColumn)
        End Function
        
        Public Sub Setfld_apodo_garNull()
            Me(Me.tableview_ahorros.fld_apodo_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_cedula_garColumn)
        End Function
        
        Public Sub Setfld_cedula_garNull()
            Me(Me.tableview_ahorros.fld_cedula_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_telefono_garColumn)
        End Function
        
        Public Sub Setfld_telefono_garNull()
            Me(Me.tableview_ahorros.fld_telefono_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_celular_garColumn)
        End Function
        
        Public Sub Setfld_celular_garNull()
            Me(Me.tableview_ahorros.fld_celular_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_direccion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_direccion_garColumn)
        End Function
        
        Public Sub Setfld_direccion_garNull()
            Me(Me.tableview_ahorros.fld_direccion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ciudad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_ciudad_garColumn)
        End Function
        
        Public Sub Setfld_ciudad_garNull()
            Me(Me.tableview_ahorros.fld_ciudad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_personales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_ref_personales_garColumn)
        End Function
        
        Public Sub Setfld_ref_personales_garNull()
            Me(Me.tableview_ahorros.fld_ref_personales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ref_comerciales_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_ref_comerciales_garColumn)
        End Function
        
        Public Sub Setfld_ref_comerciales_garNull()
            Me(Me.tableview_ahorros.fld_ref_comerciales_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ingresos_mesualesNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_ingresos_mesualesColumn)
        End Function
        
        Public Sub Setfld_ingresos_mesualesNull()
            Me(Me.tableview_ahorros.fld_ingresos_mesualesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_nombre_banco1Column)
        End Function
        
        Public Sub Setfld_nombre_banco1Null()
            Me(Me.tableview_ahorros.fld_nombre_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco1Null() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_cuenta_banco1Column)
        End Function
        
        Public Sub Setfld_cuenta_banco1Null()
            Me(Me.tableview_ahorros.fld_cuenta_banco1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_nombre_banco2Column)
        End Function
        
        Public Sub Setfld_nombre_banco2Null()
            Me(Me.tableview_ahorros.fld_nombre_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cuenta_banco2Null() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_cuenta_banco2Column)
        End Function
        
        Public Sub Setfld_cuenta_banco2Null()
            Me(Me.tableview_ahorros.fld_cuenta_banco2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_otra_informacionNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_otra_informacionColumn)
        End Function
        
        Public Sub Setfld_otra_informacionNull()
            Me(Me.tableview_ahorros.fld_otra_informacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_nombre_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_nombre_con_garColumn)
        End Function
        
        Public Sub Setfld_nombre_con_garNull()
            Me(Me.tableview_ahorros.fld_nombre_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_apodo_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_apodo_con_garColumn)
        End Function
        
        Public Sub Setfld_apodo_con_garNull()
            Me(Me.tableview_ahorros.fld_apodo_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_cedula_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_cedula_con_garColumn)
        End Function
        
        Public Sub Setfld_cedula_con_garNull()
            Me(Me.tableview_ahorros.fld_cedula_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_telefono_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_telefono_con_garColumn)
        End Function
        
        Public Sub Setfld_telefono_con_garNull()
            Me(Me.tableview_ahorros.fld_telefono_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_celular_con_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_celular_con_garColumn)
        End Function
        
        Public Sub Setfld_celular_con_garNull()
            Me(Me.tableview_ahorros.fld_celular_con_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edadNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_edadColumn)
        End Function
        
        Public Sub Setfld_edadNull()
            Me(Me.tableview_ahorros.fld_edadColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civilNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_estado_civilColumn)
        End Function
        
        Public Sub Setfld_estado_civilNull()
            Me(Me.tableview_ahorros.fld_estado_civilColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_edad_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_edad_garColumn)
        End Function
        
        Public Sub Setfld_edad_garNull()
            Me(Me.tableview_ahorros.fld_edad_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estado_civil_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_estado_civil_garColumn)
        End Function
        
        Public Sub Setfld_estado_civil_garNull()
            Me(Me.tableview_ahorros.fld_estado_civil_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ocupacion_clienteNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_ocupacion_clienteColumn)
        End Function
        
        Public Sub Setfld_ocupacion_clienteNull()
            Me(Me.tableview_ahorros.fld_ocupacion_clienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_ocupacion_garNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_ocupacion_garColumn)
        End Function
        
        Public Sub Setfld_ocupacion_garNull()
            Me(Me.tableview_ahorros.fld_ocupacion_garColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_sector_idNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_sector_idColumn)
        End Function
        
        Public Sub Setfld_sector_idNull()
            Me(Me.tableview_ahorros.fld_sector_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_sectorNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_sectorColumn)
        End Function
        
        Public Sub Setfld_sectorNull()
            Me(Me.tableview_ahorros.fld_sectorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_categoriaNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_categoriaColumn)
        End Function
        
        Public Sub Setfld_categoriaNull()
            Me(Me.tableview_ahorros.fld_categoriaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_limiteNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.fld_limiteColumn)
        End Function
        
        Public Sub Setfld_limiteNull()
            Me(Me.tableview_ahorros.fld_limiteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsPuestoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.PuestoColumn)
        End Function
        
        Public Sub SetPuestoNull()
            Me(Me.tableview_ahorros.PuestoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTimpoTrabajoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.TimpoTrabajoColumn)
        End Function
        
        Public Sub SetTimpoTrabajoNull()
            Me(Me.tableview_ahorros.TimpoTrabajoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsReferidoPorNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.ReferidoPorColumn)
        End Function
        
        Public Sub SetReferidoPorNull()
            Me(Me.tableview_ahorros.ReferidoPorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsOriundoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.OriundoColumn)
        End Function
        
        Public Sub SetOriundoNull()
            Me(Me.tableview_ahorros.OriundoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDataCreditoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.DataCreditoColumn)
        End Function
        
        Public Sub SetDataCreditoNull()
            Me(Me.tableview_ahorros.DataCreditoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Is_tbl_ahorros_cuentas_IDNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros._tbl_ahorros_cuentas_IDColumn)
        End Function
        
        Public Sub Set_tbl_ahorros_cuentas_IDNull()
            Me(Me.tableview_ahorros._tbl_ahorros_cuentas_IDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsIDClienteNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.IDClienteColumn)
        End Function
        
        Public Sub SetIDClienteNull()
            Me(Me.tableview_ahorros.IDClienteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCuentaNoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.CuentaNoColumn)
        End Function
        
        Public Sub SetCuentaNoNull()
            Me(Me.tableview_ahorros.CuentaNoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaAperturaNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.FechaAperturaColumn)
        End Function
        
        Public Sub SetFechaAperturaNull()
            Me(Me.tableview_ahorros.FechaAperturaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaCanceladaNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.FechaCanceladaColumn)
        End Function
        
        Public Sub SetFechaCanceladaNull()
            Me(Me.tableview_ahorros.FechaCanceladaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTasaIteresNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.TasaIteresColumn)
        End Function
        
        Public Sub SetTasaIteresNull()
            Me(Me.tableview_ahorros.TasaIteresColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSaldoCapitalNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.SaldoCapitalColumn)
        End Function
        
        Public Sub SetSaldoCapitalNull()
            Me(Me.tableview_ahorros.SaldoCapitalColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSaldoInteresNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.SaldoInteresColumn)
        End Function
        
        Public Sub SetSaldoInteresNull()
            Me(Me.tableview_ahorros.SaldoInteresColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSaldoRetirosNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.SaldoRetirosColumn)
        End Function
        
        Public Sub SetSaldoRetirosNull()
            Me(Me.tableview_ahorros.SaldoRetirosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsUsuarioNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.UsuarioColumn)
        End Function
        
        Public Sub SetUsuarioNull()
            Me(Me.tableview_ahorros.UsuarioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNotaNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.NotaColumn)
        End Function
        
        Public Sub SetNotaNull()
            Me(Me.tableview_ahorros.NotaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCategoriaNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.CategoriaColumn)
        End Function
        
        Public Sub SetCategoriaNull()
            Me(Me.tableview_ahorros.CategoriaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsEstadoNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.EstadoColumn)
        End Function
        
        Public Sub SetEstadoNull()
            Me(Me.tableview_ahorros.EstadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Is_tbl_ahorros_categorias_IDNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros._tbl_ahorros_categorias_IDColumn)
        End Function
        
        Public Sub Set_tbl_ahorros_categorias_IDNull()
            Me(Me.tableview_ahorros._tbl_ahorros_categorias_IDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDescripcionNull() As Boolean
            Return Me.IsNull(Me.tableview_ahorros.DescripcionColumn)
        End Function
        
        Public Sub SetDescripcionNull()
            Me(Me.tableview_ahorros.DescripcionColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class view_ahorrosRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As view_ahorrosRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As view_ahorrosRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As view_ahorrosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_profiledocumentDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfldCompanyID As DataColumn
        
        Private columnfldCompany As DataColumn
        
        Private columnfldAddress As DataColumn
        
        Private columnfldPhone As DataColumn
        
        Private columnfldRnc As DataColumn
        
        Private columnfldPassDescuento As DataColumn
        
        Private columnfldPassConfig As DataColumn
        
        Private columnfldPassAdmin As DataColumn
        
        Private columnfldNotaRecepcion As DataColumn
        
        Private columnfldDiasVenceFC As DataColumn
        
        Private columnfldColorForm As DataColumn
        
        Private columnfoto As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_profiledocument")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fldCompanyIDColumn As DataColumn
            Get
                Return Me.columnfldCompanyID
            End Get
        End Property
        
        Friend ReadOnly Property fldCompanyColumn As DataColumn
            Get
                Return Me.columnfldCompany
            End Get
        End Property
        
        Friend ReadOnly Property fldAddressColumn As DataColumn
            Get
                Return Me.columnfldAddress
            End Get
        End Property
        
        Friend ReadOnly Property fldPhoneColumn As DataColumn
            Get
                Return Me.columnfldPhone
            End Get
        End Property
        
        Friend ReadOnly Property fldRncColumn As DataColumn
            Get
                Return Me.columnfldRnc
            End Get
        End Property
        
        Friend ReadOnly Property fldPassDescuentoColumn As DataColumn
            Get
                Return Me.columnfldPassDescuento
            End Get
        End Property
        
        Friend ReadOnly Property fldPassConfigColumn As DataColumn
            Get
                Return Me.columnfldPassConfig
            End Get
        End Property
        
        Friend ReadOnly Property fldPassAdminColumn As DataColumn
            Get
                Return Me.columnfldPassAdmin
            End Get
        End Property
        
        Friend ReadOnly Property fldNotaRecepcionColumn As DataColumn
            Get
                Return Me.columnfldNotaRecepcion
            End Get
        End Property
        
        Friend ReadOnly Property fldDiasVenceFCColumn As DataColumn
            Get
                Return Me.columnfldDiasVenceFC
            End Get
        End Property
        
        Friend ReadOnly Property fldColorFormColumn As DataColumn
            Get
                Return Me.columnfldColorForm
            End Get
        End Property
        
        Friend ReadOnly Property fotoColumn As DataColumn
            Get
                Return Me.columnfoto
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_profiledocumentRow
            Get
                Return CType(Me.Rows(index),tbl_profiledocumentRow)
            End Get
        End Property
        
        Public Event tbl_profiledocumentRowChanged As tbl_profiledocumentRowChangeEventHandler
        
        Public Event tbl_profiledocumentRowChanging As tbl_profiledocumentRowChangeEventHandler
        
        Public Event tbl_profiledocumentRowDeleted As tbl_profiledocumentRowChangeEventHandler
        
        Public Event tbl_profiledocumentRowDeleting As tbl_profiledocumentRowChangeEventHandler
        
        Public Overloads Sub Addtbl_profiledocumentRow(ByVal row As tbl_profiledocumentRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_profiledocumentRow(ByVal fldCompany As String, ByVal fldAddress As String, ByVal fldPhone As String, ByVal fldRnc As String, ByVal fldPassDescuento As String, ByVal fldPassConfig As String, ByVal fldPassAdmin As String, ByVal fldNotaRecepcion As String, ByVal fldDiasVenceFC As String, ByVal fldColorForm As String, ByVal foto() As Byte) As tbl_profiledocumentRow
            Dim rowtbl_profiledocumentRow As tbl_profiledocumentRow = CType(Me.NewRow,tbl_profiledocumentRow)
            rowtbl_profiledocumentRow.ItemArray = New Object() {Nothing, fldCompany, fldAddress, fldPhone, fldRnc, fldPassDescuento, fldPassConfig, fldPassAdmin, fldNotaRecepcion, fldDiasVenceFC, fldColorForm, foto}
            Me.Rows.Add(rowtbl_profiledocumentRow)
            Return rowtbl_profiledocumentRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_profiledocumentDataTable = CType(MyBase.Clone,tbl_profiledocumentDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_profiledocumentDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfldCompanyID = Me.Columns("fldCompanyID")
            Me.columnfldCompany = Me.Columns("fldCompany")
            Me.columnfldAddress = Me.Columns("fldAddress")
            Me.columnfldPhone = Me.Columns("fldPhone")
            Me.columnfldRnc = Me.Columns("fldRnc")
            Me.columnfldPassDescuento = Me.Columns("fldPassDescuento")
            Me.columnfldPassConfig = Me.Columns("fldPassConfig")
            Me.columnfldPassAdmin = Me.Columns("fldPassAdmin")
            Me.columnfldNotaRecepcion = Me.Columns("fldNotaRecepcion")
            Me.columnfldDiasVenceFC = Me.Columns("fldDiasVenceFC")
            Me.columnfldColorForm = Me.Columns("fldColorForm")
            Me.columnfoto = Me.Columns("foto")
        End Sub
        
        Private Sub InitClass()
            Me.columnfldCompanyID = New DataColumn("fldCompanyID", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldCompanyID)
            Me.columnfldCompany = New DataColumn("fldCompany", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldCompany)
            Me.columnfldAddress = New DataColumn("fldAddress", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldAddress)
            Me.columnfldPhone = New DataColumn("fldPhone", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldPhone)
            Me.columnfldRnc = New DataColumn("fldRnc", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldRnc)
            Me.columnfldPassDescuento = New DataColumn("fldPassDescuento", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldPassDescuento)
            Me.columnfldPassConfig = New DataColumn("fldPassConfig", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldPassConfig)
            Me.columnfldPassAdmin = New DataColumn("fldPassAdmin", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldPassAdmin)
            Me.columnfldNotaRecepcion = New DataColumn("fldNotaRecepcion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldNotaRecepcion)
            Me.columnfldDiasVenceFC = New DataColumn("fldDiasVenceFC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldDiasVenceFC)
            Me.columnfldColorForm = New DataColumn("fldColorForm", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldColorForm)
            Me.columnfoto = New DataColumn("foto", GetType(System.Byte()), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfoto)
            Me.columnfldCompanyID.AutoIncrement = true
            Me.columnfldCompanyID.AllowDBNull = false
        End Sub
        
        Public Function Newtbl_profiledocumentRow() As tbl_profiledocumentRow
            Return CType(Me.NewRow,tbl_profiledocumentRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_profiledocumentRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_profiledocumentRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_profiledocumentRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_profiledocumentRowChanged(Me, New tbl_profiledocumentRowChangeEvent(CType(e.Row,tbl_profiledocumentRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_profiledocumentRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_profiledocumentRowChanging(Me, New tbl_profiledocumentRowChangeEvent(CType(e.Row,tbl_profiledocumentRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_profiledocumentRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_profiledocumentRowDeleted(Me, New tbl_profiledocumentRowChangeEvent(CType(e.Row,tbl_profiledocumentRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_profiledocumentRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_profiledocumentRowDeleting(Me, New tbl_profiledocumentRowChangeEvent(CType(e.Row,tbl_profiledocumentRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_profiledocumentRow(ByVal row As tbl_profiledocumentRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_profiledocumentRow
        Inherits DataRow
        
        Private tabletbl_profiledocument As tbl_profiledocumentDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_profiledocument = CType(Me.Table,tbl_profiledocumentDataTable)
        End Sub
        
        Public Property fldCompanyID As Integer
            Get
                Return CType(Me(Me.tabletbl_profiledocument.fldCompanyIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldCompanyIDColumn) = value
            End Set
        End Property
        
        Public Property fldCompany As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fldCompanyColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldCompanyColumn) = value
            End Set
        End Property
        
        Public Property fldAddress As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fldAddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldAddressColumn) = value
            End Set
        End Property
        
        Public Property fldPhone As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fldPhoneColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldPhoneColumn) = value
            End Set
        End Property
        
        Public Property fldRnc As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fldRncColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldRncColumn) = value
            End Set
        End Property
        
        Public Property fldPassDescuento As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fldPassDescuentoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldPassDescuentoColumn) = value
            End Set
        End Property
        
        Public Property fldPassConfig As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fldPassConfigColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldPassConfigColumn) = value
            End Set
        End Property
        
        Public Property fldPassAdmin As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fldPassAdminColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldPassAdminColumn) = value
            End Set
        End Property
        
        Public Property fldNotaRecepcion As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fldNotaRecepcionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldNotaRecepcionColumn) = value
            End Set
        End Property
        
        Public Property fldDiasVenceFC As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fldDiasVenceFCColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldDiasVenceFCColumn) = value
            End Set
        End Property
        
        Public Property fldColorForm As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fldColorFormColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fldColorFormColumn) = value
            End Set
        End Property
        
        Public Property foto As Byte()
            Get
                Try 
                    Return CType(Me(Me.tabletbl_profiledocument.fotoColumn),Byte())
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_profiledocument.fotoColumn) = value
            End Set
        End Property
        
        Public Function IsfldCompanyNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fldCompanyColumn)
        End Function
        
        Public Sub SetfldCompanyNull()
            Me(Me.tabletbl_profiledocument.fldCompanyColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldAddressNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fldAddressColumn)
        End Function
        
        Public Sub SetfldAddressNull()
            Me(Me.tabletbl_profiledocument.fldAddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldPhoneNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fldPhoneColumn)
        End Function
        
        Public Sub SetfldPhoneNull()
            Me(Me.tabletbl_profiledocument.fldPhoneColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldRncNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fldRncColumn)
        End Function
        
        Public Sub SetfldRncNull()
            Me(Me.tabletbl_profiledocument.fldRncColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldPassDescuentoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fldPassDescuentoColumn)
        End Function
        
        Public Sub SetfldPassDescuentoNull()
            Me(Me.tabletbl_profiledocument.fldPassDescuentoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldPassConfigNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fldPassConfigColumn)
        End Function
        
        Public Sub SetfldPassConfigNull()
            Me(Me.tabletbl_profiledocument.fldPassConfigColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldPassAdminNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fldPassAdminColumn)
        End Function
        
        Public Sub SetfldPassAdminNull()
            Me(Me.tabletbl_profiledocument.fldPassAdminColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldNotaRecepcionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fldNotaRecepcionColumn)
        End Function
        
        Public Sub SetfldNotaRecepcionNull()
            Me(Me.tabletbl_profiledocument.fldNotaRecepcionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldDiasVenceFCNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fldDiasVenceFCColumn)
        End Function
        
        Public Sub SetfldDiasVenceFCNull()
            Me(Me.tabletbl_profiledocument.fldDiasVenceFCColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldColorFormNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fldColorFormColumn)
        End Function
        
        Public Sub SetfldColorFormNull()
            Me(Me.tabletbl_profiledocument.fldColorFormColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfotoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_profiledocument.fotoColumn)
        End Function
        
        Public Sub SetfotoNull()
            Me(Me.tabletbl_profiledocument.fotoColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_profiledocumentRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_profiledocumentRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_profiledocumentRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_profiledocumentRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class cajaarqueoDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_id As DataColumn
        
        Private columnfld_fecha As DataColumn
        
        Private columnfld_estacion As DataColumn
        
        Private columnfld_usuario As DataColumn
        
        Private columnTextBox1 As DataColumn
        
        Private columnTextBox2 As DataColumn
        
        Private columnTextBox3 As DataColumn
        
        Private columnTextBox4 As DataColumn
        
        Private columnTextBox5 As DataColumn
        
        Private columnTextBox6 As DataColumn
        
        Private columnTextBox7 As DataColumn
        
        Private columnTextBox8 As DataColumn
        
        Private columnTextBox9 As DataColumn
        
        Private columnTextBox10 As DataColumn
        
        Private columnTextBox11 As DataColumn
        
        Private columnTextBox12 As DataColumn
        
        Private columnTextBox13 As DataColumn
        
        Private columnTextBox1_1 As DataColumn
        
        Private columnTextBox1_2 As DataColumn
        
        Private columnTextBox1_3 As DataColumn
        
        Private columnTextBox1_4 As DataColumn
        
        Private columnTextBox1_5 As DataColumn
        
        Private columnTextBox1_6 As DataColumn
        
        Private columnTextBox1_7 As DataColumn
        
        Private columnTextBox1_8 As DataColumn
        
        Private columnTextBox1_9 As DataColumn
        
        Private columnTextBox1_10 As DataColumn
        
        Private columnTextBox1_11 As DataColumn
        
        Private columnTextBox1_12 As DataColumn
        
        Private columnTextBox1_13 As DataColumn
        
        Private columnTextBox14 As DataColumn
        
        Private columnTextBox15 As DataColumn
        
        Private columnTextBox16 As DataColumn
        
        Private columnTextBox17 As DataColumn
        
        Private columnfld_cheques As DataColumn
        
        Friend Sub New()
            MyBase.New("cajaarqueo")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_idColumn As DataColumn
            Get
                Return Me.columnfld_id
            End Get
        End Property
        
        Friend ReadOnly Property fld_fechaColumn As DataColumn
            Get
                Return Me.columnfld_fecha
            End Get
        End Property
        
        Friend ReadOnly Property fld_estacionColumn As DataColumn
            Get
                Return Me.columnfld_estacion
            End Get
        End Property
        
        Friend ReadOnly Property fld_usuarioColumn As DataColumn
            Get
                Return Me.columnfld_usuario
            End Get
        End Property
        
        Friend ReadOnly Property TextBox1Column As DataColumn
            Get
                Return Me.columnTextBox1
            End Get
        End Property
        
        Friend ReadOnly Property TextBox2Column As DataColumn
            Get
                Return Me.columnTextBox2
            End Get
        End Property
        
        Friend ReadOnly Property TextBox3Column As DataColumn
            Get
                Return Me.columnTextBox3
            End Get
        End Property
        
        Friend ReadOnly Property TextBox4Column As DataColumn
            Get
                Return Me.columnTextBox4
            End Get
        End Property
        
        Friend ReadOnly Property TextBox5Column As DataColumn
            Get
                Return Me.columnTextBox5
            End Get
        End Property
        
        Friend ReadOnly Property TextBox6Column As DataColumn
            Get
                Return Me.columnTextBox6
            End Get
        End Property
        
        Friend ReadOnly Property TextBox7Column As DataColumn
            Get
                Return Me.columnTextBox7
            End Get
        End Property
        
        Friend ReadOnly Property TextBox8Column As DataColumn
            Get
                Return Me.columnTextBox8
            End Get
        End Property
        
        Friend ReadOnly Property TextBox9Column As DataColumn
            Get
                Return Me.columnTextBox9
            End Get
        End Property
        
        Friend ReadOnly Property TextBox10Column As DataColumn
            Get
                Return Me.columnTextBox10
            End Get
        End Property
        
        Friend ReadOnly Property TextBox11Column As DataColumn
            Get
                Return Me.columnTextBox11
            End Get
        End Property
        
        Friend ReadOnly Property TextBox12Column As DataColumn
            Get
                Return Me.columnTextBox12
            End Get
        End Property
        
        Friend ReadOnly Property TextBox13Column As DataColumn
            Get
                Return Me.columnTextBox13
            End Get
        End Property
        
        Friend ReadOnly Property TextBox1_1Column As DataColumn
            Get
                Return Me.columnTextBox1_1
            End Get
        End Property
        
        Friend ReadOnly Property TextBox1_2Column As DataColumn
            Get
                Return Me.columnTextBox1_2
            End Get
        End Property
        
        Friend ReadOnly Property TextBox1_3Column As DataColumn
            Get
                Return Me.columnTextBox1_3
            End Get
        End Property
        
        Friend ReadOnly Property TextBox1_4Column As DataColumn
            Get
                Return Me.columnTextBox1_4
            End Get
        End Property
        
        Friend ReadOnly Property TextBox1_5Column As DataColumn
            Get
                Return Me.columnTextBox1_5
            End Get
        End Property
        
        Friend ReadOnly Property TextBox1_6Column As DataColumn
            Get
                Return Me.columnTextBox1_6
            End Get
        End Property
        
        Friend ReadOnly Property TextBox1_7Column As DataColumn
            Get
                Return Me.columnTextBox1_7
            End Get
        End Property
        
        Friend ReadOnly Property TextBox1_8Column As DataColumn
            Get
                Return Me.columnTextBox1_8
            End Get
        End Property
        
        Friend ReadOnly Property TextBox1_9Column As DataColumn
            Get
                Return Me.columnTextBox1_9
            End Get
        End Property
        
        Friend ReadOnly Property TextBox1_10Column As DataColumn
            Get
                Return Me.columnTextBox1_10
            End Get
        End Property
        
        Friend ReadOnly Property TextBox1_11Column As DataColumn
            Get
                Return Me.columnTextBox1_11
            End Get
        End Property
        
        Friend ReadOnly Property TextBox1_12Column As DataColumn
            Get
                Return Me.columnTextBox1_12
            End Get
        End Property
        
        Friend ReadOnly Property TextBox1_13Column As DataColumn
            Get
                Return Me.columnTextBox1_13
            End Get
        End Property
        
        Friend ReadOnly Property TextBox14Column As DataColumn
            Get
                Return Me.columnTextBox14
            End Get
        End Property
        
        Friend ReadOnly Property TextBox15Column As DataColumn
            Get
                Return Me.columnTextBox15
            End Get
        End Property
        
        Friend ReadOnly Property TextBox16Column As DataColumn
            Get
                Return Me.columnTextBox16
            End Get
        End Property
        
        Friend ReadOnly Property TextBox17Column As DataColumn
            Get
                Return Me.columnTextBox17
            End Get
        End Property
        
        Friend ReadOnly Property fld_chequesColumn As DataColumn
            Get
                Return Me.columnfld_cheques
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As cajaarqueoRow
            Get
                Return CType(Me.Rows(index),cajaarqueoRow)
            End Get
        End Property
        
        Public Event cajaarqueoRowChanged As cajaarqueoRowChangeEventHandler
        
        Public Event cajaarqueoRowChanging As cajaarqueoRowChangeEventHandler
        
        Public Event cajaarqueoRowDeleted As cajaarqueoRowChangeEventHandler
        
        Public Event cajaarqueoRowDeleting As cajaarqueoRowChangeEventHandler
        
        Public Overloads Sub AddcajaarqueoRow(ByVal row As cajaarqueoRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddcajaarqueoRow( _
                    ByVal fld_id As Integer,  _
                    ByVal fld_fecha As Date,  _
                    ByVal fld_estacion As String,  _
                    ByVal fld_usuario As String,  _
                    ByVal TextBox1 As Double,  _
                    ByVal TextBox2 As Double,  _
                    ByVal TextBox3 As Double,  _
                    ByVal TextBox4 As Double,  _
                    ByVal TextBox5 As Double,  _
                    ByVal TextBox6 As Double,  _
                    ByVal TextBox7 As Double,  _
                    ByVal TextBox8 As Double,  _
                    ByVal TextBox9 As Double,  _
                    ByVal TextBox10 As Double,  _
                    ByVal TextBox11 As Double,  _
                    ByVal TextBox12 As Double,  _
                    ByVal TextBox13 As Double,  _
                    ByVal TextBox1_1 As Double,  _
                    ByVal TextBox1_2 As Double,  _
                    ByVal TextBox1_3 As Double,  _
                    ByVal TextBox1_4 As Double,  _
                    ByVal TextBox1_5 As Double,  _
                    ByVal TextBox1_6 As Double,  _
                    ByVal TextBox1_7 As Double,  _
                    ByVal TextBox1_8 As Double,  _
                    ByVal TextBox1_9 As Double,  _
                    ByVal TextBox1_10 As Double,  _
                    ByVal TextBox1_11 As Double,  _
                    ByVal TextBox1_12 As Double,  _
                    ByVal TextBox1_13 As Double,  _
                    ByVal TextBox14 As Double,  _
                    ByVal TextBox15 As Double,  _
                    ByVal TextBox16 As Double,  _
                    ByVal TextBox17 As Double,  _
                    ByVal fld_cheques As Double) As cajaarqueoRow
            Dim rowcajaarqueoRow As cajaarqueoRow = CType(Me.NewRow,cajaarqueoRow)
            rowcajaarqueoRow.ItemArray = New Object() {fld_id, fld_fecha, fld_estacion, fld_usuario, TextBox1, TextBox2, TextBox3, TextBox4, TextBox5, TextBox6, TextBox7, TextBox8, TextBox9, TextBox10, TextBox11, TextBox12, TextBox13, TextBox1_1, TextBox1_2, TextBox1_3, TextBox1_4, TextBox1_5, TextBox1_6, TextBox1_7, TextBox1_8, TextBox1_9, TextBox1_10, TextBox1_11, TextBox1_12, TextBox1_13, TextBox14, TextBox15, TextBox16, TextBox17, fld_cheques}
            Me.Rows.Add(rowcajaarqueoRow)
            Return rowcajaarqueoRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As cajaarqueoDataTable = CType(MyBase.Clone,cajaarqueoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New cajaarqueoDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_id = Me.Columns("fld_id")
            Me.columnfld_fecha = Me.Columns("fld_fecha")
            Me.columnfld_estacion = Me.Columns("fld_estacion")
            Me.columnfld_usuario = Me.Columns("fld_usuario")
            Me.columnTextBox1 = Me.Columns("TextBox1")
            Me.columnTextBox2 = Me.Columns("TextBox2")
            Me.columnTextBox3 = Me.Columns("TextBox3")
            Me.columnTextBox4 = Me.Columns("TextBox4")
            Me.columnTextBox5 = Me.Columns("TextBox5")
            Me.columnTextBox6 = Me.Columns("TextBox6")
            Me.columnTextBox7 = Me.Columns("TextBox7")
            Me.columnTextBox8 = Me.Columns("TextBox8")
            Me.columnTextBox9 = Me.Columns("TextBox9")
            Me.columnTextBox10 = Me.Columns("TextBox10")
            Me.columnTextBox11 = Me.Columns("TextBox11")
            Me.columnTextBox12 = Me.Columns("TextBox12")
            Me.columnTextBox13 = Me.Columns("TextBox13")
            Me.columnTextBox1_1 = Me.Columns("TextBox1_1")
            Me.columnTextBox1_2 = Me.Columns("TextBox1_2")
            Me.columnTextBox1_3 = Me.Columns("TextBox1_3")
            Me.columnTextBox1_4 = Me.Columns("TextBox1_4")
            Me.columnTextBox1_5 = Me.Columns("TextBox1_5")
            Me.columnTextBox1_6 = Me.Columns("TextBox1_6")
            Me.columnTextBox1_7 = Me.Columns("TextBox1_7")
            Me.columnTextBox1_8 = Me.Columns("TextBox1_8")
            Me.columnTextBox1_9 = Me.Columns("TextBox1_9")
            Me.columnTextBox1_10 = Me.Columns("TextBox1_10")
            Me.columnTextBox1_11 = Me.Columns("TextBox1_11")
            Me.columnTextBox1_12 = Me.Columns("TextBox1_12")
            Me.columnTextBox1_13 = Me.Columns("TextBox1_13")
            Me.columnTextBox14 = Me.Columns("TextBox14")
            Me.columnTextBox15 = Me.Columns("TextBox15")
            Me.columnTextBox16 = Me.Columns("TextBox16")
            Me.columnTextBox17 = Me.Columns("TextBox17")
            Me.columnfld_cheques = Me.Columns("fld_cheques")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_id = New DataColumn("fld_id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id)
            Me.columnfld_fecha = New DataColumn("fld_fecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_fecha)
            Me.columnfld_estacion = New DataColumn("fld_estacion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_estacion)
            Me.columnfld_usuario = New DataColumn("fld_usuario", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_usuario)
            Me.columnTextBox1 = New DataColumn("TextBox1", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox1)
            Me.columnTextBox2 = New DataColumn("TextBox2", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox2)
            Me.columnTextBox3 = New DataColumn("TextBox3", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox3)
            Me.columnTextBox4 = New DataColumn("TextBox4", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox4)
            Me.columnTextBox5 = New DataColumn("TextBox5", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox5)
            Me.columnTextBox6 = New DataColumn("TextBox6", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox6)
            Me.columnTextBox7 = New DataColumn("TextBox7", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox7)
            Me.columnTextBox8 = New DataColumn("TextBox8", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox8)
            Me.columnTextBox9 = New DataColumn("TextBox9", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox9)
            Me.columnTextBox10 = New DataColumn("TextBox10", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox10)
            Me.columnTextBox11 = New DataColumn("TextBox11", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox11)
            Me.columnTextBox12 = New DataColumn("TextBox12", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox12)
            Me.columnTextBox13 = New DataColumn("TextBox13", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox13)
            Me.columnTextBox1_1 = New DataColumn("TextBox1_1", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox1_1)
            Me.columnTextBox1_2 = New DataColumn("TextBox1_2", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox1_2)
            Me.columnTextBox1_3 = New DataColumn("TextBox1_3", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox1_3)
            Me.columnTextBox1_4 = New DataColumn("TextBox1_4", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox1_4)
            Me.columnTextBox1_5 = New DataColumn("TextBox1_5", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox1_5)
            Me.columnTextBox1_6 = New DataColumn("TextBox1_6", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox1_6)
            Me.columnTextBox1_7 = New DataColumn("TextBox1_7", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox1_7)
            Me.columnTextBox1_8 = New DataColumn("TextBox1_8", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox1_8)
            Me.columnTextBox1_9 = New DataColumn("TextBox1_9", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox1_9)
            Me.columnTextBox1_10 = New DataColumn("TextBox1_10", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox1_10)
            Me.columnTextBox1_11 = New DataColumn("TextBox1_11", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox1_11)
            Me.columnTextBox1_12 = New DataColumn("TextBox1_12", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox1_12)
            Me.columnTextBox1_13 = New DataColumn("TextBox1_13", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox1_13)
            Me.columnTextBox14 = New DataColumn("TextBox14", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox14)
            Me.columnTextBox15 = New DataColumn("TextBox15", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox15)
            Me.columnTextBox16 = New DataColumn("TextBox16", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox16)
            Me.columnTextBox17 = New DataColumn("TextBox17", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTextBox17)
            Me.columnfld_cheques = New DataColumn("fld_cheques", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_cheques)
        End Sub
        
        Public Function NewcajaarqueoRow() As cajaarqueoRow
            Return CType(Me.NewRow,cajaarqueoRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New cajaarqueoRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(cajaarqueoRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.cajaarqueoRowChangedEvent) Is Nothing) Then
                RaiseEvent cajaarqueoRowChanged(Me, New cajaarqueoRowChangeEvent(CType(e.Row,cajaarqueoRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.cajaarqueoRowChangingEvent) Is Nothing) Then
                RaiseEvent cajaarqueoRowChanging(Me, New cajaarqueoRowChangeEvent(CType(e.Row,cajaarqueoRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.cajaarqueoRowDeletedEvent) Is Nothing) Then
                RaiseEvent cajaarqueoRowDeleted(Me, New cajaarqueoRowChangeEvent(CType(e.Row,cajaarqueoRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.cajaarqueoRowDeletingEvent) Is Nothing) Then
                RaiseEvent cajaarqueoRowDeleting(Me, New cajaarqueoRowChangeEvent(CType(e.Row,cajaarqueoRow), e.Action))
            End If
        End Sub
        
        Public Sub RemovecajaarqueoRow(ByVal row As cajaarqueoRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class cajaarqueoRow
        Inherits DataRow
        
        Private tablecajaarqueo As cajaarqueoDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tablecajaarqueo = CType(Me.Table,cajaarqueoDataTable)
        End Sub
        
        Public Property fld_id As Integer
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.fld_idColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.fld_idColumn) = value
            End Set
        End Property
        
        Public Property fld_fecha As Date
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.fld_fechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.fld_fechaColumn) = value
            End Set
        End Property
        
        Public Property fld_estacion As String
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.fld_estacionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.fld_estacionColumn) = value
            End Set
        End Property
        
        Public Property fld_usuario As String
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.fld_usuarioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.fld_usuarioColumn) = value
            End Set
        End Property
        
        Public Property TextBox1 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox1Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox1Column) = value
            End Set
        End Property
        
        Public Property TextBox2 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox2Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox2Column) = value
            End Set
        End Property
        
        Public Property TextBox3 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox3Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox3Column) = value
            End Set
        End Property
        
        Public Property TextBox4 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox4Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox4Column) = value
            End Set
        End Property
        
        Public Property TextBox5 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox5Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox5Column) = value
            End Set
        End Property
        
        Public Property TextBox6 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox6Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox6Column) = value
            End Set
        End Property
        
        Public Property TextBox7 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox7Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox7Column) = value
            End Set
        End Property
        
        Public Property TextBox8 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox8Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox8Column) = value
            End Set
        End Property
        
        Public Property TextBox9 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox9Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox9Column) = value
            End Set
        End Property
        
        Public Property TextBox10 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox10Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox10Column) = value
            End Set
        End Property
        
        Public Property TextBox11 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox11Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox11Column) = value
            End Set
        End Property
        
        Public Property TextBox12 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox12Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox12Column) = value
            End Set
        End Property
        
        Public Property TextBox13 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox13Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox13Column) = value
            End Set
        End Property
        
        Public Property TextBox1_1 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox1_1Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox1_1Column) = value
            End Set
        End Property
        
        Public Property TextBox1_2 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox1_2Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox1_2Column) = value
            End Set
        End Property
        
        Public Property TextBox1_3 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox1_3Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox1_3Column) = value
            End Set
        End Property
        
        Public Property TextBox1_4 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox1_4Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox1_4Column) = value
            End Set
        End Property
        
        Public Property TextBox1_5 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox1_5Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox1_5Column) = value
            End Set
        End Property
        
        Public Property TextBox1_6 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox1_6Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox1_6Column) = value
            End Set
        End Property
        
        Public Property TextBox1_7 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox1_7Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox1_7Column) = value
            End Set
        End Property
        
        Public Property TextBox1_8 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox1_8Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox1_8Column) = value
            End Set
        End Property
        
        Public Property TextBox1_9 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox1_9Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox1_9Column) = value
            End Set
        End Property
        
        Public Property TextBox1_10 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox1_10Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox1_10Column) = value
            End Set
        End Property
        
        Public Property TextBox1_11 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox1_11Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox1_11Column) = value
            End Set
        End Property
        
        Public Property TextBox1_12 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox1_12Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox1_12Column) = value
            End Set
        End Property
        
        Public Property TextBox1_13 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox1_13Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox1_13Column) = value
            End Set
        End Property
        
        Public Property TextBox14 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox14Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox14Column) = value
            End Set
        End Property
        
        Public Property TextBox15 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox15Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox15Column) = value
            End Set
        End Property
        
        Public Property TextBox16 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox16Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox16Column) = value
            End Set
        End Property
        
        Public Property TextBox17 As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.TextBox17Column),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.TextBox17Column) = value
            End Set
        End Property
        
        Public Property fld_cheques As Double
            Get
                Try 
                    Return CType(Me(Me.tablecajaarqueo.fld_chequesColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecajaarqueo.fld_chequesColumn) = value
            End Set
        End Property
        
        Public Function Isfld_idNull() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.fld_idColumn)
        End Function
        
        Public Sub Setfld_idNull()
            Me(Me.tablecajaarqueo.fld_idColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_fechaNull() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.fld_fechaColumn)
        End Function
        
        Public Sub Setfld_fechaNull()
            Me(Me.tablecajaarqueo.fld_fechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_estacionNull() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.fld_estacionColumn)
        End Function
        
        Public Sub Setfld_estacionNull()
            Me(Me.tablecajaarqueo.fld_estacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_usuarioNull() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.fld_usuarioColumn)
        End Function
        
        Public Sub Setfld_usuarioNull()
            Me(Me.tablecajaarqueo.fld_usuarioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox1Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox1Column)
        End Function
        
        Public Sub SetTextBox1Null()
            Me(Me.tablecajaarqueo.TextBox1Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox2Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox2Column)
        End Function
        
        Public Sub SetTextBox2Null()
            Me(Me.tablecajaarqueo.TextBox2Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox3Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox3Column)
        End Function
        
        Public Sub SetTextBox3Null()
            Me(Me.tablecajaarqueo.TextBox3Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox4Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox4Column)
        End Function
        
        Public Sub SetTextBox4Null()
            Me(Me.tablecajaarqueo.TextBox4Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox5Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox5Column)
        End Function
        
        Public Sub SetTextBox5Null()
            Me(Me.tablecajaarqueo.TextBox5Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox6Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox6Column)
        End Function
        
        Public Sub SetTextBox6Null()
            Me(Me.tablecajaarqueo.TextBox6Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox7Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox7Column)
        End Function
        
        Public Sub SetTextBox7Null()
            Me(Me.tablecajaarqueo.TextBox7Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox8Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox8Column)
        End Function
        
        Public Sub SetTextBox8Null()
            Me(Me.tablecajaarqueo.TextBox8Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox9Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox9Column)
        End Function
        
        Public Sub SetTextBox9Null()
            Me(Me.tablecajaarqueo.TextBox9Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox10Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox10Column)
        End Function
        
        Public Sub SetTextBox10Null()
            Me(Me.tablecajaarqueo.TextBox10Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox11Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox11Column)
        End Function
        
        Public Sub SetTextBox11Null()
            Me(Me.tablecajaarqueo.TextBox11Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox12Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox12Column)
        End Function
        
        Public Sub SetTextBox12Null()
            Me(Me.tablecajaarqueo.TextBox12Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox13Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox13Column)
        End Function
        
        Public Sub SetTextBox13Null()
            Me(Me.tablecajaarqueo.TextBox13Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox1_1Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox1_1Column)
        End Function
        
        Public Sub SetTextBox1_1Null()
            Me(Me.tablecajaarqueo.TextBox1_1Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox1_2Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox1_2Column)
        End Function
        
        Public Sub SetTextBox1_2Null()
            Me(Me.tablecajaarqueo.TextBox1_2Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox1_3Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox1_3Column)
        End Function
        
        Public Sub SetTextBox1_3Null()
            Me(Me.tablecajaarqueo.TextBox1_3Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox1_4Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox1_4Column)
        End Function
        
        Public Sub SetTextBox1_4Null()
            Me(Me.tablecajaarqueo.TextBox1_4Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox1_5Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox1_5Column)
        End Function
        
        Public Sub SetTextBox1_5Null()
            Me(Me.tablecajaarqueo.TextBox1_5Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox1_6Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox1_6Column)
        End Function
        
        Public Sub SetTextBox1_6Null()
            Me(Me.tablecajaarqueo.TextBox1_6Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox1_7Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox1_7Column)
        End Function
        
        Public Sub SetTextBox1_7Null()
            Me(Me.tablecajaarqueo.TextBox1_7Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox1_8Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox1_8Column)
        End Function
        
        Public Sub SetTextBox1_8Null()
            Me(Me.tablecajaarqueo.TextBox1_8Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox1_9Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox1_9Column)
        End Function
        
        Public Sub SetTextBox1_9Null()
            Me(Me.tablecajaarqueo.TextBox1_9Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox1_10Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox1_10Column)
        End Function
        
        Public Sub SetTextBox1_10Null()
            Me(Me.tablecajaarqueo.TextBox1_10Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox1_11Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox1_11Column)
        End Function
        
        Public Sub SetTextBox1_11Null()
            Me(Me.tablecajaarqueo.TextBox1_11Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox1_12Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox1_12Column)
        End Function
        
        Public Sub SetTextBox1_12Null()
            Me(Me.tablecajaarqueo.TextBox1_12Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox1_13Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox1_13Column)
        End Function
        
        Public Sub SetTextBox1_13Null()
            Me(Me.tablecajaarqueo.TextBox1_13Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox14Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox14Column)
        End Function
        
        Public Sub SetTextBox14Null()
            Me(Me.tablecajaarqueo.TextBox14Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox15Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox15Column)
        End Function
        
        Public Sub SetTextBox15Null()
            Me(Me.tablecajaarqueo.TextBox15Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox16Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox16Column)
        End Function
        
        Public Sub SetTextBox16Null()
            Me(Me.tablecajaarqueo.TextBox16Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsTextBox17Null() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.TextBox17Column)
        End Function
        
        Public Sub SetTextBox17Null()
            Me(Me.tablecajaarqueo.TextBox17Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_chequesNull() As Boolean
            Return Me.IsNull(Me.tablecajaarqueo.fld_chequesColumn)
        End Function
        
        Public Sub Setfld_chequesNull()
            Me(Me.tablecajaarqueo.fld_chequesColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class cajaarqueoRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As cajaarqueoRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As cajaarqueoRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As cajaarqueoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_recibo_ingresos_cxcDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfld_Id_RI As DataColumn
        
        Private columnfld_date As DataColumn
        
        Private columnfld_socio As DataColumn
        
        Private columnfld_concepto As DataColumn
        
        Private columnfld_monto As DataColumn
        
        Private columnDescripcion As DataColumn
        
        Private columnfld_id_cliente_ri As DataColumn
        
        Private columnfld_interes_cobrado As DataColumn
        
        Private columnfld_capital_cobrado As DataColumn
        
        Private columnfld_mora_cobrada As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_recibo_ingresos_cxc")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fld_Id_RIColumn As DataColumn
            Get
                Return Me.columnfld_Id_RI
            End Get
        End Property
        
        Friend ReadOnly Property fld_dateColumn As DataColumn
            Get
                Return Me.columnfld_date
            End Get
        End Property
        
        Friend ReadOnly Property fld_socioColumn As DataColumn
            Get
                Return Me.columnfld_socio
            End Get
        End Property
        
        Friend ReadOnly Property fld_conceptoColumn As DataColumn
            Get
                Return Me.columnfld_concepto
            End Get
        End Property
        
        Friend ReadOnly Property fld_montoColumn As DataColumn
            Get
                Return Me.columnfld_monto
            End Get
        End Property
        
        Friend ReadOnly Property DescripcionColumn As DataColumn
            Get
                Return Me.columnDescripcion
            End Get
        End Property
        
        Friend ReadOnly Property fld_id_cliente_riColumn As DataColumn
            Get
                Return Me.columnfld_id_cliente_ri
            End Get
        End Property
        
        Friend ReadOnly Property fld_interes_cobradoColumn As DataColumn
            Get
                Return Me.columnfld_interes_cobrado
            End Get
        End Property
        
        Friend ReadOnly Property fld_capital_cobradoColumn As DataColumn
            Get
                Return Me.columnfld_capital_cobrado
            End Get
        End Property
        
        Friend ReadOnly Property fld_mora_cobradaColumn As DataColumn
            Get
                Return Me.columnfld_mora_cobrada
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_recibo_ingresos_cxcRow
            Get
                Return CType(Me.Rows(index),tbl_recibo_ingresos_cxcRow)
            End Get
        End Property
        
        Public Event tbl_recibo_ingresos_cxcRowChanged As tbl_recibo_ingresos_cxcRowChangeEventHandler
        
        Public Event tbl_recibo_ingresos_cxcRowChanging As tbl_recibo_ingresos_cxcRowChangeEventHandler
        
        Public Event tbl_recibo_ingresos_cxcRowDeleted As tbl_recibo_ingresos_cxcRowChangeEventHandler
        
        Public Event tbl_recibo_ingresos_cxcRowDeleting As tbl_recibo_ingresos_cxcRowChangeEventHandler
        
        Public Overloads Sub Addtbl_recibo_ingresos_cxcRow(ByVal row As tbl_recibo_ingresos_cxcRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_recibo_ingresos_cxcRow(ByVal fld_Id_RI As Integer, ByVal fld_date As Date, ByVal fld_socio As String, ByVal fld_concepto As String, ByVal fld_monto As Decimal, ByVal Descripcion As String, ByVal fld_id_cliente_ri As Integer, ByVal fld_interes_cobrado As Decimal, ByVal fld_capital_cobrado As Decimal, ByVal fld_mora_cobrada As Decimal) As tbl_recibo_ingresos_cxcRow
            Dim rowtbl_recibo_ingresos_cxcRow As tbl_recibo_ingresos_cxcRow = CType(Me.NewRow,tbl_recibo_ingresos_cxcRow)
            rowtbl_recibo_ingresos_cxcRow.ItemArray = New Object() {fld_Id_RI, fld_date, fld_socio, fld_concepto, fld_monto, Descripcion, fld_id_cliente_ri, fld_interes_cobrado, fld_capital_cobrado, fld_mora_cobrada}
            Me.Rows.Add(rowtbl_recibo_ingresos_cxcRow)
            Return rowtbl_recibo_ingresos_cxcRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_recibo_ingresos_cxcDataTable = CType(MyBase.Clone,tbl_recibo_ingresos_cxcDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_recibo_ingresos_cxcDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfld_Id_RI = Me.Columns("fld_Id_RI")
            Me.columnfld_date = Me.Columns("fld_date")
            Me.columnfld_socio = Me.Columns("fld_socio")
            Me.columnfld_concepto = Me.Columns("fld_concepto")
            Me.columnfld_monto = Me.Columns("fld_monto")
            Me.columnDescripcion = Me.Columns("Descripcion")
            Me.columnfld_id_cliente_ri = Me.Columns("fld_id_cliente_ri")
            Me.columnfld_interes_cobrado = Me.Columns("fld_interes_cobrado")
            Me.columnfld_capital_cobrado = Me.Columns("fld_capital_cobrado")
            Me.columnfld_mora_cobrada = Me.Columns("fld_mora_cobrada")
        End Sub
        
        Private Sub InitClass()
            Me.columnfld_Id_RI = New DataColumn("fld_Id_RI", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_Id_RI)
            Me.columnfld_date = New DataColumn("fld_date", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_date)
            Me.columnfld_socio = New DataColumn("fld_socio", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_socio)
            Me.columnfld_concepto = New DataColumn("fld_concepto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_concepto)
            Me.columnfld_monto = New DataColumn("fld_monto", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_monto)
            Me.columnDescripcion = New DataColumn("Descripcion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDescripcion)
            Me.columnfld_id_cliente_ri = New DataColumn("fld_id_cliente_ri", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_id_cliente_ri)
            Me.columnfld_interes_cobrado = New DataColumn("fld_interes_cobrado", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_interes_cobrado)
            Me.columnfld_capital_cobrado = New DataColumn("fld_capital_cobrado", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_capital_cobrado)
            Me.columnfld_mora_cobrada = New DataColumn("fld_mora_cobrada", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfld_mora_cobrada)
        End Sub
        
        Public Function Newtbl_recibo_ingresos_cxcRow() As tbl_recibo_ingresos_cxcRow
            Return CType(Me.NewRow,tbl_recibo_ingresos_cxcRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_recibo_ingresos_cxcRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_recibo_ingresos_cxcRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_recibo_ingresos_cxcRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_recibo_ingresos_cxcRowChanged(Me, New tbl_recibo_ingresos_cxcRowChangeEvent(CType(e.Row,tbl_recibo_ingresos_cxcRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_recibo_ingresos_cxcRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_recibo_ingresos_cxcRowChanging(Me, New tbl_recibo_ingresos_cxcRowChangeEvent(CType(e.Row,tbl_recibo_ingresos_cxcRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_recibo_ingresos_cxcRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_recibo_ingresos_cxcRowDeleted(Me, New tbl_recibo_ingresos_cxcRowChangeEvent(CType(e.Row,tbl_recibo_ingresos_cxcRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_recibo_ingresos_cxcRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_recibo_ingresos_cxcRowDeleting(Me, New tbl_recibo_ingresos_cxcRowChangeEvent(CType(e.Row,tbl_recibo_ingresos_cxcRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_recibo_ingresos_cxcRow(ByVal row As tbl_recibo_ingresos_cxcRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_recibo_ingresos_cxcRow
        Inherits DataRow
        
        Private tabletbl_recibo_ingresos_cxc As tbl_recibo_ingresos_cxcDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_recibo_ingresos_cxc = CType(Me.Table,tbl_recibo_ingresos_cxcDataTable)
        End Sub
        
        Public Property fld_Id_RI As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_Id_RIColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_Id_RIColumn) = value
            End Set
        End Property
        
        Public Property fld_date As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_dateColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_dateColumn) = value
            End Set
        End Property
        
        Public Property fld_socio As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_socioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_socioColumn) = value
            End Set
        End Property
        
        Public Property fld_concepto As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_conceptoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_conceptoColumn) = value
            End Set
        End Property
        
        Public Property fld_monto As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_montoColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_montoColumn) = value
            End Set
        End Property
        
        Public Property Descripcion As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.DescripcionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.DescripcionColumn) = value
            End Set
        End Property
        
        Public Property fld_id_cliente_ri As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_id_cliente_riColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_id_cliente_riColumn) = value
            End Set
        End Property
        
        Public Property fld_interes_cobrado As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_interes_cobradoColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_interes_cobradoColumn) = value
            End Set
        End Property
        
        Public Property fld_capital_cobrado As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_capital_cobradoColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_capital_cobradoColumn) = value
            End Set
        End Property
        
        Public Property fld_mora_cobrada As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_ingresos_cxc.fld_mora_cobradaColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_ingresos_cxc.fld_mora_cobradaColumn) = value
            End Set
        End Property
        
        Public Function Isfld_Id_RINull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_Id_RIColumn)
        End Function
        
        Public Sub Setfld_Id_RINull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_Id_RIColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_dateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_dateColumn)
        End Function
        
        Public Sub Setfld_dateNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_dateColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_socioNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_socioColumn)
        End Function
        
        Public Sub Setfld_socioNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_socioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_conceptoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_conceptoColumn)
        End Function
        
        Public Sub Setfld_conceptoNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_conceptoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_montoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_montoColumn)
        End Function
        
        Public Sub Setfld_montoNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_montoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDescripcionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.DescripcionColumn)
        End Function
        
        Public Sub SetDescripcionNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.DescripcionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_id_cliente_riNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_id_cliente_riColumn)
        End Function
        
        Public Sub Setfld_id_cliente_riNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_id_cliente_riColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_interes_cobradoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_interes_cobradoColumn)
        End Function
        
        Public Sub Setfld_interes_cobradoNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_interes_cobradoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_capital_cobradoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_capital_cobradoColumn)
        End Function
        
        Public Sub Setfld_capital_cobradoNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_capital_cobradoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isfld_mora_cobradaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_ingresos_cxc.fld_mora_cobradaColumn)
        End Function
        
        Public Sub Setfld_mora_cobradaNull()
            Me(Me.tabletbl_recibo_ingresos_cxc.fld_mora_cobradaColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_recibo_ingresos_cxcRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_recibo_ingresos_cxcRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_recibo_ingresos_cxcRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_recibo_ingresos_cxcRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_recibo_egresosDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnfldIdDoc As DataColumn
        
        Private columnfldFecha As DataColumn
        
        Private columnfldEntregado As DataColumn
        
        Private columnfldConcepto As DataColumn
        
        Private columnfldMonto As DataColumn
        
        Private columnDescripcion As DataColumn
        
        Friend Sub New()
            MyBase.New("tbl_recibo_egresos")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property fldIdDocColumn As DataColumn
            Get
                Return Me.columnfldIdDoc
            End Get
        End Property
        
        Friend ReadOnly Property fldFechaColumn As DataColumn
            Get
                Return Me.columnfldFecha
            End Get
        End Property
        
        Friend ReadOnly Property fldEntregadoColumn As DataColumn
            Get
                Return Me.columnfldEntregado
            End Get
        End Property
        
        Friend ReadOnly Property fldConceptoColumn As DataColumn
            Get
                Return Me.columnfldConcepto
            End Get
        End Property
        
        Friend ReadOnly Property fldMontoColumn As DataColumn
            Get
                Return Me.columnfldMonto
            End Get
        End Property
        
        Friend ReadOnly Property DescripcionColumn As DataColumn
            Get
                Return Me.columnDescripcion
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_recibo_egresosRow
            Get
                Return CType(Me.Rows(index),tbl_recibo_egresosRow)
            End Get
        End Property
        
        Public Event tbl_recibo_egresosRowChanged As tbl_recibo_egresosRowChangeEventHandler
        
        Public Event tbl_recibo_egresosRowChanging As tbl_recibo_egresosRowChangeEventHandler
        
        Public Event tbl_recibo_egresosRowDeleted As tbl_recibo_egresosRowChangeEventHandler
        
        Public Event tbl_recibo_egresosRowDeleting As tbl_recibo_egresosRowChangeEventHandler
        
        Public Overloads Sub Addtbl_recibo_egresosRow(ByVal row As tbl_recibo_egresosRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtbl_recibo_egresosRow(ByVal fldIdDoc As Integer, ByVal fldFecha As Date, ByVal fldEntregado As String, ByVal fldConcepto As String, ByVal fldMonto As Decimal, ByVal Descripcion As String) As tbl_recibo_egresosRow
            Dim rowtbl_recibo_egresosRow As tbl_recibo_egresosRow = CType(Me.NewRow,tbl_recibo_egresosRow)
            rowtbl_recibo_egresosRow.ItemArray = New Object() {fldIdDoc, fldFecha, fldEntregado, fldConcepto, fldMonto, Descripcion}
            Me.Rows.Add(rowtbl_recibo_egresosRow)
            Return rowtbl_recibo_egresosRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tbl_recibo_egresosDataTable = CType(MyBase.Clone,tbl_recibo_egresosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tbl_recibo_egresosDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnfldIdDoc = Me.Columns("fldIdDoc")
            Me.columnfldFecha = Me.Columns("fldFecha")
            Me.columnfldEntregado = Me.Columns("fldEntregado")
            Me.columnfldConcepto = Me.Columns("fldConcepto")
            Me.columnfldMonto = Me.Columns("fldMonto")
            Me.columnDescripcion = Me.Columns("Descripcion")
        End Sub
        
        Private Sub InitClass()
            Me.columnfldIdDoc = New DataColumn("fldIdDoc", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldIdDoc)
            Me.columnfldFecha = New DataColumn("fldFecha", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldFecha)
            Me.columnfldEntregado = New DataColumn("fldEntregado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldEntregado)
            Me.columnfldConcepto = New DataColumn("fldConcepto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldConcepto)
            Me.columnfldMonto = New DataColumn("fldMonto", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfldMonto)
            Me.columnDescripcion = New DataColumn("Descripcion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDescripcion)
        End Sub
        
        Public Function Newtbl_recibo_egresosRow() As tbl_recibo_egresosRow
            Return CType(Me.NewRow,tbl_recibo_egresosRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tbl_recibo_egresosRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tbl_recibo_egresosRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_recibo_egresosRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_recibo_egresosRowChanged(Me, New tbl_recibo_egresosRowChangeEvent(CType(e.Row,tbl_recibo_egresosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_recibo_egresosRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_recibo_egresosRowChanging(Me, New tbl_recibo_egresosRowChangeEvent(CType(e.Row,tbl_recibo_egresosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_recibo_egresosRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_recibo_egresosRowDeleted(Me, New tbl_recibo_egresosRowChangeEvent(CType(e.Row,tbl_recibo_egresosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_recibo_egresosRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_recibo_egresosRowDeleting(Me, New tbl_recibo_egresosRowChangeEvent(CType(e.Row,tbl_recibo_egresosRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetbl_recibo_egresosRow(ByVal row As tbl_recibo_egresosRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_recibo_egresosRow
        Inherits DataRow
        
        Private tabletbl_recibo_egresos As tbl_recibo_egresosDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_recibo_egresos = CType(Me.Table,tbl_recibo_egresosDataTable)
        End Sub
        
        Public Property fldIdDoc As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_egresos.fldIdDocColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_egresos.fldIdDocColumn) = value
            End Set
        End Property
        
        Public Property fldFecha As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_egresos.fldFechaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_egresos.fldFechaColumn) = value
            End Set
        End Property
        
        Public Property fldEntregado As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_egresos.fldEntregadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_egresos.fldEntregadoColumn) = value
            End Set
        End Property
        
        Public Property fldConcepto As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_egresos.fldConceptoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_egresos.fldConceptoColumn) = value
            End Set
        End Property
        
        Public Property fldMonto As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_egresos.fldMontoColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_egresos.fldMontoColumn) = value
            End Set
        End Property
        
        Public Property Descripcion As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_recibo_egresos.DescripcionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_recibo_egresos.DescripcionColumn) = value
            End Set
        End Property
        
        Public Function IsfldIdDocNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_egresos.fldIdDocColumn)
        End Function
        
        Public Sub SetfldIdDocNull()
            Me(Me.tabletbl_recibo_egresos.fldIdDocColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldFechaNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_egresos.fldFechaColumn)
        End Function
        
        Public Sub SetfldFechaNull()
            Me(Me.tabletbl_recibo_egresos.fldFechaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldEntregadoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_egresos.fldEntregadoColumn)
        End Function
        
        Public Sub SetfldEntregadoNull()
            Me(Me.tabletbl_recibo_egresos.fldEntregadoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldConceptoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_egresos.fldConceptoColumn)
        End Function
        
        Public Sub SetfldConceptoNull()
            Me(Me.tabletbl_recibo_egresos.fldConceptoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfldMontoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_egresos.fldMontoColumn)
        End Function
        
        Public Sub SetfldMontoNull()
            Me(Me.tabletbl_recibo_egresos.fldMontoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDescripcionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_recibo_egresos.DescripcionColumn)
        End Function
        
        Public Sub SetDescripcionNull()
            Me(Me.tabletbl_recibo_egresos.DescripcionColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tbl_recibo_egresosRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tbl_recibo_egresosRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tbl_recibo_egresosRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tbl_recibo_egresosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
